package connection

import (
    plog "github.com/komand/plugin-sdk-go2/log"
)

// CustomConnectionParams is where you the developer will fill in any custom properties, which you would need
// to use or work with in Connect. One example might be any client libraries or supporting properties for working
// with the client libraries you need, but don't want to lose if you regenerate the plugin
type CustomConnectionParams struct {
    // Your custom properties below
}

// Connect is the custom code for the developer to write to fully initialize and return a
// ready to use Connection object.
func Connect(cd *ConnectionData, log *plog.Logger) (*Connection, error) {
    conn := &Connection{}
    // Your code here
    // Take the connection data and turn it into the Connection object
    // Then, initialize any state, such as the actual api connection to the third party
    // Finally, pass back the connection, nil for success
    // Otherwise, nil, error for failure

    // Make sure to ONLY use log.Info and log.Infof to log any custom code

    return conn, nil
}

// Validate will ensure the Connection was created correctly
func (c *Connection) Validate() []error {
    // Your code here

	return nil
}

// Key comprises any fields needed to make up a unique value for each isntance of a connection
// For example, 2 messages with the same conn params should share 1 connection, and will
// but the next message with different params would use a different connection.
func (c *ConnectionData) Key() string {
    // TODO auto-comprise off string fields
	return {{ .ConnectionDataKey }}
}

// Place Custom Connection Functions and Methods Below