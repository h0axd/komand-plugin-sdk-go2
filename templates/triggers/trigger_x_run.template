package triggers

import (
    plog "github.com/komand/plugin-sdk-go2/log"
    "{{ .PackageRoot }}/connection"
)

// Validate will validate the input is properly setup.
func (i *{{ .Name }}TriggerInput) Validate() []error {
    errors := make([]error, 0)
    
    // Custom validation code here
    // Append errors as needed

    // return
    if len(errors) > 0 {
        return errors
    }
    return nil
}

// Validate will validate the output is properly setup.
func (o *{{ .Name }}TriggerOutput) Validate() []error {
    errors := make([]error, 0)
    
    // Custom validation code here
    // Append errors as needed

    // return
    if len(errors) > 0 {
        return errors
    }
    return nil
}

// Run runs the trigger and blocks until the trigger polling is complete or errors
func (t *{{ .Name }}Trigger) Run(conn *connection.Connection, input *{{ .Name}}TriggerInput, log plog.Logger) error {
    // Make sure to ONLY use log.Println and log.Printf to log any custom messages, and do not use the normal go logger
    for {
        // Your code here

        // time.Sleep(input.Interval) // If your trigger makes use of a sleep interval, uncomment this line
    }
    return nil
}

// Test runs the trigger, but does not block and only runs the trigger polling one time
func (t *{{ .Name }}Trigger) Test(conn *connection.Connection, input *{{ .Name}}TriggerInput, log plog.Logger) (*{{ .Name }}TriggerOutput, error) {
    // Make sure to ONLY use log.Println and log.Printf to log any custom messages, and do not use the normal go logger
    output := &{{ .Name }}TriggerOutput{}
    // Your code here

    return output, nil
}