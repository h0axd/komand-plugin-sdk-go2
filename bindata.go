// Code generated by go-bindata.
// sources:
// templates/Dockerfile.template
// templates/Makefile.template
// templates/actions/action_x.template
// templates/actions/action_x_run.template
// templates/cmd/main.template
// templates/connection/cache.template
// templates/connection/connect.template
// templates/connection/connection.template
// templates/server/http/handler_x.template
// templates/server/http/server.template
// templates/triggers/trigger_x.template
// templates/triggers/trigger_x_run.template
// templates/types/type_x.template
// templates/vendor/.gitkeep
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesDockerfileTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\x4f\x4f\xc3\x20\x18\xc6\xef\x7c\x8a\x37\xbb\x17\x9c\x89\x17\x93\x1e\x66\x8a\xa6\x71\x83\x86\xd4\xa9\x31\x1e\xb0\x45\x42\x18\xd0\xd0\x7a\x98\x0d\xdf\xdd\x2c\xa5\x27\xf5\xc8\xc3\xf3\xe7\xf7\xde\x0b\x7e\x00\x1b\x9c\xf4\x3d\xd1\xa1\x18\x4e\x5f\xda\xf8\xdb\x2b\x7c\x0d\x68\xbf\xbb\xa3\x7b\x08\x51\x4b\x6f\xbe\xe5\x64\x82\x2f\x17\x63\xfe\x19\x7b\x5b\xea\x90\x1f\xd3\x79\x50\xe5\x92\x46\x88\xb2\x23\x3c\xf0\xed\xcd\x91\xb2\x8a\x0b\xfa\xd2\x50\x51\x1f\x28\x6b\xcb\x2d\x42\xe2\x89\x81\xb3\xbd\x89\x50\x0c\x40\xf2\xf2\x12\x1c\xc9\x87\xf1\x68\x57\x55\x80\x81\xe8\x40\xc6\xd8\x91\x79\x06\xdc\xc8\xce\x4a\xad\x44\x08\x13\xa4\x84\x9e\xb9\x78\xac\x6a\xf1\x9f\x25\x25\xb4\x74\xe4\x56\x3c\x0e\xaa\xc3\x67\xe9\x4e\xf0\x4b\xc9\x38\xd2\x2a\x58\xd9\x2f\x42\x74\x50\xc4\xcf\x75\xe0\x72\x4f\x2b\x5e\x1b\x5e\xb3\x16\xde\x36\x7f\x30\x93\x79\xc6\x4c\x3a\x95\xd2\xe6\x1d\xfd\x04\x00\x00\xff\xff\xc4\x7a\x21\x4f\x52\x01\x00\x00")

func templatesDockerfileTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesDockerfileTemplate,
		"templates/Dockerfile.template",
	)
}

func templatesDockerfileTemplate() (*asset, error) {
	bytes, err := templatesDockerfileTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/Dockerfile.template", size: 338, mode: os.FileMode(420), modTime: time.Unix(1490194044, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesMakefileTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x6d\x6f\xdb\x36\x10\xfe\xac\xfb\x15\x57\xcf\xb0\xad\xa0\x14\xe3\x60\xdd\x00\x6d\x6e\x53\xc4\x41\x5a\x14\xb3\x8d\x24\x6d\x31\x4c\x6b\xc1\x48\xb4\x44\x58\x22\x05\x8a\x72\x96\xc4\xf9\xef\x03\xf5\xe2\x97\x38\x71\xb1\x0f\xfb\x62\xd8\x77\xc7\xbb\xe7\xb9\x7b\x78\xf4\x97\xf3\xcb\xab\x8f\xd3\xc9\xbb\x51\x77\x50\x24\x3c\x4d\x31\xd6\x3c\xc7\xfe\xb7\x25\xd7\x85\x50\xd2\xc7\x3e\xe6\x69\x19\x0b\xe9\x15\x39\x0f\xbd\x3b\x96\xa5\xb8\xc2\x82\x47\xd8\x2f\xe8\x3a\x88\xd2\xbe\x0b\x93\xf7\x7f\x9c\xef\xe5\x91\x2c\xe3\x87\x93\xd4\x11\x55\x86\xf3\xc9\xd9\x74\xfc\x71\x72\xe1\xaf\xb3\xdc\xb0\x82\xff\xf2\x33\x8a\x50\x49\x2f\x97\x31\x9e\xbc\xa5\x11\x5f\x52\x59\xa6\x9b\x0c\x2b\xba\x0a\x02\xba\x8a\xfb\xb8\x42\xa3\x91\x44\xd8\x0f\x64\xdf\x85\x2f\xe7\x93\xf1\xf4\xf2\x19\x66\x32\x52\xfa\x47\xc4\xea\x98\x0a\xd5\xd9\xd7\xf1\xbb\x1d\x40\x16\x31\x76\x07\xb3\xaf\x63\xd7\x85\xef\xbb\xb4\x79\x98\x28\xec\x0e\xac\xd1\xc5\x15\xb2\xdb\x05\xf6\x1f\x30\xd7\x42\x1a\x34\xaa\xcc\x73\xae\x07\x45\x79\x53\x18\x3d\xe8\x76\x8f\x5f\x0f\x5f\x0f\x5d\x17\x8d\x4a\xd5\xed\xae\xe3\xc4\x75\xf1\xb1\xef\x02\xcc\x3e\x5d\x8c\xba\x83\x9a\x8b\x4b\x9a\xcc\xc4\x5a\xaa\xc1\xb9\x9e\x61\xda\x8b\xef\x01\xc6\x57\xd7\xef\x46\x74\xa1\x32\x26\x23\x5a\x53\x2b\xe8\x8d\x90\x00\x97\xe7\xb3\xe9\xe8\xe1\x01\xbd\x19\x0b\x17\x2c\xe6\x97\x4a\x19\x7c\x7c\x04\x31\x97\x11\x9f\xa3\x75\x83\x53\x05\x35\xe9\x81\xcb\x48\xcc\x01\x58\x9a\xfa\x55\xef\x51\x64\x2c\xe6\x98\xd7\xe7\x51\x97\x52\x72\x0d\x50\x57\xf1\x51\xc8\xc2\xb0\x34\x05\xb8\x29\x45\x1a\xf9\xe0\x9c\x56\x6d\xe8\x7c\x2e\x84\x8c\x51\xf3\xdc\xb6\xc4\x16\x70\x3b\xe0\x18\x5e\x18\x3b\xa4\xee\xe0\x62\x3a\x7b\x7f\xfd\xc1\xa5\x85\x0e\x69\xe3\xc7\xd5\x0a\x53\x89\xa4\x68\xfa\xfb\x42\x14\x38\xd9\x22\x12\x1a\x49\x8e\x96\xa1\x13\x2b\xac\x4a\x23\x51\xd6\x40\xdb\x01\x3c\x7b\x9a\x86\x59\x44\x33\x26\xa4\x17\x2b\x80\x06\xbb\x5f\x27\x00\x27\xcc\x91\xe8\x27\x49\xc6\x57\xd7\x2e\x80\x6d\x84\xe5\x56\x13\x98\x6f\x44\xd9\xeb\x61\x00\x8e\x95\x0e\x11\xde\x4d\x89\x1d\xfa\xcd\xfa\x68\x41\x83\x41\x75\x08\x03\xd7\x3b\xa2\xc1\x30\xe8\x44\xcc\x30\xbf\x6a\x66\x40\x73\x19\xff\x56\xeb\xfb\x75\x77\xd0\x4a\xdf\x0d\x3a\xb4\xf3\x8c\x32\xad\xb4\x4b\x0e\xce\xa9\xce\x6c\xed\x23\x5b\xa7\x35\x42\x33\x17\x1f\x1c\xeb\xd5\x73\xdb\xbc\x4f\x17\x2e\x38\x86\x69\x24\xe1\xf2\xbe\xb5\x20\x21\xfc\x9f\x30\x2d\x23\x3e\x6a\x0c\x47\x00\x15\x1c\x1f\x9c\x48\x85\x0b\xae\xdb\x46\x92\xdc\xde\x31\x62\x70\x2d\xbe\xb6\x21\xfe\x46\x7c\xe8\xad\x8f\x19\x16\x1f\x0e\xdd\x77\xa6\xcc\xb6\x12\x40\xf3\x98\x4b\xae\x99\xe1\x6b\xe9\x5c\xd4\x06\x2b\x1f\xc9\x6f\x9b\x7e\x60\xb1\xe0\x29\x37\x4a\xae\x87\x10\xa1\xe7\xad\xe7\xb4\x5a\x61\xb6\xb4\xcd\xa9\x6c\x67\x56\x3d\x1b\x2f\x38\xa7\xb7\x89\x08\x13\xac\x2f\x08\x0e\xb7\x16\x49\xaf\xd7\x5a\x9b\x3a\x2d\x1c\x8c\xd5\xfe\x28\x08\xc9\x99\x69\xf3\x98\x2c\xdf\x9a\x4d\x05\x7d\xba\xe4\x3a\x65\x77\x16\xfa\x13\xd8\x68\x14\x9a\x84\x63\x58\x6a\xcd\xa5\xc1\x48\x68\x1e\x1a\xa5\xef\xb6\xf8\x6c\xd2\xf6\x7a\x18\x89\xf9\x1c\x49\x39\xd1\xdb\x34\xd7\x11\x14\xdf\xb6\x9b\xc6\xab\x22\x37\x40\x5a\x89\xee\xb8\x7b\x3d\xcc\x99\x09\x13\x7b\xbb\x48\x3e\xc4\xdf\x5f\x3a\xdd\x4a\x4c\x69\x11\xe3\x51\xed\x3d\xf2\xe2\xfb\xbd\x02\x4f\xe0\x36\xe2\xdb\xef\x0c\xd4\x0b\xc3\x6f\x0b\x12\x5d\xca\xd6\x48\x12\x63\xf2\x1d\x4f\x65\x01\xd8\xb2\x58\x59\x54\x2b\x74\x8e\x9d\x9f\x5e\xd9\xa5\x46\x8b\x24\x90\x8d\xf2\x74\x29\x91\x10\x5b\x9c\x48\x6e\x46\x89\xb2\xd0\xc4\x61\x31\x06\xdd\xee\x69\x07\xdf\xe2\xba\xad\x15\x24\xe7\x34\x4c\x32\x15\xe1\xaf\x6f\xde\xec\x79\xea\x8d\xf6\x17\xf9\x1b\x3f\x17\x7c\xd7\x8b\x84\x24\x3c\xcd\xed\x78\xed\x2f\x3b\xe2\x46\x35\x9d\x1d\x1a\x35\xd5\xff\xce\x25\xc7\xe1\xf1\xf1\xf1\x90\x9c\xd8\x4f\xbf\xfa\xfe\x43\x82\xb6\xd4\x1e\xc1\xba\xb3\x2f\xb2\x6c\xdd\x07\xa8\x56\x21\x07\xf9\x5a\xcf\xf6\x96\xf4\x3c\x6a\x94\x4a\x0b\x6a\x1d\x5e\x7e\x67\x45\x51\x17\x38\x4b\x78\xb8\x40\x7b\xb1\xd0\x46\xa0\x54\x06\x85\xac\xb6\x53\x84\x42\x62\x58\x16\x46\x65\x5c\xb7\xcf\x4b\xf1\xaa\x73\x28\xaf\x95\xf7\x9d\x49\x94\x3c\xd9\xf7\x79\xf4\xe9\x35\x06\x58\xb2\x54\x44\xcd\xce\xd9\x4b\x1a\x5a\x6c\xdf\xab\xe8\xff\x01\xf2\x6e\xf6\xe7\x80\xef\x46\x3c\x07\xdf\x9b\x7d\x98\x4e\xfe\xf4\x91\xd9\x3f\x25\xd5\xca\x6e\x5f\xe7\xe6\xad\xae\x77\xcf\x66\xb7\xc2\xbf\x01\x00\x00\xff\xff\x69\x91\xfa\xae\xeb\x09\x00\x00")

func templatesMakefileTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesMakefileTemplate,
		"templates/Makefile.template",
	)
}

func templatesMakefileTemplate() (*asset, error) {
	bytes, err := templatesMakefileTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/Makefile.template", size: 2539, mode: os.FileMode(420), modTime: time.Unix(1490194044, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesActionsAction_xTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\x5f\x6f\xba\x30\x14\x7d\xe7\x53\x9c\x18\x1e\xfd\xc9\xbb\x89\x0f\xfc\xb6\xaa\x64\x0c\x16\xc5\x2d\xbe\xd9\x60\x75\x6c\x5a\x08\x2d\x5b\x16\xd2\xef\xbe\x94\x16\xc3\x86\x89\xc6\x64\x6f\xf7\xcf\x39\xb7\xe7\x9e\x36\x2d\x68\xfa\x4e\xf7\x0c\x34\x95\x59\xce\x85\xe3\x78\x1e\xee\x63\x44\x71\x82\x47\xff\x81\xe0\x6e\xee\x47\x33\xb2\x44\x12\x23\x99\x07\x4b\x4c\x83\x90\x0c\x91\xcc\xc9\x1a\x2f\x41\x18\xe2\x3f\x41\x18\x2f\x13\x04\x53\xac\xe3\x15\x16\x64\x46\x22\xb2\xf0\x13\xa2\x31\x78\x0a\x57\xb3\x20\x72\xea\x1a\x2e\xa7\x47\x86\xf1\x04\xa3\x48\x07\x4a\x39\x75\xfd\x0f\x25\xe5\x7b\x06\x97\x0f\xe1\x16\x4d\x33\xe0\x45\x25\xdb\x6e\xb6\x83\x5b\x8c\x08\xaf\x8e\x61\x26\x59\x49\x0f\xba\xe1\x79\x30\x20\x5d\x17\xdd\x29\xd9\x10\x6e\x73\xc4\x59\xd2\x49\x83\x52\x0d\x5f\xe7\xac\x15\x83\x4c\x80\x72\x30\x5e\x1d\x59\x49\x25\xdb\xe2\x83\x1e\x2a\xe6\xa4\x39\x17\xf2\x02\x75\x02\x93\xdb\xe3\x9e\x35\xb1\xdd\x80\xf1\x6d\x27\xec\x17\x7b\xfb\xc7\x95\xbc\xc2\x00\x8b\xba\xdd\x01\x33\xe0\x36\x0b\xce\x71\xaf\xf7\xe0\x57\x68\x75\xb5\x83\xcc\xcd\x66\x02\xf2\x95\x21\x6b\x92\x5d\x5e\x76\x11\x8e\xfc\x2a\x58\x9f\x22\x64\x59\xa5\x12\xb5\x03\x00\x5d\x67\xf1\xf3\x69\x29\x65\x11\xda\xa2\x56\xbd\xc9\x12\x3d\x58\x29\x6c\xde\x44\xce\xc7\x03\x53\x5c\xd0\x4f\x8b\x1a\x6c\x4e\xb3\xad\xf6\x9e\x7a\x7b\x2d\x56\x7e\x6e\xb2\x4b\xfa\x2d\xe9\x8a\x05\x0c\xf2\x4f\x37\xf0\x9b\x5f\xc0\x3e\x05\xf3\x25\xf4\x04\x5b\x4c\x2b\x58\x7d\x07\x00\x00\xff\xff\xe0\x17\x20\xd4\x42\x04\x00\x00")

func templatesActionsAction_xTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesActionsAction_xTemplate,
		"templates/actions/action_x.template",
	)
}

func templatesActionsAction_xTemplate() (*asset, error) {
	bytes, err := templatesActionsAction_xTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/actions/action_x.template", size: 1090, mode: os.FileMode(420), modTime: time.Unix(1490194044, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesActionsAction_x_runTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x53\x4f\x6b\xdb\x4e\x10\xbd\xeb\x53\x3c\x7c\xf8\x21\x05\x47\x0a\xbf\x63\x20\x85\x90\x53\x21\x4d\x42\x28\x85\x50\x7a\xd8\x4a\xe3\xf5\xe2\xd5\x8c\xd8\x3f\x09\xc1\xe8\xbb\x97\x5d\x49\xb1\x93\x40\x7b\x2a\x94\x52\x1f\x8c\x66\xe6\xcd\xec\xdb\xf7\x66\x07\xd5\xee\x94\x26\xa8\x36\x18\x61\x5f\x14\xa6\x1f\xc4\x05\x94\x05\x00\xac\xf6\x7b\xd4\x77\x13\xe4\x5e\x24\x60\x1c\x9b\x56\x98\x29\xa3\x57\x19\x33\x58\xd1\x58\x69\x13\xb6\xf1\x7b\xdd\x4a\xdf\xec\xa4\x57\xdc\x35\x83\x8d\xda\xf0\xa9\xef\x76\xa7\x5a\xfe\x6f\xac\xe8\x55\x51\x15\x45\xd3\xe0\x8b\xb2\xa6\x53\x81\xf0\x64\xac\xc5\xe3\x12\x85\x2d\xc1\xf0\x10\x03\x8c\xc7\xe0\x64\x20\x67\x9f\xe1\x29\xc4\xa1\x2e\x36\x91\x5b\x94\x06\x27\x89\xd1\x8d\xea\x09\xe3\xf8\x31\x81\xab\x97\x71\x65\x85\xaf\xdf\xc8\x39\x71\xd8\x67\x66\xe4\x9c\xc7\xf9\x05\x7a\xb5\xa3\x72\x2e\xad\x71\x56\xe5\x62\xfe\x6b\x1a\x5c\x45\x1f\xa4\x5f\x58\x18\x61\xb4\xd2\x11\xb6\xe4\x68\x81\x5c\x0e\x03\x71\x87\xdc\xef\xa1\x3c\x98\xa8\xa3\xae\x58\xea\x8e\x42\x74\x9c\x23\xb3\x81\x25\x2e\xd3\xc9\x15\x3e\xe0\x6c\x66\x92\x7e\x13\x2a\x93\xca\xb9\xb1\x38\xca\xb2\xb1\xc5\xf8\x2b\x71\x24\x86\x9f\xaa\x23\xaf\xd4\xb9\xcd\xe8\xbf\x4d\x9e\xfb\xc8\x93\x32\x2e\x72\x16\x65\x5a\x5c\x3c\x99\xb0\xcd\xb1\x36\x8f\xc4\xf3\x1e\xc9\x23\xb9\xa3\xe4\x61\x73\x67\xc1\xd4\x2b\xc1\x2e\x73\xa9\x4a\x47\x94\x09\x8a\x93\x43\x43\x7d\xf5\xf2\xb9\x9e\x87\xbf\xdb\xc4\x35\xd2\x4b\x48\xcf\xa1\xbe\x16\xad\xc9\x55\x28\xdf\x1b\xb2\x9e\x84\xaa\xe6\xab\xcf\x9e\x9e\x5f\xe0\xbf\x77\xd0\xfd\xb8\x48\xf8\x20\xd1\x1d\x09\xbf\xa4\x3f\xa9\x1d\xc1\x47\x47\x08\x82\xdb\x9b\xeb\x07\x44\x4f\x89\x45\x7d\xe7\x0c\x07\xcb\x50\xdc\x1d\xe2\x4d\x82\x25\x8e\x8a\x9f\xd1\x4e\xc6\xf6\xe4\xbd\xd2\xe4\xd7\x19\xda\x09\x58\x42\x9e\x92\x64\x63\x71\xbd\xb2\xd0\xb9\x4b\x93\x7b\x63\xe9\x42\x3e\x75\xb2\x4c\xf7\xc2\x46\x1c\x7c\x6c\x5b\xf2\xfe\x0d\x9a\x8d\xcd\xd0\x03\x6e\xa3\x8c\x8d\xcb\x7d\x5e\xcd\x5c\x1f\x59\xfe\x99\x7c\x98\x3c\x0f\xe9\xeb\xf7\x98\x9e\x0e\xf9\xe7\xfa\x9f\xe1\xfa\x8f\x00\x00\x00\xff\xff\x83\x3e\x7b\x77\x94\x06\x00\x00")

func templatesActionsAction_x_runTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesActionsAction_x_runTemplate,
		"templates/actions/action_x_run.template",
	)
}

func templatesActionsAction_x_runTemplate() (*asset, error) {
	bytes, err := templatesActionsAction_x_runTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/actions/action_x_run.template", size: 1684, mode: os.FileMode(420), modTime: time.Unix(1490219900, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCmdMainTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x59\xdd\x6e\xdb\x38\xf6\xbf\x96\x9e\xe2\xfc\x85\x7e\x48\x33\xae\x3c\xed\xa5\xe7\x1f\x2c\x3a\x49\xda\x06\x9b\x26\x45\xec\xce\x60\xd0\x16\x03\x46\x3a\x96\xb9\x96\x48\x81\xa4\xe2\x66\x0c\x03\xf3\x10\xbd\xdc\x07\xd8\xe7\xea\x93\x2c\x0e\x49\x7d\x38\xb6\x9b\xb6\xbb\x77\xbb\x0b\x4c\x2d\xf2\xf0\x7c\x7f\xfc\xc8\xd4\x2c\x5b\xb2\x02\xa1\x62\x5c\x84\xe1\x78\x0c\x27\x97\x70\x71\x39\x83\xd7\xcf\xff\x7e\x0a\xc7\xaf\x9e\x5f\xbc\x3c\x9d\xc2\xec\x12\x66\xaf\xce\xa6\xf0\xe2\xec\xfc\x74\x04\xb3\x57\xa7\xbf\xc3\x6f\x67\xe7\xe7\xf0\xcb\x29\x9c\x5f\x4e\x67\x70\xf6\x02\x7e\xbf\x7c\x0b\x57\xa7\x2f\x4f\x2f\x4e\xaf\x9e\xcf\x4e\x89\x06\xde\x9c\xbf\x7d\x79\x76\x11\x86\xbc\xaa\xa5\x32\x10\x87\x41\x84\x22\x93\x39\x17\xc5\xf8\x1f\x5a\x8a\x28\x0c\xa2\x79\x65\xe8\x9f\x52\x16\xf4\x8f\xd4\x51\x18\x06\x4c\x68\x0e\x51\xc1\xcd\xa2\xb9\x4e\x33\x59\x8d\xab\xa2\x31\x7f\x8e\x69\x99\xb6\x87\x3b\x4b\x59\x31\x91\x8f\xeb\xb2\x29\xb8\x78\xa2\xf3\xe5\x93\x42\x3e\x1b\xe7\x5c\xd7\xcc\x64\x0b\x54\x51\x08\x00\x50\x97\xb2\x80\xfb\x8f\x79\x25\xee\xa5\xab\x50\x6b\x56\x20\xe9\xb2\x5e\x3f\x01\x3e\x87\xf4\x79\x66\xb8\x14\x1a\x36\x9b\x30\x88\xd6\x6b\x48\xdf\x38\xb7\x5e\x49\x69\x60\xb3\x19\x33\xb7\x1f\xb9\x13\x28\xf2\x83\x94\x99\x14\x02\x2d\x75\xb4\x9f\x40\xa3\xba\x41\x35\x5e\x18\x53\x47\xbd\x02\x33\xc5\x8b\x02\xd5\x61\x0d\x8c\x27\xd8\x56\x21\x09\xc3\x1b\xa6\x28\x34\xe3\x31\x5c\xb0\x0a\xc1\xd9\x0a\x82\x55\x18\x06\x76\xe5\x08\x2c\x3f\xfb\x7b\xb3\x89\x2c\xe9\xaf\x28\x72\xa9\x5a\xe2\x1b\xfb\x15\x06\x7e\xd5\x1f\xf0\x5f\xfd\x11\xa5\xb9\x14\xfd\x19\xfb\x69\xe3\xd3\x6e\x75\x07\xdd\x67\x7b\xf2\x04\x75\xa6\x78\x6d\x06\xa7\xf3\x7e\xc9\x72\x18\x92\x78\x2e\xc3\x25\xe2\x94\xd8\xec\x9e\x2d\x50\x23\xe4\x38\xe7\x02\xe1\x86\x29\x2e\x1b\x0d\x99\x2c\xa5\x82\x4c\x0a\x6d\x98\x30\x1a\x5a\x9f\x94\xbc\x42\x80\x23\xa0\xcc\x4b\x8f\x89\xe8\x58\xe6\x18\x47\x85\x42\x14\x3f\x2e\x26\xd7\x25\xcb\x96\x51\x12\x06\x0a\x73\xd8\x47\xa8\x30\xa7\x6d\x4b\x7f\x88\x8f\x3b\xaf\xd1\xec\x3d\xaf\xd1\x44\x09\xe9\x6e\x6e\x6b\x84\xac\xe4\xcf\x55\xa1\x41\x1b\xd5\x64\x66\x1d\x06\xc7\xb2\xa2\x0c\xa5\x05\x2e\x8a\x30\x98\x36\xd7\x7e\x49\xc3\xbb\x0f\xed\xea\x6b\x97\xb0\xf0\x83\xcf\xdc\xf4\xd7\xa7\xe1\x26\x0c\xe7\x8d\xc8\xa0\x40\x43\x2c\x5f\x28\x59\x1d\x9f\x9f\xc5\x09\xc4\x3f\x78\x29\x23\x40\xa5\xa4\x4a\x60\x1d\x06\x7c\x0e\x25\x8a\x58\xea\x94\x76\x12\xf8\xff\x23\x78\x4a\xeb\x81\x42\xd3\x28\x01\x82\x97\x9e\x5c\xa7\x17\xb8\x8a\xa3\x5b\xd9\x40\xd5\x68\x03\xba\xc6\x8c\xcf\x6f\x21\xf3\x9a\x1a\x09\x5c\xdc\xc8\x25\x02\xf3\xc1\x24\x07\x6c\xc2\x80\x91\x61\x93\x23\x78\xe4\xc5\x13\x77\x6f\xcb\x04\xbc\xe0\x77\x4f\x3f\x8c\xc2\x60\x68\x65\xbf\xf5\x6c\x62\xf7\xbc\xad\x13\x78\xd4\x1b\xbb\xde\x8c\xac\x08\x6d\x98\x19\xc1\x1f\x24\x45\xea\x74\x6a\x72\x2e\xd2\xa9\x61\x26\x4e\x60\x3c\x86\xd3\x8f\x75\xc9\x33\x6e\xca\x5b\xe0\x85\x90\x14\x53\x6b\x91\xb5\x3e\xa6\xb3\xe9\x6b\x8a\x4a\x02\x8f\xe8\x38\xfd\x3e\x5e\x30\x75\x82\x37\x3c\xc3\x04\x8e\x8e\xe0\x27\x58\xdb\x6c\x0c\x6c\xa2\x71\x0d\x15\x32\xa1\xc1\x2c\x50\x21\x70\x0d\x39\x33\x8c\x1c\x50\xf3\x1a\x81\x0b\x90\x37\xa8\x40\x93\x1a\x23\xd0\x12\x4a\x34\x8f\x35\xe4\x12\xb8\x09\x83\x20\xc7\x8c\x14\xa5\x46\x49\x2e\x3d\xc1\x4c\xe6\xa8\xe2\x56\xf1\x24\x0c\x48\x2f\x54\x8a\xa8\x72\xcc\x52\x47\x11\x93\x1f\x53\xef\x85\xe4\x67\x4b\xf0\x7f\x47\x14\x20\x1b\xaf\xbb\x01\x0b\x03\x72\xcc\x26\x6c\xd7\x99\x0d\xbc\xe0\x65\x97\x20\x34\x18\x62\x9b\x04\xac\x4d\x0a\x92\x78\x37\x6f\xc2\x56\x9b\x81\xb0\x52\x16\xe9\x0b\x66\x58\x19\xa3\x52\x2e\xca\x7a\xc5\x4d\xb6\xb0\x62\xd2\x36\x79\xd7\x61\x90\x31\x8d\x10\x2d\xb0\xac\xa3\x49\xfb\xc5\xc5\x5c\xd2\x57\x50\x2b\x2e\xcc\xa0\x9c\x49\x98\x23\xd1\xac\xaa\x4b\xb4\x44\x3e\x43\x2d\xe3\x41\x7e\x74\x71\x09\x86\xea\x44\xbf\xb7\xe9\x59\x2b\x79\xc3\x73\x04\x26\xc0\xf5\x68\x90\x0a\x7c\xaf\xa4\x50\x15\x28\x50\x31\x83\xe0\x44\x01\x17\x75\x63\xde\x8b\xd3\x8f\x93\x76\xa5\xba\xfd\xc3\x9d\xa4\x3c\x26\x13\x9d\xbe\x53\xbb\x7b\x46\xe4\x3b\x4a\xbd\xfb\xe9\x43\x67\x82\xed\xe3\x13\xca\xbf\x13\x86\x95\x14\xfc\x4f\x04\xa6\x81\x96\xc3\x20\xe8\xfd\x4d\x0b\x94\x07\x53\xdb\xfe\xe3\x7e\x4c\xd0\xe2\x31\xcb\x16\x18\x27\x83\x9c\x18\x86\xfc\x6e\x18\xac\x92\xf3\xca\xa4\x6f\x48\xd1\x52\xc4\xd1\x1b\xd7\x55\x07\x6d\x1e\xae\xa5\x34\x5c\x14\xf0\x6a\x36\x7b\xe3\x55\x4b\xd3\xd4\xda\xd8\x66\xf7\x8a\x97\x25\x5c\x97\x32\x5b\x42\x23\x0c\x2f\x29\xd1\xc1\x8d\x27\xd0\x8b\xc6\x50\x2e\xaf\xc4\x56\x9e\xea\xf4\x9c\x6b\x83\xe2\xb9\xc8\xad\x21\xf1\x9e\x0c\xdd\xa7\xae\xf3\x95\x6a\x84\x8d\xf5\x9c\x95\xa5\x59\x28\xd9\x14\x8b\x30\xc8\x71\xce\x9a\xd2\x4c\x9c\x62\xbf\xe1\x63\x85\xa0\x1a\x21\x48\x79\xe4\x54\x7b\x7d\x70\x47\x14\x5d\xd6\xc6\xd7\x69\x36\xac\x17\x4a\x96\x3d\x7a\xf4\xdd\xac\x4b\x17\xf0\xdd\x05\xae\x65\x7e\x0b\x37\x9c\xc1\x74\x76\x72\x76\x41\x29\xa3\x1a\xb1\x37\x9d\xba\xfc\x18\xd6\x80\x17\x9c\xce\xa8\xbd\x93\x58\x67\xa9\xcf\x28\x32\x6a\xe0\x3d\xd5\x88\x4b\x81\x97\xf3\xb9\x83\x1b\xfb\xf2\x6a\x04\xf7\xd4\xff\xae\x7b\xad\x4e\x4e\x6c\xab\xa9\x95\xfb\xc5\x30\xb7\x25\xb2\x15\xe7\x6d\x55\x3d\x24\x71\xb9\xf3\xdf\xd4\x75\x10\xf1\x9e\x62\x1e\x47\x8d\x58\x0a\xb9\x12\x5d\x68\xec\xc8\x7c\xa8\xa3\xd1\xae\xab\x93\xb6\xef\xb5\x5d\xee\xae\x6b\x2b\x99\xa3\x9f\xaa\x23\xa8\x86\x93\x33\x71\x53\x81\x34\xdc\x87\xfe\xb2\xdc\x0d\xb1\xbe\x3e\x4f\x98\x61\xeb\x4d\x18\x94\xb4\x41\x50\x94\x2a\xf6\x5c\x92\x6f\xa8\x93\x59\xfa\x1e\xb1\x52\x43\xbd\x62\xab\xb8\x4a\x7f\x91\xf9\x6d\x7a\xd2\x6d\x24\x36\xd5\x51\x41\x99\xbe\x28\x1b\xbd\xf0\x93\xc0\x39\x46\xa1\xae\xa5\xd0\x68\x65\xb7\xba\x5e\xf9\x45\xf2\x25\x8d\xb9\x46\x4f\x20\x92\xcb\xc8\x0d\xc3\xf1\x18\xde\x8a\x8a\x29\xbd\x60\x2e\xa4\x36\x93\xb9\x30\xd2\x7e\x29\x5e\x2c\x8c\x07\x1a\xa1\xab\x2c\xc8\x64\x53\xe6\xc0\x6e\x24\xcf\x2d\xcd\x33\xc0\x8f\x19\x6a\x6d\x87\x14\xb4\xbc\x32\x56\x96\x9a\xc6\x9b\x1d\x7b\x2b\x6e\x16\xc0\xa0\x94\x06\xe4\x1c\x5c\xea\x3f\xc9\x98\xa6\xf2\x94\xc2\xc6\x48\x5b\xfe\xd7\x8d\xa1\x43\x86\x52\x8e\xb2\x71\x64\x45\xd4\xa8\xe6\x52\x55\x4c\x64\x08\x05\xe3\x82\xc6\xa8\x90\x06\xcc\x82\x19\x28\x14\xd2\x40\xa7\x19\xc2\x69\x74\x96\xa4\x8b\xef\xd8\x16\xd0\xe5\x48\x05\x49\x13\xcc\xd0\xf5\x86\xc4\x18\xe9\x26\xac\x13\xb4\x62\xb7\xa9\x5d\x9e\x5d\x9e\x5c\x52\x2c\x57\x08\xba\x21\xcc\xe2\x09\xb8\x06\x06\xd7\xd2\x98\x12\x05\x66\xcb\x11\x75\x80\x39\xa7\x41\x60\xac\x5c\xbd\x62\x35\x5c\xb3\x6c\x09\xde\x6f\xbd\x85\x08\xac\xae\x95\x64\xd9\xa2\x1b\x7b\x3e\xa8\x2e\x5f\xda\x0c\x52\x4c\x14\x08\x0f\xc4\x08\x1e\xd4\x14\xbf\xed\x74\xb2\x75\xb9\x5e\xc3\x83\x3a\xbd\x62\xab\x16\x84\xdb\x89\x47\xb3\xc5\x06\xdc\xdf\x2e\x52\x47\xe6\x69\xec\xe8\xa1\xbc\x1b\x54\xa5\x05\x13\x5d\xd4\xdb\x1c\xb3\x94\x23\x37\xda\x0e\x23\x86\x0e\x2c\xdc\xcb\xef\xb8\xcb\xfd\x11\x64\xf9\xd7\x70\xa4\x6a\xe9\x26\xdd\xa0\x74\x3c\xa7\x38\xcb\x47\x50\x1e\x98\x6e\x3b\xcc\xd8\x61\x9f\x38\xcf\x5a\xa7\xa8\x46\xbc\x46\xb3\x90\xb6\xfc\x58\x7a\xd5\xf8\x41\x65\x0b\xff\xe8\x08\x22\x83\xda\x44\x5e\x44\x47\x4b\xa4\x33\xd4\xc6\x8b\x6a\xcb\x2e\xbd\x6c\x8c\xf5\x21\x29\x67\x9b\x9f\xa3\x8f\x9d\x61\xdc\x39\xf8\xb0\x05\x9e\x8b\x2b\x52\xba\xc0\xd8\x16\x13\x6d\x6d\x9e\xda\xae\x73\x44\xa7\xdd\xef\xb8\x9d\x27\xe3\x71\xd7\x3f\x5c\xe9\xa2\x6e\x4a\x0b\x21\xd3\x29\x8a\x3c\x6e\x59\x24\xdb\xb7\xcf\x41\x1b\xf5\x3e\x24\x4c\x60\x59\x0f\x9a\xa9\x1f\x63\xb6\x8d\x6e\xa5\xaf\xc3\x73\x9e\xe1\xa6\x47\x90\x43\xec\xb8\x33\x05\xbe\xa9\xad\x6e\xdd\x69\xbf\xb2\xaf\x5e\x50\xb3\x28\xbf\xa7\xbb\x7e\x63\x91\x6e\x2b\xf7\x35\x55\xda\xde\xc0\xd3\x01\xcc\xf2\x5c\xfe\x67\x6b\xd5\x7a\xa6\x73\xcc\x05\xae\xb6\xca\xd5\x7b\x27\xce\x93\xc3\xb5\x29\x3b\x5d\x8c\xad\xcc\xbb\x25\xf7\xf3\xb0\x88\x0e\x8e\xc7\x20\x70\x15\x3c\x01\x39\xb2\x9f\x77\xe6\xa5\xd3\x96\x74\xd8\x05\x29\xf7\x54\xe8\x3d\xf5\xbd\x69\xa1\x96\xf4\x83\x55\x20\xe6\x34\x1c\x8d\xb4\x18\x1c\x9a\xda\x17\x35\xcb\x4b\x29\x6b\x3b\x75\xee\xa2\xb1\x16\xf1\xd0\xe8\x94\x42\x37\x15\xe6\x9e\xed\x9c\xf0\x27\x6a\x63\x0b\x6e\x85\x80\x15\x8d\x3e\x37\xaa\xfa\xb2\x80\x9c\x2b\xcc\x4c\x49\xc3\x70\x5f\xdb\x18\x5e\x1b\xfb\xa6\x33\x35\x4c\x99\x4e\x39\x20\xed\xc2\x20\x28\x24\x98\xd4\x6e\x5d\x21\xcb\xcf\xa5\xac\x63\x7f\x69\xb8\x6a\xc4\x2e\x98\xe4\x06\x32\x49\x57\x25\x83\x1a\xc6\x0e\x4f\x7a\x38\xe9\x65\x1a\x6a\xce\xbb\x9d\xf4\xdb\x5b\x59\x8b\x59\xbf\xb9\x97\xb5\x48\x98\x6b\xa8\x15\x1a\x73\x0b\x0b\x96\x2d\x6f\x47\x16\x89\xe8\x86\x2e\xf7\xf3\xfe\x96\xcf\xe0\x1a\x8d\x41\x45\xe0\xc2\xa2\x9a\xb9\x92\x95\x75\x13\x8a\x82\x0b\x1c\x91\xcd\xb9\x44\x2d\x1e\x1b\x72\xda\x92\xf8\x97\x7c\x89\x16\x7c\x90\x49\x4c\xdc\xc2\x92\x8b\x9c\x10\x53\x44\x08\x29\x82\x79\xc9\x0a\x87\xa5\xb6\x23\x97\xa6\x29\xb1\x23\x36\xda\x33\x21\x64\xb4\x42\x8b\x72\x34\x78\xcf\x84\x0e\xf9\x30\xc8\x50\x11\x14\xb2\xb8\xcb\x21\x27\x85\x75\xc9\x32\x0b\x68\xa4\x28\x09\x01\x76\x44\x0b\xa6\x72\x02\x51\x39\x70\xfb\x34\x96\xa1\x4e\x61\x2a\x1d\x32\x93\x04\x05\x3d\xc0\x71\x66\xd7\x84\xb1\xc6\x63\xcb\x95\x28\x04\xae\xf6\x50\xa4\x70\xf6\xb8\xb2\x20\xd1\x66\xf9\xc2\x6e\x94\xcc\xa0\x22\xec\xb8\xb0\x7d\x96\x19\xb8\x46\x6d\x7c\x8a\xd0\xa5\x0b\x05\x48\xf2\xf0\x8a\x6b\x74\xb3\x65\xb7\xa9\xdb\xe7\x95\x8a\xd5\xef\xdc\x80\xf9\xc0\x85\x41\x35\x67\x19\xae\x37\xc9\xd0\x65\x7d\xd7\xf7\x4f\x5b\x8d\x2a\x47\x20\x97\x76\x54\x30\xc3\xde\x45\x6f\xaf\xce\xa3\x0f\x3f\xd3\xd2\xda\xbe\x0c\xd9\xb8\xd1\x28\x6c\x58\x59\xde\xda\x20\x69\x78\x06\x37\xac\x6c\x50\x8f\x6c\x90\x57\xe8\xdc\xd7\x68\x74\x46\x49\x81\x7f\xeb\xf3\x71\x20\xfe\x02\x57\x74\xa9\x8e\x1b\x55\xa6\xb1\x53\x35\x49\x86\x6f\x30\xdb\xb4\x53\x93\xcb\xc6\xc4\x49\x37\x54\x77\x9f\x43\xc8\x8c\xf1\x18\x5e\x5a\xe4\x5b\xc2\x99\x98\x4b\x18\xc3\x2b\x64\x39\x5d\x72\x1d\x1c\x20\xe3\xa2\xf7\x22\xea\xbe\x7f\x3c\xb2\x45\x32\xb5\xec\xe6\x71\x44\x3d\x77\x02\xfe\x7f\x0f\x35\xfd\xff\xf3\x3f\xff\xf5\x5e\x44\x23\xb0\xef\x94\x23\xfb\x3e\x3c\x02\xfb\x26\x99\x1c\x64\xe3\x5e\x7d\x27\x5f\x60\xe3\x28\xbe\x82\x91\x7d\x05\x9e\x7c\x89\x91\xa5\xb8\x97\xd3\xc0\x57\x93\xfd\x9c\x06\x14\x1d\xb7\x03\x38\x84\x06\x14\x35\x92\x4c\x36\xc2\x3a\x35\x2e\x51\xf4\x34\x89\x25\xa2\x86\xe1\x9b\x0d\x05\xe3\xa0\x66\xef\xdb\xd7\xdf\x7d\x9b\x9d\xd8\xf8\xa1\x7e\x98\x3f\xd4\xc9\x04\x86\x3a\x93\x76\x03\x4d\x36\x9b\xde\x0f\x03\xc0\xc2\x47\xf0\xc0\xec\x02\x96\x03\x22\x3f\x7f\xfa\xf4\xf9\xd3\x5f\x9f\x3f\xfd\xe5\xdd\x64\x45\xeb\x64\x28\x36\x72\x72\xbb\x3f\x07\x78\xa9\xfd\xc6\x9d\x77\xf7\x6d\xad\xda\x86\x3d\xf8\xbd\xff\x1a\x4d\x6e\x76\xd0\xf3\x8e\xa3\x3d\x51\xe7\x67\x0f\xd3\xbe\xdf\xcd\xad\xd4\x43\x5e\xde\xd6\xe3\x0b\x6e\x66\x3b\x97\xb7\xff\xd4\xcb\xec\x90\x97\xd9\x77\x78\xb9\x7b\xf0\x8b\x9d\x5a\x77\x1a\xca\xd6\x7b\xa5\xf3\xa9\xef\x4d\x3d\x30\xa7\x19\xfc\xcb\xad\xc1\xfe\x55\xd2\x82\xca\xd7\x1e\x52\xee\x60\xf3\xbd\x8f\xc2\x43\x0c\xb8\x09\x83\x8a\xd8\x0c\x9e\xea\xc3\x20\xe8\x2a\x3f\xba\x79\x6a\xc1\x17\x4d\xea\x49\x47\x44\x5f\x8e\x30\x70\xce\x9e\xb4\xaf\x7b\xb4\xd4\x03\xda\x09\xf4\xfa\xd2\xce\x6b\x34\x6c\x02\x15\x5b\x62\x7c\x60\x48\x58\xb2\x7e\x3a\xdc\x4f\xdc\xfe\x5d\xc1\x3f\xe8\xed\xbb\x31\xec\xcf\x8c\xfe\xc2\xc0\xee\x5e\x18\x2a\xf7\x16\x78\xd4\x3d\x02\xd2\x95\xd6\xfe\xfa\x82\xeb\x87\xb7\x5d\x76\xe7\x05\xe0\x6b\xb1\xf8\xf0\x86\x41\x17\xdd\x5e\xe6\x16\x34\xba\xbf\xb9\xf4\xc6\x99\xc3\xc6\xb5\x4f\x8d\x74\x09\x70\x3f\xbf\x60\xde\xf0\xea\xd4\xf7\x9e\xed\xcb\xd3\x77\x9a\x39\x14\xbe\x65\xe7\x00\x53\x0e\x1f\x19\xdf\x6e\xdf\x8b\x07\x7f\x2d\x70\x2f\x8d\x3d\x9e\x6c\xeb\x7f\xaf\x49\x67\x22\x47\x61\xe2\x47\xd5\x08\x22\x88\xe8\x3f\x10\x7d\x4d\xb9\x0c\x9f\xed\x5d\x52\xb6\xe5\x9c\x6c\xa3\xd6\x7f\x07\x00\x00\xff\xff\x17\xb9\x54\xf1\xd8\x1f\x00\x00")

func templatesCmdMainTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesCmdMainTemplate,
		"templates/cmd/main.template",
	)
}

func templatesCmdMainTemplate() (*asset, error) {
	bytes, err := templatesCmdMainTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cmd/main.template", size: 8152, mode: os.FileMode(420), modTime: time.Unix(1490219938, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesConnectionCacheTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x93\x4f\x6f\xdb\x38\x10\xc5\xcf\xd6\xa7\x78\xeb\xc3\x42\x0e\x54\x19\xd8\x63\x17\x39\x64\x13\x37\x31\xea\xda\x45\xe3\x60\x51\x14\x3d\xd0\xd4\x58\x22\x4c\x0d\x55\x72\x54\xad\x37\xc8\x77\x5f\x90\x72\x12\xb7\xd8\xde\x28\xfe\x79\xf3\x9b\x37\x4f\x9d\xd2\x07\x55\x13\xb4\x63\x26\x2d\xc6\x71\x96\xcd\xe7\xb8\xd9\x60\xbd\xd9\xe2\xc3\xd5\xfb\x05\xae\xef\xae\xd6\xb7\x8b\x7b\x6c\x37\xd8\xde\x2d\xef\xf1\x6e\xb9\x5a\x14\xd8\xde\x2d\x3e\xe3\xef\xe5\x6a\x85\xbf\x16\x58\x6d\xee\xb7\x58\xbe\xc3\xe7\xcd\x03\x3e\x2d\x6e\x17\xeb\xc5\xa7\xab\xed\x22\xde\xc1\xc7\xd5\xc3\xed\x72\x9d\x65\xa6\xed\x9c\x17\xe4\x19\x00\x4c\xf7\xad\x4c\xc7\x55\x38\xb2\x9e\x66\x69\xdd\x59\x57\x63\x5a\x1b\x69\xfa\x5d\xa9\x5d\x3b\x3f\xb8\x56\x71\x35\xef\x6c\x5f\x1b\x7e\x13\xaa\xc3\x9b\xda\xfd\x31\xb7\xae\x9e\x66\xb3\x84\x79\xad\x74\x43\x30\x01\x0a\xc1\xb4\x9d\x25\x0c\x5e\x75\x1d\x79\x28\xef\x7a\xae\xa0\xd0\xaa\x0e\x83\x91\x26\x2e\x7b\xa1\x7f\x0a\x88\x43\x10\xe7\xcf\x7b\x0e\x30\x9c\xc9\xb1\xa3\x93\x62\x10\xdf\x6b\xc1\x63\xc2\x8a\x84\xe5\x87\xf8\x36\x7d\x56\x4a\x92\xea\x97\x20\xde\x70\xfd\xf5\xe2\xfa\xd5\xba\xa7\x44\xb5\xa6\x61\x94\xf1\x24\xbd\xe7\x48\xc7\x34\x9c\x95\x83\x8e\xc7\xd9\xbe\x67\xfd\x72\x39\x9f\xe1\x62\x7c\xf5\x98\x4d\xc6\x87\xf8\x3d\x6d\x3c\x66\x93\x49\x2c\xfa\x16\xad\x3a\x50\xfe\xff\xa5\x67\x45\x36\x79\x3a\xd5\xbf\x25\xc1\x60\xac\x45\x4d\x02\xe7\x61\xd8\x08\xa4\x19\x1b\x2e\xb1\x14\xec\xac\xd3\x87\x80\x9e\xc5\xd8\x97\x93\xe8\xa3\x27\x55\x1d\xa3\xc6\x76\x73\xb3\x81\x34\x26\x8c\x4a\x3b\xc2\x77\xf2\x47\x18\xa6\xfd\xde\x68\x43\x2c\xd8\xf5\x82\x81\xc0\x44\xd1\xe7\x41\x1d\xa3\xb3\xd6\xb9\x43\xdf\x9d\x5b\x1b\xd5\x0c\x43\x41\x9a\xa8\x1e\xd4\x9e\xd0\x2a\x66\xf2\x05\x14\x57\x70\x6c\x8f\x09\xd1\x28\x6b\xfe\xa5\x88\xd3\xc2\xb1\xa6\x72\x74\x7e\xc3\x9a\x30\xb8\xde\x56\x91\xa2\x76\xae\x8a\x8a\xa7\xe2\x41\x22\xdd\x09\xa1\xb3\x4a\x53\x84\x48\xf6\x9e\x33\x14\x51\x95\x13\xdc\xa8\xdf\x77\xd8\x1d\xa1\x70\xa0\xd4\xed\x6b\xa3\x9e\xbe\xf5\xc6\x13\xba\x5e\xc4\x70\x0d\x85\xf7\x74\xcc\x67\x68\x49\x1a\x17\x61\x5f\xec\x3a\x8d\xd2\xb0\x90\xdf\x2b\x4d\x05\x86\xc6\xe8\x26\xca\x0d\x2f\x50\xe2\x4e\x21\x88\x09\x4d\x43\x83\x34\x4a\xa2\xd5\xda\xb5\x9d\x0b\x54\xc1\xed\xcf\xf5\x52\xbc\x42\xaf\x9b\xf1\xe2\x52\xa2\xa0\x56\x8c\x9e\xcd\xb7\x9e\xa2\x57\x15\xb1\x98\xfd\xf1\x67\x92\x81\x30\x28\x96\xe7\x29\xa0\xef\xca\x31\x62\xb9\x3e\x45\x6b\x16\xa3\x91\xeb\x0a\x17\x37\x4a\x54\x01\x9b\x7e\xb9\x72\xe5\xea\x9a\xfc\x0c\xf9\x59\x9e\x0a\x90\xf7\xce\xcf\x62\x1a\xbf\x2b\x8f\x80\xf3\x9c\xa7\x2d\x77\xc0\xce\x39\x9b\x4d\x74\xb9\x72\xfa\x90\xcf\xb2\x89\xd9\x23\x14\xf1\xe0\x12\xba\x8c\x9d\x7c\xd1\x55\x99\x0c\xfc\xfa\x67\xdc\x8e\x51\xd6\xe5\x03\xdb\xd3\xfd\xe7\xa0\x87\x02\x6c\x6c\x4c\xf0\xc4\x96\x1f\xbd\x61\xb1\x9c\x4f\xaf\x3d\xa9\xd3\x10\xd6\x34\xe0\xb5\xfe\x74\x96\x4d\x42\x22\xc4\xdb\xcb\xe7\xfd\x5c\x57\x05\xec\x08\x11\x4f\x7e\xbb\x8c\x9a\xbf\x2c\xc9\xc6\x26\x85\x54\xf4\x67\x58\x5c\x22\x64\x3f\x3c\xfb\x11\xf4\xe9\xbf\x00\x00\x00\xff\xff\xb2\x7d\xa1\xd7\x37\x05\x00\x00")

func templatesConnectionCacheTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesConnectionCacheTemplate,
		"templates/connection/cache.template",
	)
}

func templatesConnectionCacheTemplate() (*asset, error) {
	bytes, err := templatesConnectionCacheTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/connection/cache.template", size: 1335, mode: os.FileMode(420), modTime: time.Unix(1490219981, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesConnectionConnectTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x94\x4f\x6f\x1b\x37\x10\xc5\xcf\xdd\x4f\xf1\x90\x43\x2b\x05\xb2\x85\xe6\x58\xa0\x97\x3a\xc8\xa5\x49\xed\x43\x50\x20\x28\x7a\x18\x71\x67\x77\x59\x71\xc9\x2d\x39\xcc\x66\x6b\xf8\xbb\x17\x43\x6a\xf5\xa7\x46\x2f\x86\x25\x0d\x1f\xdf\xfc\xe6\x71\x26\x32\x47\xea\x19\x26\x78\xcf\x46\x6c\xf0\x4d\x63\xc7\x29\x44\xc1\xa6\x01\x80\xc9\x85\x1e\x6f\x7a\x2b\x43\x3e\xdc\x9b\x30\xee\x8f\x61\x24\xdf\xee\x27\x97\x7b\xeb\xef\x52\x7b\xbc\xeb\xc3\xbb\xbd\x0b\xfd\x9b\x66\xdb\x34\xfb\x3d\x1e\x72\x92\x30\x3e\x51\xa4\x31\xc1\x26\xcc\x03\x47\xc6\x12\x32\x64\x60\xb4\xfc\x95\x5d\x98\x38\x62\xb6\xce\xa1\xd3\x3f\xd6\x83\xfc\x02\x53\x0e\x62\x8a\xfa\xb3\x58\x4e\x3b\xcc\x83\x35\x43\x39\x3b\x87\xec\x5a\x78\xe6\x56\xef\x90\x80\x9c\x18\x21\x62\x0e\xf1\x88\xd9\xca\xa0\x2a\x0f\xb5\x8b\x7b\x3c\x7a\x06\x7f\xa3\x71\x72\x8c\xd1\xf6\x83\xe0\xc0\xf5\x0e\x67\xd9\x0b\x9c\x3d\x44\x8a\x96\x93\x4a\xa4\x3c\x69\xc3\xd6\xf7\x57\x77\xa3\x3b\x89\x5b\xdf\xeb\x8d\xe5\x0a\x6d\xe0\x95\x82\xba\x53\x5f\x3b\x1c\xb2\xa0\x0d\xfe\x07\xc1\x4c\x5e\xd4\xa4\x0b\x89\x61\xbb\x52\x13\xb9\x67\xcf\x91\x84\x8b\x4e\x05\xd8\xc8\x32\xf1\x2d\xb2\x24\x31\x1b\xc1\x73\xc1\xbf\xdf\xe3\x4b\xc8\xf1\x35\x1b\x1c\xd8\x85\xb9\x79\xa9\xc8\x6b\xdf\x4a\xbb\x58\xac\xc5\x26\xb4\x5c\xda\xb8\xe5\x2e\x01\x73\xb4\xea\x22\xa0\xcb\xce\x2d\xb0\xde\x8a\x25\x67\xff\x51\x46\x2d\x22\x4b\x8e\x1e\xa4\xca\x91\xa9\x5d\x56\xdc\x0f\xe7\x90\x20\x1c\xfe\x52\xd0\x4d\x97\xbd\x59\xbf\xdf\x98\x16\x6f\xdf\x93\xd0\x0e\x1a\x1a\x4d\xce\xfd\xc7\xd0\xf7\x1c\xb7\xd8\xbc\xbd\x1c\xde\x81\x63\x0c\x71\x7b\x6a\x51\xa3\x87\x9f\x7e\xc6\xf7\x97\x8a\xe7\x97\xdb\xe6\xb5\x11\x4d\xd1\xfa\xed\x67\x3a\x56\x88\x97\xd8\xa2\x25\xa1\x62\xbf\x98\xb7\x02\xeb\x25\x94\xa2\x57\xb6\xcf\x32\x03\xfb\xdd\x6d\xf7\x0b\x92\x90\xf0\x0e\x29\x9b\x01\x54\x79\x92\x91\x4c\x0e\x34\xd9\xeb\x0b\x4f\xea\x32\xd8\xd8\x62\xa2\x28\xcb\xaa\xfb\xc1\x7a\x72\x6e\xd9\x61\xa2\x94\x70\x20\x73\xfc\x8f\xd9\x1d\xbc\x75\x65\x34\x29\x1b\xc3\x29\xad\x27\x1f\x65\xe0\x38\xdb\xc4\xa5\xe2\x04\xaa\x14\x76\x64\x5d\x8e\xdc\xac\x95\x9f\x14\x41\xca\xb1\x8c\xf1\xf1\xb7\x8f\x5f\xca\x84\x14\xf9\x53\xb4\x5e\x9c\x2f\x2c\xce\x9f\xbb\x9a\xc6\xfe\xfa\xa1\x8d\x9c\x12\xf5\xfa\xcc\xb4\xb4\x0d\xf0\x41\x8a\x8a\x9a\xf5\x21\x8e\xe4\xd0\x97\x53\x3d\xc7\x7a\xf1\x29\x1a\xda\x49\x71\x78\xca\xdf\xef\xe4\x6c\xab\xc1\x2e\x6f\x9a\x7d\xf5\x75\x8b\x7e\xa6\x04\x13\x99\x84\x5b\x98\x10\x23\x1b\x71\x4b\xcd\xcf\xc6\xe0\x2a\x1e\xdb\xb3\xdc\x66\x8b\x3f\xfe\xac\x08\x9e\xff\x27\x10\xcd\x77\x27\x4b\x17\x33\xbf\xf2\x02\x13\xc6\x29\xda\xc4\xa9\xf4\xdb\x59\x76\x6d\x2a\x8f\x94\x5b\x05\x31\x2a\xbc\x3c\x81\x90\xbd\xfd\x3b\x33\xbe\x92\xcb\xf5\xad\x30\x99\x01\x36\x79\x21\x6f\x18\xa1\x03\x5d\xef\x46\x1d\xae\x16\xd5\xd5\xb2\xc3\xbb\x33\xc4\xcb\x82\x48\x34\xd6\x59\x6b\x28\xca\x83\x1e\xca\xee\x4a\x03\x45\xc6\x8f\x37\x31\x50\xf0\xca\x4c\x85\x75\x7b\x14\xf2\xfc\x4d\x56\xd9\xaa\xda\xda\xae\xe3\xa8\x5b\xe7\xa4\x58\x97\xa1\x8e\x8a\xae\x7e\xbc\x08\xdf\x5f\xb8\xea\x7b\xdc\x2a\x93\xcd\x56\x37\x8b\x2e\xb9\x33\xcb\xcf\x8f\xef\x1f\x41\x59\xc2\xdd\xca\x0b\xa1\xeb\xd6\xb2\x4a\xed\x0c\xf8\xf9\x19\xf7\x97\x21\xa9\xac\x82\x7e\x79\x39\x51\x7f\x72\x64\xd6\x45\x76\x3d\xf6\x0f\xd9\x97\x7f\x52\xe9\xf5\x13\xcb\x10\xda\x84\x5f\x74\x79\xfd\x1b\x00\x00\xff\xff\xc2\x92\x0a\x40\x7c\x06\x00\x00")

func templatesConnectionConnectTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesConnectionConnectTemplate,
		"templates/connection/connect.template",
	)
}

func templatesConnectionConnectTemplate() (*asset, error) {
	bytes, err := templatesConnectionConnectTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/connection/connect.template", size: 1660, mode: os.FileMode(420), modTime: time.Unix(1490219988, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesConnectionConnectionTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\x41\x4f\xdc\x30\x10\x85\xef\xfb\x2b\x9e\x10\xc7\x6d\x38\xf4\x86\xd4\x43\x0a\x01\x22\xb6\xbb\x88\x0d\xaa\xb8\x31\x6b\x0f\x89\xc1\xb1\x23\xdb\xd9\x6d\xb4\xca\x7f\xaf\xec\x2c\x28\x6d\xaf\x3d\x66\x32\x7e\x6f\xe6\x7d\xd3\x91\x78\xa7\x9a\x21\xac\x31\x2c\x82\xb2\x66\xb1\xb8\xb8\xc0\xf5\x06\xeb\x4d\x85\x1f\xf9\x7d\x81\xab\xbb\x7c\x7d\x5b\x6c\x51\x6d\x50\xdd\x95\x5b\xdc\x94\xab\x62\x89\xea\xae\x78\xc6\xcf\x72\xb5\xc2\xf7\x02\xab\xcd\xb6\x42\x79\x83\xe7\xcd\x13\x1e\x8b\xdb\x62\x5d\x3c\xe6\x55\x11\x7b\xf0\xb0\x7a\xba\x2d\xd7\x49\xf4\xea\xd3\x03\xca\x23\x34\x73\x57\xd8\xdd\x1b\x8b\x80\xd0\x50\x48\xbf\x24\xef\x59\xdb\x8e\x1d\x0e\x4a\x6b\x90\x94\x08\x16\x87\x86\x0d\x94\x09\x5c\x3b\x0a\xca\xd4\x20\x84\x46\x39\x89\x8e\x5c\x18\xa2\x49\xfe\x50\x66\xc8\xa5\x04\x99\x01\xef\xca\x48\xd8\x57\x68\x6b\x6a\x68\xb5\x67\x09\xeb\x20\x7a\x1f\x6c\x8b\xaf\x1f\xcf\xfe\x1d\xc3\x47\x0f\x1b\xa5\x3d\x7c\x70\xbd\x08\x59\xd4\x2e\x48\x34\x50\xc6\x07\x32\x82\xa3\xee\xac\x61\xca\x62\xc7\xf0\x0d\x39\x96\xa8\xb5\xdd\x91\xd6\xc3\x12\xde\xa6\x72\xef\x38\x6e\x10\x17\x69\xfb\xc0\xbf\xd8\xc7\x59\x28\xd8\x56\x89\x28\x1e\x77\xa5\x38\x83\x8f\x5b\x3a\x86\x61\x96\x2c\xb3\x45\x18\x3a\x9e\x67\x77\xf2\x3b\x2e\x00\xe0\x2a\xed\xf2\x40\x8e\x5a\x9f\x0a\xc7\xe3\x17\x38\x32\x35\xe3\xdc\x2c\x71\xde\xe1\xf2\x1b\xb2\xd9\xeb\x71\x4c\x6d\x53\x2b\xce\xbb\x6c\x4d\x2d\x63\x1c\x4f\x5f\x55\x34\x1b\x47\xbc\xbc\x79\x6b\x2e\xcf\xa6\xe2\x23\x1d\x4e\x5d\x67\x2f\x9f\x26\x6c\x64\x14\x1b\xa7\x7b\xa1\x40\x1f\x50\x4f\xf3\x25\x92\x8d\xd5\x72\xaa\x3a\x3a\xcc\x73\xee\xd2\xc4\x78\x75\xb6\x4d\xbf\x95\x11\xb6\x8d\x40\x5b\xf6\x9e\x6a\x8e\xa2\x55\x4c\x37\xd1\xdf\x31\x42\xef\x0c\xcb\x89\x0b\xc1\x31\xe9\xb9\xdc\x6e\x48\x2a\xdb\xeb\x7b\xb8\xde\x04\xd5\x72\x86\x67\xdb\xc3\x37\xb6\xd7\x12\x86\xf7\xec\x20\x95\x63\x11\x74\x3a\x93\x18\x6e\xc4\xd1\x7b\x9e\x28\x4e\xe0\x97\xb0\x46\x4f\x5a\x8e\xeb\x5e\x93\x9b\xb9\x64\xc8\x3d\x7c\x2f\x9a\x25\x68\x6f\x95\x8c\x2c\xd3\x0d\x9a\x01\x9d\x8b\xfc\x82\x62\x1f\x55\x55\x38\x61\x4b\xb9\xfc\x01\x6c\xc6\xe7\x6f\x36\xff\x1d\xcd\xef\x00\x00\x00\xff\xff\x6b\x29\x21\x24\xdd\x03\x00\x00")

func templatesConnectionConnectionTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesConnectionConnectionTemplate,
		"templates/connection/connection.template",
	)
}

func templatesConnectionConnectionTemplate() (*asset, error) {
	bytes, err := templatesConnectionConnectionTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/connection/connection.template", size: 989, mode: os.FileMode(420), modTime: time.Unix(1490194044, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServerHttpHandler_xTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x55\xdd\x6e\xe3\x36\x13\xbd\x96\x9e\x62\x3e\x03\xdf\x56\x5e\x78\x25\x74\x2f\x53\x04\x45\x7e\xbc\x89\xd1\xac\x1d\x24\xde\x06\x7b\x55\xd0\xd4\x58\x62\x4d\x71\x54\x72\x14\xd5\x08\xfc\xee\x05\x49\xd9\x09\x16\xde\xdf\x9b\xf5\x95\x45\x0e\xe7\x9c\x19\x9e\x33\x6c\x85\xdc\x88\x0a\xa1\x66\x6e\xd3\xb4\x28\xe0\x72\x01\xf3\xc5\x12\xde\x9f\xfd\x31\x85\x8b\xeb\xb3\xf9\xd5\xf4\x1e\x96\x0b\x58\x5e\xcf\xee\xe1\xdd\xec\x66\x3a\x81\xe5\xf5\xf4\x23\x3c\xcc\x6e\x6e\xe0\x7c\x0a\x37\x8b\xfb\x25\xcc\xde\xc1\xc7\xc5\x07\xb8\x9b\x5e\x4d\xe7\xd3\xbb\xb3\xe5\xd4\xc7\xc0\xed\xcd\x87\xab\xd9\x3c\x4d\x55\xd3\x92\x65\xc8\xd2\x64\xb4\x6e\x78\x94\x26\x23\x34\x92\x4a\x65\xaa\xe2\x6f\x47\x66\x94\x02\x00\x8c\x14\x15\x8a\x3a\x56\x7a\xf8\x36\xc8\x85\x27\x35\x4a\xe3\xf7\xd3\x13\xe4\xb7\x91\xec\x1d\x11\xc3\x6e\x57\x08\xc9\x8a\x8c\x1b\x7d\x36\x40\x92\x31\x18\x82\x62\x4c\xab\xa9\x82\x51\xa5\xb8\xee\x56\xb9\xa4\xa6\xd8\x50\x23\x4c\x59\xb4\xba\xab\x94\x79\xe3\xca\xcd\x9b\x8a\xde\x16\x9a\xaa\x21\xe7\x57\x43\x1b\x74\x4e\x54\x38\x4a\xc7\xa1\x79\x9e\xc3\x5c\x34\x08\xbb\xdd\xb5\x30\xa5\x46\x0b\xca\x81\x80\x3a\x7e\xa4\xbc\x6d\xf1\x58\x90\x63\xdb\x49\x86\xa7\x34\x91\xf0\xfa\x99\x75\x7e\x21\x64\x8d\xe9\x2e\xe4\x9e\x63\x7f\xe4\xa4\x45\xee\xac\xf1\x18\x06\xfb\x23\xa9\xd3\x75\x67\xe4\xf1\xb3\xd9\x11\xac\x31\xbc\x3e\x02\xf2\x94\x26\x11\x07\x5e\xed\x77\x0f\x9b\x4f\x69\x92\xc8\x13\x90\x93\x34\xd9\x0d\x4c\xef\xd1\x3e\xe2\xf5\x72\x79\x3b\xd4\xed\x80\x6b\x04\x8b\xff\x74\xe8\xd8\x45\x46\x59\x7d\x0c\x69\xfc\x7c\x36\xeb\x83\x26\xf3\x3b\x74\x2d\x19\x87\x0f\x56\x31\xda\x09\x58\x78\x3d\xac\x87\x74\xe3\x48\x2e\xc6\xc0\xc9\x29\x0c\x37\x72\x38\xe7\xf9\xdd\xb3\xe0\xce\x9d\xc0\x88\x36\xa3\xc0\x33\x59\x4d\x00\xad\xf5\xf1\x51\x74\xf9\x1d\x8a\xf2\x4c\xeb\xcc\xe6\xe7\x54\x6e\xc7\x69\x52\x14\xb0\x5c\x5c\x2e\xa0\x73\x08\x02\xb4\x6a\x14\x83\x45\x51\xa2\x05\x26\x68\x2d\x3e\xa2\xf1\x2b\x8e\x3a\x2b\x11\x04\xb3\x90\x1b\xf7\x7b\x9a\xa8\x75\x48\xfd\xbf\x53\x30\x4a\x7b\x76\x49\x9f\x07\xf2\xd7\xe1\x74\x16\xd8\x47\x46\x33\xc3\x68\x8d\xd0\xa1\x68\x3b\xb5\x96\xec\x38\x4d\x12\x8b\xad\xde\x3e\x28\xae\xc3\x4a\xb6\xaf\x6e\x02\x7d\x60\x1d\x43\xfc\x75\x84\x52\x22\xe3\xfc\x42\x93\xc3\x6c\x1c\xf0\x6d\xfe\x1e\xb9\xa6\xd2\x93\x18\xdd\x2e\xee\x97\xa3\x2f\xf3\x88\xd1\x73\xe2\x33\xad\xa9\xc7\xf2\x6b\x24\xd6\x0d\xe7\x61\x79\x9d\x8d\x9a\x88\xf4\x7f\xe7\x95\xde\x19\xd7\xb5\xde\xed\x58\xc2\x9a\x2c\x44\xb7\xc0\xde\xa8\x93\x03\xb3\xf1\x27\x45\x34\xfe\x2a\x5e\xed\xef\xee\xcf\x5f\x9f\x76\x87\x46\x9e\x9c\x82\x1f\x13\xf9\x07\xd3\x08\xeb\x6a\xa1\xb3\xd5\x04\x9a\xf1\x6f\xdf\xdc\xe5\x73\x51\xee\xc5\xf2\xdd\xcd\x2d\x0a\x38\xe0\x06\x15\xaf\xa8\xdc\x82\x32\x4c\x51\xd3\xaa\xaa\x79\x70\x6f\x08\x7e\x40\x90\xd4\xe9\x12\xc4\x23\xa9\x32\xc4\xbc\x05\xfc\x57\xa2\x73\xa1\x0a\xd8\xe7\x92\x42\x6b\x07\xca\x40\x8d\x16\xa1\x57\x5c\x7b\x95\x11\x03\xad\xc1\xf5\x8a\x65\xfd\x46\x0a\xa7\x4c\x05\x64\xc0\x8f\x0d\x17\xf2\xaf\x3a\xf6\x87\xb8\x56\x0e\xa4\xf0\xb4\x3d\x44\x8b\x76\x4d\xb6\x11\x46\x22\x54\x42\x19\x7f\x15\x86\x18\xb8\x16\x0c\x95\x45\xc1\x13\x10\xa6\x04\xc5\xbf\x38\xd0\x9e\x4b\x85\x06\xad\x60\xb2\x20\xa9\x44\xaf\xe8\x46\x28\xc3\x42\x99\x00\xc3\x04\x25\x81\xe2\x08\xd4\x8b\x6d\xfe\x6c\x08\xb5\x86\x1e\xc1\x75\xae\x45\x39\x04\x84\x19\xb7\x22\x66\x8d\x06\xe5\x66\x02\xad\xa5\xb5\xd2\xe8\x33\x78\x5c\xd7\x8b\x16\x56\x42\x6e\x60\xe8\xdb\x73\x85\x08\xa2\x6d\x2d\x09\x59\xa7\x89\x32\x6d\xc7\x41\x08\x83\x60\xf2\x17\x13\x62\xe6\x37\xbf\x28\x8b\x26\x1a\x21\x04\x4e\x20\x24\xfb\x0e\x95\xfc\xa8\x17\x61\xf8\xbd\x10\x8d\x2c\x43\x11\x2f\x66\xeb\xa5\x60\xf1\x2d\xdc\x2f\x0e\x47\x26\x20\xcb\x9f\xc3\x5e\x7b\x7a\xfe\xa5\xcc\xe7\xd8\x9f\x77\xeb\x35\x5a\x2c\x6f\xa8\xaa\xd0\x66\xf1\x80\x2f\xec\x30\x3f\xeb\x5c\xe6\x57\xc8\x99\x2c\x27\xa0\xe3\xfe\xa7\x13\x70\x0f\xf2\xfd\xec\x23\xdd\xfc\x86\x2a\x38\x05\x9d\xdf\xb3\x55\xa6\xca\x7e\xa4\x32\xff\x37\xfa\x79\x2a\x64\xbd\x7f\x8c\xc0\x20\x96\xfb\xc7\x53\x87\x1a\xbd\x44\xa5\x68\xb9\xb3\x18\xfd\x42\x1d\xb7\x1d\x3f\xeb\xbf\xa1\x47\x8c\xb2\x67\x02\x01\x6e\x6b\x64\x7e\x4b\xa4\x83\xd2\x2b\x2b\x56\x40\x06\x61\x6d\xa9\xf1\x52\xb7\x08\xe8\x01\x59\x35\xc1\x66\x4e\x3c\xa2\xb7\xb4\xd0\x9a\xa4\x7f\x2e\x8a\xc2\x5b\x35\xec\x09\xb3\xf5\x47\xfd\x2b\xe3\x8d\xef\x31\x4e\xe0\x92\x82\x95\x2b\x02\x51\x86\x65\x65\x5e\x60\xfa\xc1\x41\x1d\x43\x67\x4a\xb4\x8e\x85\x09\x21\x35\xf5\x1e\x7b\x1b\xb2\xf7\x64\x37\x81\x5b\x58\xa5\x83\x37\x3d\x19\x44\x7f\x59\x43\x62\x8f\xdd\x2b\xad\xfd\xb8\xee\x84\xd6\x5b\x68\xc4\xc6\x3f\x7e\xa5\x0a\x22\xf0\xd3\xe5\x64\x0c\x33\xdf\x14\xb6\x4a\x6e\xb6\xa0\x94\x95\xc3\x68\xa8\x05\x3b\xe8\xeb\xed\x8b\x89\x10\xda\xe5\x91\x7d\x01\xf1\x73\x3e\x4d\x93\x68\x6e\xaf\x9d\x23\x36\x3f\x0b\x4b\xde\x2b\xb1\xef\x07\x9d\xc5\xd8\xfc\xae\x33\x59\xd4\x9f\x8a\x3e\xd7\xe3\x9f\xf0\xe4\x7e\x5e\x98\x87\xad\x45\xa0\x0f\xa7\x07\xfd\xac\x26\xf0\x17\x0c\xc6\x7f\x3f\xd8\x7e\x1f\x3d\x86\xd0\x42\xaf\x96\x38\xba\x6b\x7f\x21\x3d\x82\x14\x26\x4c\xe2\x75\x6c\x2b\x5a\xeb\x35\x33\x54\x97\xad\xc6\xe9\xee\xbf\x00\x00\x00\xff\xff\xe8\x75\xb7\x6a\xc1\x0b\x00\x00")

func templatesServerHttpHandler_xTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerHttpHandler_xTemplate,
		"templates/server/http/handler_x.template",
	)
}

func templatesServerHttpHandler_xTemplate() (*asset, error) {
	bytes, err := templatesServerHttpHandler_xTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/http/handler_x.template", size: 3009, mode: os.FileMode(420), modTime: time.Unix(1490219998, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServerHttpServerTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\x4d\x6f\xe3\x36\x10\x3d\x8b\xbf\xe2\x41\x08\x0a\x29\x50\xa5\xb6\xc7\x60\x83\xc2\xbb\xd1\xc6\x46\x1d\xdb\xb0\xb5\x08\xf6\x54\xd0\xd2\xd8\xe2\xae\x44\xaa\x24\x55\x39\x30\xf4\xdf\x0b\x52\x89\xed\x6b\x7d\xb2\xe6\xcd\x7b\xc3\xf9\x78\x1d\x2f\x7f\xf2\x23\xa1\xb6\xb6\x63\x2c\xcb\xf0\xb4\xc6\x6a\x5d\xe0\x65\xf6\x57\x8e\x2f\xf3\xd9\xea\x39\xdf\xa1\x58\xa3\x98\x2f\x76\xf8\xba\x58\xe6\x09\x8a\x79\xfe\x1d\xaf\x8b\xe5\x12\x9f\x73\x2c\xd7\xbb\x02\x8b\xaf\xf8\xbe\xfe\x86\x6d\xfe\x9c\xaf\xf2\xed\xac\xc8\x5d\x0e\x36\xcb\x6f\xcf\x8b\x15\x63\xa2\xed\x94\xb6\x88\x58\x10\x4a\xb2\x99\xab\x14\xb2\x20\xb4\xa2\xa5\x90\xb1\x20\x3c\x9f\x91\x6e\xa6\x67\x6c\x95\xb2\x18\xc7\xac\x54\x52\x52\x69\x85\x92\x21\x8b\xfd\xb3\x56\x34\xec\x48\xff\x4b\x1a\x9a\x6c\xaf\xa5\x01\x87\xa4\xc1\xbf\x1b\xc6\x23\xec\xd0\xcb\xf2\x9a\x18\x95\xb8\xbf\xea\xa4\x5f\x78\x59\x53\x8c\xe8\xde\x31\xd2\x29\x25\x01\x69\xad\x74\x8c\x33\x0b\xb2\x0c\xc5\xfa\x69\x0d\xe2\x65\x8d\xae\xe9\x8f\x42\x42\x12\x55\xae\x50\x2f\xc5\x3f\x3d\xc1\xb7\x61\x15\xe8\xd4\x29\x43\x9e\xb2\xef\x2d\x84\xb4\xa4\x25\x6f\x9a\xb7\x04\x25\x97\xe0\x4d\x83\xde\x10\x38\x4a\xd5\xb6\x4a\x7a\x1e\x0b\x78\x55\x69\x3c\x3c\x22\x7c\x70\x0d\xcf\x8b\x62\x93\x6e\x9c\xe0\x38\x86\xd7\xea\x2d\xff\x49\xb0\x35\x19\x42\xa9\xe4\x41\x1c\x7b\xcd\xf7\x0d\xc1\xa8\x96\x6a\x35\xb0\x40\x13\xaf\x0a\xd1\x92\xea\xad\x13\x73\x43\x4c\x77\x54\x2a\x59\xe1\x7e\xfa\x7a\xea\x35\x77\x1d\x47\x97\x32\xdb\x2b\x67\x1c\x63\x16\x0c\x5a\x58\xfa\xbf\x22\xaf\x37\x24\xa7\xc2\x82\xb6\x3f\x39\xb6\x9f\xe7\xc7\xd4\x5f\xfa\x53\x14\x33\x00\xc8\x32\x28\x49\x38\x28\x3d\x8d\x94\xfb\x35\x78\xe8\x7c\xfe\x15\x9a\xcb\x23\xe1\x4e\x26\xb8\xeb\x9c\x4a\x3a\xf3\xb8\xc1\x38\xfa\x9c\xb6\x3f\xa5\x73\x2e\xab\x86\xa2\x30\x9b\xb8\x26\x3b\x9f\x71\xd7\xa5\x5b\x3e\xac\x78\x4b\x6e\x70\x89\x5b\xf7\x14\x75\xa1\x71\x9c\x28\x3a\x2a\xe3\xf8\x52\x8a\x64\xe5\x54\x59\x60\x5c\xa1\x5f\x6e\xf6\x7f\x66\x41\x30\xab\x2a\xfd\x80\xeb\xcf\xad\x29\x61\x41\xf0\xae\x74\x81\xda\xfe\xe4\xc2\x37\xb3\xf4\xd0\xcd\x3e\x1c\x7c\x3b\x25\x87\xdf\x8e\xda\xe1\x2f\xfc\x34\x27\x5e\x91\xfe\xfc\x66\xc9\x3c\xe0\x77\x7c\xfa\x84\x3f\x7e\x4b\x58\x30\xba\xdd\xba\xcb\x86\x49\x20\x45\xc3\x46\x7f\xf7\x4b\x71\xac\x2d\x06\xcd\xbb\x8e\x34\xb8\x56\xbd\xac\xde\x2d\x20\xe4\x11\x5c\x4e\x27\x8c\x41\xd8\xda\x1d\x0e\x34\x99\x4e\x49\x43\x50\xfb\x1f\x54\x5a\x28\xe7\x19\xef\x6e\x6f\x0f\x4d\x5d\xf3\xf6\x2a\x6c\x9d\x3b\x5a\x74\xc9\x6e\xc9\x18\x7e\xa4\x74\xfb\x1e\x48\x30\x79\xeb\x12\xf0\x9d\x4d\x8e\xb9\x71\xcd\x07\x3f\xf5\x72\x78\x74\xd0\xf4\x3f\x8a\x6f\xd0\x9d\xe5\xb6\x37\x78\x44\xe8\xa9\x21\x0b\xf6\x09\xfe\x76\xeb\xf8\x61\x94\x4c\x5f\xb8\x36\x35\x6f\x2e\xaf\x89\xdd\xf5\x14\x35\x69\x82\x30\x90\xca\xd6\xae\xd7\x81\xbc\xbd\x2a\x05\x71\x80\xad\x85\xc1\x81\x8b\xc6\xfc\xc9\x82\x61\xba\xce\x68\x1f\xb3\xf1\xbf\x00\x00\x00\xff\xff\x69\x4d\x46\x4e\xd1\x04\x00\x00")

func templatesServerHttpServerTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerHttpServerTemplate,
		"templates/server/http/server.template",
	)
}

func templatesServerHttpServerTemplate() (*asset, error) {
	bytes, err := templatesServerHttpServerTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/http/server.template", size: 1233, mode: os.FileMode(420), modTime: time.Unix(1490197055, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTriggersTrigger_xTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x4d\x8f\xdb\x36\x10\x3d\x5b\xbf\xe2\xd5\xd8\x06\x72\x20\xcb\x68\x8f\x6e\xf6\x90\x36\x4e\xd6\xa8\x6b\x07\x5e\xa7\x45\x6e\xa1\xa5\x91\xcc\x58\x22\x55\x92\x5a\x77\x6b\xe8\xbf\x17\x14\x29\x7f\x64\xbd\xbb\xc1\x02\xf5\x89\x9c\x19\xce\xbc\xf7\x66\x48\xab\x62\xc9\x96\xe5\x04\xa3\x78\x9e\x93\xd2\x41\x30\x1a\xe1\xdd\x02\xf3\xc5\x0a\x7f\xbc\xfd\x7d\x82\xdf\x6e\xde\xce\x3f\x4c\x6e\xb1\x5a\x60\x75\x33\xbd\xc5\xfb\xe9\x6c\x12\x61\x75\x33\xf9\x8c\xbf\xa6\xb3\x19\x7e\x9d\x60\xb6\xb8\x5d\x61\xfa\x1e\x9f\x17\x9f\xb0\x9c\x7c\x98\xcc\x27\xcb\xb7\xab\x89\x8d\xc1\xc7\xd9\xa7\x0f\xd3\x79\x10\xf0\xb2\x92\xca\x20\x0c\x00\xa0\x2a\x64\x8e\x7e\xce\xcd\xa6\x5e\xc7\x89\x2c\x47\x5b\x59\x32\x91\x8e\xaa\xa2\xce\xb9\x18\xea\x74\x3b\xcc\xe5\xcf\xa3\x42\xe6\xfd\x36\xfe\xf9\xd0\x94\xeb\x8a\x99\x64\x43\xaa\x1f\x0c\x82\x60\xbf\xc7\x95\x60\x25\x61\x7c\x8d\x78\x6e\x17\x4d\x13\xec\xf7\x43\x28\x26\x72\xc2\x95\x88\x70\x55\xb5\xce\xa9\xa8\x6a\xd3\x79\x79\x86\xab\x2a\x9e\x88\xba\x9c\x71\x43\x8a\x15\xd6\x31\x1a\xc1\x05\x59\xbb\x3e\xcd\xc2\x23\x5c\xb5\x25\x2e\x1e\x3a\x60\x68\x9a\x95\xd3\xb6\x4d\x63\xcd\xd4\x61\x02\xd7\x60\x02\x24\xea\x92\x14\x33\x94\xe2\x8e\x15\x35\x05\x89\x14\xda\x1c\x32\x3c\x95\xe0\x1a\x6e\xef\x6b\xff\x69\x8f\x77\x74\x48\xa4\x4f\x2f\x1f\xa8\xb1\xa8\xcd\x77\xc8\xe1\xa3\x5e\xa8\xc7\x81\x8d\x4b\xf3\x02\x3d\xf0\x64\x8a\x17\x2b\xe2\x41\xb6\x89\xce\x25\x47\x4a\x19\x17\xa4\x61\x36\x04\xde\x5a\x32\xa9\xda\x5d\x77\xe0\x88\x29\x30\xf7\xd5\x25\xbb\xcb\xa4\x8d\xaa\x13\x83\x7d\x3b\xd7\xa7\x3d\xc0\xf9\x48\x36\x8d\x8f\xb0\x62\x76\xd4\xdc\x6e\x65\xf3\x37\x0d\xbe\x7c\xd5\x52\x8c\xfb\xce\xb8\x64\x3b\x1f\xd5\xff\x72\xc8\xed\x89\x3d\x42\xcd\xb7\xf1\x94\x9b\x74\xa6\x6f\xc9\x3d\xcb\xcd\xa7\xfa\x0e\x72\xc7\x09\xfb\x9f\xe8\x1d\x41\x81\x75\x8f\xda\x63\xb0\xcf\x01\xff\x5d\x53\x4d\x48\x36\x4c\xe0\xf5\x63\x14\xdb\xc0\xe3\x63\x73\xb2\x8c\xdf\x1d\x96\x1e\xd1\x9c\x76\x17\x4a\x2a\x32\xb5\x12\x1a\x0c\x82\x76\xd8\xef\xbf\xf5\x57\x4a\x56\xa4\x8a\x7b\x70\xc1\x0d\x67\x05\xff\x97\x52\x30\x91\x42\x11\x4b\xef\x61\x24\x54\x2d\xe2\x20\xab\x45\x72\xb9\x42\x98\x5e\x46\x35\xb8\xc4\xca\x53\x77\xa0\xf0\xea\x61\x80\xf3\x1f\xe4\x19\xa3\x64\x5b\x0a\x9f\x16\x29\xc2\x4f\x83\xe8\x70\xee\x08\x66\x8c\xd4\x99\xbb\x9e\xdd\xda\x0e\xee\x78\x51\x40\xd7\xeb\x92\x1b\xb0\xc7\x67\x4b\x0a\x23\xfd\xfd\x33\xa4\x04\x2b\x1c\xa0\x08\xbb\x0d\x4f\x36\xd6\x23\xb0\xae\xb3\x8c\x94\x86\x8f\xa4\x7f\x4e\x23\x9d\x64\xa1\xb9\x84\x7b\xd0\x42\x09\xa5\x4b\x9e\xb1\x84\xf6\xcd\xc0\x6b\x63\x62\x37\x18\x6f\x86\x90\x71\xf8\xfa\x91\x6b\x34\xf0\x94\x96\xc4\x3c\xa5\x4a\x56\xf6\x2d\xe3\x86\x4a\xc8\x2c\xbb\x88\xdd\x48\xac\x09\x1b\x26\x52\x4a\x5f\x82\xda\x56\x0b\x2f\x36\xd6\xab\x76\xd6\xde\x37\x43\xcf\xa5\x93\xdf\xc8\xca\x61\x4d\x0a\xa9\xe9\x09\x75\x1d\x21\x45\x77\x24\x4c\x3b\xb7\x5f\xe5\x5a\x23\x53\xb2\x04\xd9\x03\x5c\xe4\xf1\x33\xfa\x1a\x59\x85\x9d\xa4\x6d\xb9\xd0\x83\x19\x1c\xd0\x30\x65\x2c\xa1\x99\xec\x60\xad\x0b\x99\x6c\xa3\x76\xf2\xb9\xc8\x51\x0b\xc3\x0b\x7b\x71\x78\x81\x92\xb4\xb6\x9f\x2d\x5c\x43\x51\x42\xfc\x8e\xd2\x08\x25\x31\x61\x03\x1f\x12\xc1\x8e\x69\x57\x36\x7d\x0e\xe7\x09\x8a\xb0\x68\x3f\x55\xe2\x99\x74\x4e\x52\x4a\x76\x57\x26\x6b\x57\x3d\xbb\xf4\xaf\xe6\xf8\x1a\x26\x76\x1d\x39\x0c\x3f\xcf\x3a\xef\xf5\x75\x8b\xfb\x78\x9f\xec\x6f\x34\xc2\x6a\xe3\xde\x1c\x41\xc5\x09\xc8\x08\x3b\x42\x2e\x4d\xfb\x6f\x58\x56\xe6\x7e\xe8\xec\x43\xab\x45\x04\x2d\xad\x7f\xcd\x78\x61\xd3\x63\xc7\xcd\x06\x42\x82\x6b\x5d\x93\x3e\xab\xe0\x5b\x2f\x78\x71\x30\x37\xc1\xd1\xa9\x2b\x29\x74\xfb\x9f\xfd\xca\x2b\x1a\x2f\xbd\xf1\x1c\xe9\xad\x61\xa6\xd6\x63\xf4\xe5\xb6\x1f\x9d\x79\xdc\xa4\x8d\x3d\xcf\xe8\xa4\x4c\xaf\xc7\x33\xab\x99\x53\xe6\xe4\x51\x6a\x2f\x5b\x57\x7c\xf0\x4b\x1b\xf3\x43\xa7\x4f\xaf\xd7\xb3\x9a\x7f\x54\x5c\x98\x2c\xec\x2f\x6d\x77\xe9\x8e\x52\xaf\xbe\x26\xd1\x0e\x83\x7f\xda\xbb\x41\x18\xe3\x47\xdd\x8f\x6c\xcc\xc0\x66\xf0\xb4\x49\xa9\xa0\xd7\x6b\x82\x5e\x13\x34\xff\x05\x00\x00\xff\xff\xcf\x5b\x4e\x0f\xe9\x0a\x00\x00")

func templatesTriggersTrigger_xTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesTriggersTrigger_xTemplate,
		"templates/triggers/trigger_x.template",
	)
}

func templatesTriggersTrigger_xTemplate() (*asset, error) {
	bytes, err := templatesTriggersTrigger_xTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/triggers/trigger_x.template", size: 2793, mode: os.FileMode(420), modTime: time.Unix(1490275643, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTriggersTrigger_x_runTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x54\x4f\x6b\xdb\x4e\x10\xbd\xeb\x53\x3c\x7c\xf8\x21\x05\x47\x0a\xbf\x63\x20\x85\x92\x5e\x02\x69\x12\xd2\x50\x08\xa5\x87\x8d\x34\x96\x17\xaf\x66\x96\xfd\x93\x12\x8c\xbf\x7b\xd9\x95\xe4\x26\x24\x71\x2f\x85\x42\x7d\x30\x5a\xcd\xcc\x9b\x37\xef\xcd\xca\xaa\x76\xa3\x7a\x42\x70\xba\xef\xc9\xf9\xa2\xd0\x83\x15\x17\x50\x16\x00\x60\x8d\xf4\x58\xf4\x3a\xac\xe3\x43\xdd\xca\xd0\x6c\x64\x50\xdc\x35\xd6\xc4\x5e\xf3\xb1\xef\x36\xc7\xbd\xfc\xdf\x18\xe9\x17\x39\x7f\xb1\xdd\xa2\xbe\x19\x31\x6f\x45\x02\x76\xbb\xa6\x15\x66\x6a\x83\x16\x5e\x14\x55\x51\x34\x0d\xbe\x2a\xa3\x3b\x15\x08\x3f\xb4\x31\x78\x9c\x4f\x61\x4d\xd0\x6c\x63\x80\xf6\xb0\x4e\x2c\x39\xf3\x04\x4f\x21\xda\xba\x58\x45\x6e\x51\x6a\x1c\xa5\x0e\x57\x6a\x20\xec\x76\x77\x23\xe9\x8b\x54\x53\xed\x51\xcb\x0a\xdf\xbe\x93\x73\xe2\xb0\xcd\xa4\xf2\xb3\xc7\xe9\x19\x06\xb5\xa1\x72\x0a\x2e\x71\x52\xe5\x70\xfe\x6b\x1a\x9c\x47\x1f\x64\x98\xe9\x68\x61\xb4\xd2\x11\xd6\xe4\x68\x4e\xf9\x68\x2d\x71\x37\x03\x2a\x0f\x26\xea\xa8\x2b\xe6\xb8\xa3\x10\x1d\xe7\x93\x5e\xc1\x10\x97\x63\x6a\x85\x0f\x38\x99\xd8\xa4\xdf\x98\x37\xe1\xe4\xb7\xbb\xe2\xd9\x7b\xd6\xa6\xd8\xfd\x4e\x29\x89\xe1\xa0\x54\xf2\x96\x54\xd7\xb9\xe8\xdf\xd4\xea\x36\x32\x5c\x64\x9f\xd5\x99\xf6\x19\x8a\x3b\x3c\x18\x69\x37\x1e\x91\x83\x36\x2f\x82\x56\x8c\xd1\xdc\x27\x0d\x5b\x19\xac\xa1\x40\x10\x37\xb7\x1a\x65\x0c\x6f\xc9\x58\xa5\x66\x65\x5a\x6c\x1c\xfd\x5a\xef\xfa\x7c\xff\xb8\x9c\x16\x79\x5f\xfb\x72\x59\x97\x48\xf7\x2a\x5d\xae\xfa\x52\x46\xc0\xe7\x26\x34\x0d\x3e\xab\x0d\xc1\x47\x47\x08\x82\xeb\xab\xcb\x7b\x44\x4f\xa9\xaa\xbe\x71\x9a\x83\xe1\x3c\xd9\xfe\xbc\x4a\x69\x09\x53\xf1\x13\xda\xd1\x9c\x81\xbc\x57\x3d\xf9\x65\x4e\xed\x04\x2c\x21\xa3\x24\x09\x58\xdc\xa0\x0c\xfa\x5c\xd5\x93\xcb\x7d\x57\x7b\x06\x13\x8b\x7b\x89\xee\x99\xb3\xfb\x50\xd0\x03\xd5\x5f\x0c\x91\x2d\xf3\x9c\xf5\x05\x07\x72\x8f\xca\x54\xa9\xea\xd3\xd8\xca\xd1\x20\x8f\x59\x50\x65\x02\x39\x84\xb5\xf6\x30\x9a\xe9\x90\x89\x77\xe4\xc3\x2b\x17\x97\x78\x88\x01\x9d\x90\xcf\xc0\xd9\xcf\x3c\x94\xb0\x79\x7a\xed\xf9\x6c\xab\x30\x65\xa6\x87\x9d\x4c\x1d\xff\xac\x95\xe5\xbb\x17\x6f\x39\xda\x5c\xfd\x65\x9f\xa7\x4f\xc7\xe9\x19\xfe\x7b\x8f\xe9\x76\x57\x1c\xd8\x81\xc9\x36\x99\x86\xca\xf6\xfd\x0c\x00\x00\xff\xff\x2f\x16\xf3\xde\x4a\x06\x00\x00")

func templatesTriggersTrigger_x_runTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesTriggersTrigger_x_runTemplate,
		"templates/triggers/trigger_x_run.template",
	)
}

func templatesTriggersTrigger_x_runTemplate() (*asset, error) {
	bytes, err := templatesTriggersTrigger_x_runTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/triggers/trigger_x_run.template", size: 1610, mode: os.FileMode(420), modTime: time.Unix(1490220190, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTypesType_xTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x51\xcb\x8e\x9b\x30\x14\xdd\xfb\x2b\x8e\x22\x56\x55\x1a\xf6\x91\xb2\x48\x5b\x27\x41\xa5\x50\x05\xd2\x2a\xbb\x38\x70\x49\x69\x8d\x41\xd8\x74\x34\x42\xfc\xfb\xc8\xc4\x79\x4c\x34\xb3\x99\xdd\x7d\x9c\xc7\xf5\x71\x23\xb2\x7f\xe2\x44\x30\xcf\x0d\x69\xc6\x7c\x1f\xdf\x62\x44\x71\x8a\x1f\xcb\xef\x1c\x5f\x37\xcb\x68\xcd\x13\xa4\x31\xd2\x4d\x90\x60\x15\x84\x7c\x8a\x74\xc3\xf7\xf8\x1d\x84\x21\xbe\x70\x84\x71\x92\x22\x58\x61\x1f\xef\xb0\xe5\x6b\x1e\xf1\xed\x32\xe5\x16\x83\x9f\xe1\x6e\x1d\x44\x8c\xf5\x3d\xbc\x48\x54\x84\xf9\x02\xb3\xb1\x18\x06\xd6\xf7\x9f\xd1\x0a\x75\x22\x78\x6a\x0a\xaf\x19\x97\xab\x92\x64\xae\x1f\xd6\xe5\x14\xde\xc8\xf5\x9a\x19\x57\x5d\x15\x96\x86\x5a\x21\x2d\xca\xf7\x71\x15\x1f\x06\x5b\xd2\xc5\x00\xa5\x86\x50\x20\xd5\x55\xd4\x0a\x43\x39\xfe\x0b\xd9\x11\xcb\x6a\xa5\xcd\xfb\xac\x05\xce\xbd\x33\xf9\x65\x39\x97\x7b\x48\xe5\xb7\xca\x0e\x9d\xff\x2b\x4b\x64\x9d\x36\x75\x35\x06\x8a\x13\x29\x67\x5e\x17\x05\xea\x02\xe6\x0f\x41\x37\x94\xb1\x71\x7d\xcf\xd5\xa6\xed\x32\x83\x9e\x01\xc0\x9b\xe1\x24\x75\x6b\x28\xbf\x45\x74\x01\x96\xc5\x98\x4c\x75\xa4\xfc\x36\x76\xd3\xa8\x93\x52\x1c\xa5\x75\xf8\xd4\xf7\xee\x6e\xfb\xc2\x66\x96\xda\x1f\x0f\x94\xa1\x56\x09\x69\x9b\x3b\x32\x49\x7d\xdf\x5a\x21\x77\xe6\x47\x95\x71\xf8\xab\x6b\x35\x9f\x9c\x11\x5b\xf1\xe4\x04\x27\x87\xeb\x3b\x5c\xa8\x0f\xed\xf0\x12\x00\x00\xff\xff\x9b\x9b\x4a\x47\xa2\x02\x00\x00")

func templatesTypesType_xTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesTypesType_xTemplate,
		"templates/types/type_x.template",
	)
}

func templatesTypesType_xTemplate() (*asset, error) {
	bytes, err := templatesTypesType_xTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/types/type_x.template", size: 674, mode: os.FileMode(420), modTime: time.Unix(1490194044, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesVendorGitkeep = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func templatesVendorGitkeepBytes() ([]byte, error) {
	return bindataRead(
		_templatesVendorGitkeep,
		"templates/vendor/.gitkeep",
	)
}

func templatesVendorGitkeep() (*asset, error) {
	bytes, err := templatesVendorGitkeepBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/vendor/.gitkeep", size: 0, mode: os.FileMode(420), modTime: time.Unix(1490194044, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/Dockerfile.template": templatesDockerfileTemplate,
	"templates/Makefile.template": templatesMakefileTemplate,
	"templates/actions/action_x.template": templatesActionsAction_xTemplate,
	"templates/actions/action_x_run.template": templatesActionsAction_x_runTemplate,
	"templates/cmd/main.template": templatesCmdMainTemplate,
	"templates/connection/cache.template": templatesConnectionCacheTemplate,
	"templates/connection/connect.template": templatesConnectionConnectTemplate,
	"templates/connection/connection.template": templatesConnectionConnectionTemplate,
	"templates/server/http/handler_x.template": templatesServerHttpHandler_xTemplate,
	"templates/server/http/server.template": templatesServerHttpServerTemplate,
	"templates/triggers/trigger_x.template": templatesTriggersTrigger_xTemplate,
	"templates/triggers/trigger_x_run.template": templatesTriggersTrigger_x_runTemplate,
	"templates/types/type_x.template": templatesTypesType_xTemplate,
	"templates/vendor/.gitkeep": templatesVendorGitkeep,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"Dockerfile.template": &bintree{templatesDockerfileTemplate, map[string]*bintree{}},
		"Makefile.template": &bintree{templatesMakefileTemplate, map[string]*bintree{}},
		"actions": &bintree{nil, map[string]*bintree{
			"action_x.template": &bintree{templatesActionsAction_xTemplate, map[string]*bintree{}},
			"action_x_run.template": &bintree{templatesActionsAction_x_runTemplate, map[string]*bintree{}},
		}},
		"cmd": &bintree{nil, map[string]*bintree{
			"main.template": &bintree{templatesCmdMainTemplate, map[string]*bintree{}},
		}},
		"connection": &bintree{nil, map[string]*bintree{
			"cache.template": &bintree{templatesConnectionCacheTemplate, map[string]*bintree{}},
			"connect.template": &bintree{templatesConnectionConnectTemplate, map[string]*bintree{}},
			"connection.template": &bintree{templatesConnectionConnectionTemplate, map[string]*bintree{}},
		}},
		"server": &bintree{nil, map[string]*bintree{
			"http": &bintree{nil, map[string]*bintree{
				"handler_x.template": &bintree{templatesServerHttpHandler_xTemplate, map[string]*bintree{}},
				"server.template": &bintree{templatesServerHttpServerTemplate, map[string]*bintree{}},
			}},
		}},
		"triggers": &bintree{nil, map[string]*bintree{
			"trigger_x.template": &bintree{templatesTriggersTrigger_xTemplate, map[string]*bintree{}},
			"trigger_x_run.template": &bintree{templatesTriggersTrigger_x_runTemplate, map[string]*bintree{}},
		}},
		"types": &bintree{nil, map[string]*bintree{
			"type_x.template": &bintree{templatesTypesType_xTemplate, map[string]*bintree{}},
		}},
		"vendor": &bintree{nil, map[string]*bintree{
			".gitkeep": &bintree{templatesVendorGitkeep, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

