// Code generated by go-bindata.
// sources:
// templates/Dockerfile.template
// templates/Makefile.template
// templates/actions/action_x.template
// templates/actions/action_x_run.template
// templates/cmd/main.template
// templates/connection/cache.template
// templates/connection/connect.template
// templates/connection/connection.template
// templates/server/http/handler_x.template
// templates/server/http/server.template
// templates/triggers/trigger_x.template
// templates/triggers/trigger_x_run.template
// templates/types/type_x.template
// templates/vendor/.gitkeep
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesDockerfileTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\x4f\x4f\xc3\x20\x18\xc6\xef\x7c\x8a\x37\xbb\x17\x9c\x89\x17\x93\x1e\x66\x8a\xa6\x71\x83\x86\xd4\xa9\x31\x1e\xb0\x45\x42\x18\xd0\xd0\x7a\x98\x0d\xdf\xdd\x2c\xa5\x27\xf5\xc8\xc3\xf3\xe7\xf7\xde\x0b\x7e\x00\x1b\x9c\xf4\x3d\xd1\xa1\x18\x4e\x5f\xda\xf8\xdb\x2b\x7c\x0d\x68\xbf\xbb\xa3\x7b\x08\x51\x4b\x6f\xbe\xe5\x64\x82\x2f\x17\x63\xfe\x19\x7b\x5b\xea\x90\x1f\xd3\x79\x50\xe5\x92\x46\x88\xb2\x23\x3c\xf0\xed\xcd\x91\xb2\x8a\x0b\xfa\xd2\x50\x51\x1f\x28\x6b\xcb\x2d\x42\xe2\x89\x81\xb3\xbd\x89\x50\x0c\x40\xf2\xf2\x12\x1c\xc9\x87\xf1\x68\x57\x55\x80\x81\xe8\x40\xc6\xd8\x91\x79\x06\xdc\xc8\xce\x4a\xad\x44\x08\x13\xa4\x84\x9e\xb9\x78\xac\x6a\xf1\x9f\x25\x25\xb4\x74\xe4\x56\x3c\x0e\xaa\xc3\x67\xe9\x4e\xf0\x4b\xc9\x38\xd2\x2a\x58\xd9\x2f\x42\x74\x50\xc4\xcf\x75\xe0\x72\x4f\x2b\x5e\x1b\x5e\xb3\x16\xde\x36\x7f\x30\x93\x79\xc6\x4c\x3a\x95\xd2\xe6\x1d\xfd\x04\x00\x00\xff\xff\xc4\x7a\x21\x4f\x52\x01\x00\x00")

func templatesDockerfileTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesDockerfileTemplate,
		"templates/Dockerfile.template",
	)
}

func templatesDockerfileTemplate() (*asset, error) {
	bytes, err := templatesDockerfileTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/Dockerfile.template", size: 338, mode: os.FileMode(420), modTime: time.Unix(1488814111, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesMakefileTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x6d\x6f\xdb\x36\x10\xfe\x2c\xfe\x8a\xab\x67\xd8\x56\x10\x8a\x71\xb0\x6e\x80\xb6\xbc\x14\x71\x90\x16\xc5\x6c\x23\x49\x5b\x0c\xd3\x5a\x30\x12\x2d\x11\x96\x48\x81\xa2\x9c\x25\x71\xfe\xfb\x40\xea\xc5\x76\xec\xb8\xfd\xb0\x7d\x09\xe2\xbb\xe3\xdd\xf3\xdc\x3d\x3c\xea\xf3\xe5\xf5\xcd\x87\xc9\xf8\xec\xa4\x3b\x28\x12\x96\xa6\x10\x2b\x96\x43\xff\xeb\x82\xa9\x82\x4b\xe1\x43\x1f\xf2\xb4\x8c\xb9\xf0\x8a\x9c\x85\xde\x03\xcd\x52\x58\x42\xc1\x22\xe8\x17\xa4\x0d\x22\xa4\xef\xa2\xf1\xbb\x3f\x2e\xb7\xf2\x08\x9a\xb1\xfd\x49\xaa\x08\x9b\xe1\x72\x7c\x31\x19\x7d\x18\x5f\xf9\x6d\x96\x3b\x5a\xb0\x5f\x7e\x06\x1e\x4a\xe1\xe5\x22\x86\xe3\x53\x12\xb1\x05\x11\x65\xba\xca\xb0\x24\xcb\x20\x20\xcb\xb8\x0f\x4b\xd0\x0a\x70\x04\xfd\x40\xf4\x5d\xf4\xf9\x72\x3c\x9a\x5c\xef\x60\x26\x22\xa9\xbe\x47\xac\x8a\xb1\xa8\x2e\xbe\x8c\xce\x36\x00\x19\xc4\xd0\x1d\x4c\xbf\x8c\x5c\x17\x7d\xdb\xa4\xcd\xc2\x44\x42\x77\x60\x8c\x2e\x2c\x81\xde\xcf\xa1\xff\x04\xb9\xe2\x42\x83\x96\x65\x9e\x33\x35\x28\xca\xbb\x42\xab\x41\xb7\x7b\x74\x38\x3c\x1c\xba\x2e\x68\x99\xca\xfb\x4d\xc7\xb1\xeb\xc2\x73\xdf\x45\x68\xfa\xf1\xea\xa4\x3b\xa8\xb8\xb8\xb8\xce\x8c\x8d\xc5\x0e\xce\xf5\x34\x55\x5e\xfc\x88\xd0\xe8\xe6\xf6\xec\x84\xcc\x65\x46\x45\x44\x2a\x6a\x05\xb9\xe3\x02\xa1\xeb\xcb\xe9\xe4\xe4\xe9\x09\xbc\x29\x0d\xe7\x34\x66\xd7\x52\x6a\x78\x7e\x46\x7c\x26\x22\x36\x03\xe3\x46\x8e\x0d\xaa\xd3\x23\x26\x22\x3e\x43\x88\xa6\xa9\x6f\x7b\x0f\x3c\xa3\x31\x83\xbc\x3a\x0f\xaa\x14\x82\x29\x84\xaa\x2a\x3e\x70\x51\x68\x9a\xa6\x08\xdd\x95\x3c\x8d\x7c\xe4\x9c\xdb\x36\x74\x3e\x15\x5c\xc4\xa0\x58\x6e\x5a\x62\x0a\xb8\x1d\xe4\x68\x56\x68\x33\xa4\xee\xe0\x6a\x32\x7d\x77\xfb\xde\x25\x85\x0a\x49\xed\x87\xe5\x12\x52\x01\xb8\xa8\xfb\xfb\x4a\x14\x72\xb2\x79\xc4\x15\xe0\x1c\x0c\x43\x27\x96\x60\x4b\x03\x96\xc6\x40\x9a\x01\xec\x3c\x4d\xc2\x2c\x22\x19\xe5\xc2\x8b\x25\x42\x35\x76\xbf\x4a\x80\x9c\x30\x07\xac\x5e\x24\x19\xdd\xdc\xba\x08\x99\x46\x18\x6e\x15\x81\xd9\x4a\x94\xbd\x1e\x04\xc8\x31\xd2\xc1\xdc\xbb\x2b\xa1\x43\xbe\x1a\x1f\x29\x48\x30\xb0\x87\x20\x70\xbd\x03\x12\x0c\x83\x4e\x44\x35\xf5\x6d\x33\x03\x92\x8b\xf8\xb7\x4a\xdf\x87\xdd\x41\x23\x7d\x37\xe8\x90\xce\x0e\x65\x1a\x69\x97\x0c\x39\xe7\x2a\x33\xb5\x0f\x4c\x9d\xc6\x88\xea\xb9\xf8\xc8\x31\x5e\x35\x33\xcd\xfb\x78\xe5\x22\x47\x53\x05\x38\x5c\x3c\x36\x16\xc0\x98\xfd\x13\xa6\x65\xc4\x4e\x6a\xc3\x01\x42\x16\x8e\x8f\x9c\x48\x86\x73\xa6\x9a\x46\xe2\xdc\xdc\x31\xac\xa1\x15\x5f\xd3\x10\x7f\x25\x3e\xf0\xda\x63\x9a\xc6\xfb\x43\xb7\x9d\x29\x35\xad\x44\x48\xb1\x98\x09\xa6\xa8\x66\xad\x74\xae\x2a\x83\x91\x8f\x60\xf7\x75\x3f\xa0\x98\xb3\x94\x69\x29\xda\x21\x44\xe0\x79\xed\x9c\x96\x4b\xc8\x16\xa6\x39\xd6\x76\x61\xd4\xb3\xf2\x22\xe7\xfc\x3e\xe1\x61\x02\xd5\x05\x81\xe1\xda\x22\xe9\xf5\x1a\x6b\x5d\xa7\x81\x03\xb1\xdc\x1e\x05\xc6\x39\xd5\x4d\x1e\x9d\xe5\x6b\xb3\xb1\xd0\x27\x0b\xa6\x52\xfa\x60\xa0\xbf\x80\x0d\x5a\x82\x4e\x18\x84\xa5\x52\x4c\x68\x88\xb8\x62\xa1\x96\xea\x61\x8d\xcf\x2a\x6d\xaf\x07\x11\x9f\xcd\x00\x97\x63\xb5\x4e\xb3\x8d\x20\x70\xda\x6c\x1a\xcf\x46\xae\x80\x34\x12\xdd\x70\xf7\x7a\x90\x53\x1d\x26\xe6\x76\xe1\x7c\x08\xbf\xbf\x76\xba\x91\x98\x54\x3c\x86\x83\xca\x7b\xe0\xc5\x8f\x5b\x05\x5e\xc0\xad\xc5\xb7\xdd\x19\x54\x2d\x0c\xbf\x29\x88\x55\x29\x1a\x23\x4e\xb4\xce\x37\x3c\xd6\xd2\xba\xb5\xe2\x71\xfc\xe2\x6c\x63\x44\x68\xcd\x68\xb4\x63\xf7\xec\x0c\x3a\x3f\xbd\x31\x9b\x8f\x14\x49\x20\x6a\x79\xaa\x52\x00\xc6\x06\x21\xdf\x2f\x53\x4c\x43\xcd\xa5\x80\xa0\xdb\x3d\xef\xc0\x29\xb4\x8d\xb7\xa0\x9d\xf3\x30\xc9\x64\x04\xbf\xbe\x7d\xbb\xe5\xa9\x76\xde\x5f\xf8\x6f\xf8\x54\xb0\x4d\x2f\x60\x9c\xb0\x34\x37\x02\x30\xbf\x8c\x08\x6a\x5d\x75\x36\x38\x54\xcd\xf8\x41\x22\x39\x0c\x8f\x8e\x8e\x86\xf8\xd8\xfc\xf5\xed\xff\xdf\x67\x67\x0a\x6c\xd1\xaa\x3a\xfe\x2a\xb7\xc6\xbd\x87\xa0\x0d\xf9\x61\x96\xcd\x4c\xff\xa3\x89\xd5\xe9\x76\x8f\xac\xd5\xca\xeb\xf4\x56\x11\xfb\x18\x36\x55\xf6\x91\x34\x9e\xf5\x27\xc2\xf3\x88\x96\x32\x2d\x88\x71\x78\xf9\x83\xb9\x11\x55\x8d\x8b\x84\x85\x73\x30\x5b\x05\x4c\x04\x08\xa9\x81\x0b\xbb\x9a\x23\xe0\x02\xc2\xb2\xd0\x32\x63\xaa\x79\x5b\x8b\x37\x9d\x7d\x79\xcd\xdd\x7e\xd0\x89\x14\xc7\xdb\x3e\x8f\xbc\xdc\x61\x08\x2d\x68\xca\xa3\x7a\xe1\x6e\x25\x0d\x0d\xb6\x6f\x36\xfa\x7f\x80\xbc\x99\x7d\x17\xf0\xcd\x88\x5d\xf0\xbd\xe9\xfb\xc9\xf8\x4f\x1f\xa8\xf9\x22\xb3\xef\x55\xf3\x69\x52\x7f\xa8\x54\x8b\x77\xf5\xb0\xa0\x7f\x03\x00\x00\xff\xff\x7e\x06\x1e\xdd\xe8\x0a\x00\x00")

func templatesMakefileTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesMakefileTemplate,
		"templates/Makefile.template",
	)
}

func templatesMakefileTemplate() (*asset, error) {
	bytes, err := templatesMakefileTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/Makefile.template", size: 2792, mode: os.FileMode(420), modTime: time.Unix(1489608809, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesActionsAction_xTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\x5f\x6f\xba\x30\x14\x7d\xe7\x53\x9c\x18\x1e\xfd\xc9\xbb\x89\x0f\xfc\xb6\xaa\x64\x0c\x16\xc5\x2d\xbe\xd9\x60\x75\x6c\x5a\x08\x2d\x5b\x16\xd2\xef\xbe\x94\x16\xc3\x86\x89\xc6\x64\x6f\xf7\xcf\x39\xb7\xe7\x9e\x36\x2d\x68\xfa\x4e\xf7\x0c\x34\x95\x59\xce\x85\xe3\x78\x1e\xee\x63\x44\x71\x82\x47\xff\x81\xe0\x6e\xee\x47\x33\xb2\x44\x12\x23\x99\x07\x4b\x4c\x83\x90\x0c\x91\xcc\xc9\x1a\x2f\x41\x18\xe2\x3f\x41\x18\x2f\x13\x04\x53\xac\xe3\x15\x16\x64\x46\x22\xb2\xf0\x13\xa2\x31\x78\x0a\x57\xb3\x20\x72\xea\x1a\x2e\xa7\x47\x86\xf1\x04\xa3\x48\x07\x4a\x39\x75\xfd\x0f\x25\xe5\x7b\x06\x97\x0f\xe1\x16\x4d\x33\xe0\x45\x25\xdb\x6e\xb6\x83\x5b\x8c\x08\xaf\x8e\x61\x26\x59\x49\x0f\xba\xe1\x79\x30\x20\x5d\x17\xdd\x29\xd9\x10\x6e\x73\xc4\x59\xd2\x49\x83\x52\x0d\x5f\xe7\xac\x15\x83\x4c\x80\x72\x30\x5e\x1d\x59\x49\x25\xdb\xe2\x83\x1e\x2a\xe6\xa4\x39\x17\xf2\x02\x75\x02\x93\xdb\xe3\x9e\x35\xb1\xdd\x80\xf1\x6d\x27\xec\x17\x7b\xfb\xc7\x95\xbc\xc2\x00\x8b\xba\xdd\x01\x33\xe0\x36\x0b\xce\x71\xaf\xf7\xe0\x57\x68\x75\xb5\x83\xcc\xcd\x66\x02\xf2\x95\x21\x6b\x92\x5d\x5e\x76\x11\x8e\xfc\x2a\x58\x9f\x22\x64\x59\xa5\x12\xb5\x03\x00\x5d\x67\xf1\xf3\x69\x29\x65\x11\xda\xa2\x56\xbd\xc9\x12\x3d\x58\x29\x6c\xde\x44\xce\xc7\x03\x53\x5c\xd0\x4f\x8b\x1a\x6c\x4e\xb3\xad\xf6\x9e\x7a\x7b\x2d\x56\x7e\x6e\xb2\x4b\xfa\x2d\xe9\x8a\x05\x0c\xf2\x4f\x37\xf0\x9b\x5f\xc0\x3e\x05\xf3\x25\xf4\x04\x5b\x4c\x2b\x58\x7d\x07\x00\x00\xff\xff\xe0\x17\x20\xd4\x42\x04\x00\x00")

func templatesActionsAction_xTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesActionsAction_xTemplate,
		"templates/actions/action_x.template",
	)
}

func templatesActionsAction_xTemplate() (*asset, error) {
	bytes, err := templatesActionsAction_xTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/actions/action_x.template", size: 1090, mode: os.FileMode(420), modTime: time.Unix(1490024398, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesActionsAction_x_runTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x52\x4d\x6b\xdb\x40\x10\xbd\xeb\x57\x3c\x7c\x28\x92\x71\xa4\xd0\x63\x20\x85\x90\x53\x20\x4d\x4a\x28\x85\x50\x7a\xd8\x4a\xa3\xf5\xe2\xd5\x8e\xd8\x0f\x87\x60\xf4\xdf\xcb\xae\x24\x7f\xc4\xd0\x9e\x72\x29\xf1\xc1\xec\xcc\xbc\x99\x79\x7a\x6f\x7a\x51\x6f\x84\x24\x88\xda\x2b\x36\x2e\xcb\x54\xd7\xb3\xf5\xc8\x33\x00\x58\xec\x76\x28\xbf\x8d\x90\x27\x66\x8f\x61\xa8\x6a\x36\x86\x12\x7a\x31\x62\xa4\xf2\xeb\xf0\xbb\xac\xb9\xab\x36\xdc\x09\xd3\x54\xbd\x0e\x52\x99\x0b\xd7\x6c\x2e\x24\x7f\xae\x34\xcb\x45\x56\x64\x59\x55\xe1\x87\xd0\xaa\x11\x9e\xf0\xa2\xb4\xc6\x76\x8e\xfc\x9a\xa0\x4c\x1f\x3c\x94\x43\x6f\xb9\x27\xab\x5f\xe1\xc8\x87\xbe\xcc\xda\x60\x6a\xe4\x0a\xcb\x48\xe6\x41\x74\x84\x61\xb8\x8b\xe0\x62\x3f\x2e\x2f\xf0\xf3\x17\x59\xcb\x16\xbb\x44\x8a\xac\x75\xb8\xba\x46\x27\x36\x94\x4f\xa5\x15\x2e\x8b\x54\x4c\x7f\x55\x85\xdb\xe0\x3c\x77\x33\x0b\xc5\x06\x35\x37\x84\x35\x59\x9a\x21\x37\x7d\x4f\xa6\x41\xea\x77\x10\x0e\x86\xa8\xa1\x26\x9b\xeb\x96\x7c\xb0\x26\x45\xaa\x85\x26\x93\xc7\xcd\x05\xbe\xe0\x72\x62\x12\x7f\x23\x2a\x91\x4a\xb9\x21\x3b\xca\x1a\xa5\xb3\xe1\x5f\xe2\x70\xf0\x7f\x55\x87\x4f\xd4\x79\x4c\xe8\xff\x4d\x9e\xa7\x60\x46\x65\x6c\x30\x49\x94\xf1\x66\xf1\xa2\xfc\x3a\xc5\x52\x6d\xc9\x4c\x77\xc4\x5b\xb2\x47\xc9\xc3\xd1\x4e\x82\x89\x13\xc1\x6e\x52\xa9\x88\x2b\xf2\x08\xc5\xf2\xd0\x50\xde\xee\x9f\xab\x69\xf8\xd9\x25\xae\xa0\x59\x62\xa9\x59\x96\xf7\x2c\x25\xd9\x02\xf9\xb9\x21\xab\x51\xa8\x62\xfa\xf4\xc9\xd3\xab\x6b\x7c\x3a\x83\xee\x86\x59\xc2\x67\x0e\xf6\x48\xf8\x39\xfd\x55\x6c\x08\x2e\x58\x82\x67\x3c\x3e\xdc\x3f\x23\x38\x8a\x2c\xca\x3b\xd3\x32\x84\x69\xf6\x41\x1b\x21\x91\x9f\x30\xaf\xa8\x47\x53\xe3\xc0\x37\x2e\xcd\x7c\x62\xab\xe1\x91\x2a\x5a\xb6\x70\xa1\xae\xc9\xb9\x37\x68\xa3\x74\x82\x1e\x70\xad\x50\x3a\xcc\x14\x4f\x66\xae\x8e\x5c\xfc\x4e\xce\x8f\x36\xfa\xf8\x7a\x1f\x1f\xe3\x92\x0f\x23\xdf\xcd\xc8\x3f\x01\x00\x00\xff\xff\x46\xdc\xf3\xd2\x35\x06\x00\x00")

func templatesActionsAction_x_runTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesActionsAction_x_runTemplate,
		"templates/actions/action_x_run.template",
	)
}

func templatesActionsAction_x_runTemplate() (*asset, error) {
	bytes, err := templatesActionsAction_x_runTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/actions/action_x_run.template", size: 1589, mode: os.FileMode(420), modTime: time.Unix(1489759902, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCmdMainTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x59\xdd\x6e\x1c\x37\xb2\xbe\xee\x7e\x8a\x3a\x0d\xdb\xe9\x49\xc6\x3d\xb1\x2f\x27\x47\x38\x70\x24\xd9\x16\x8e\x2c\x19\x92\x9c\x20\xb0\x8d\x80\xea\xae\xee\xe1\x0e\x9b\x6c\x90\x6c\x4d\x26\xc2\x00\x79\x08\x5f\xee\x03\xec\x73\xf9\x49\x16\x45\xb2\x7f\x46\x9a\xf1\xdf\x2e\x16\xd8\x5d\x20\x9e\x26\x8b\xc5\xfa\xfd\xaa\x8a\x6a\x58\xbe\x64\x15\x42\xcd\xb8\x8c\xe3\xd9\x0c\x8e\xce\xe1\xec\xfc\x0a\x5e\x3d\xfb\xff\x63\x38\x7c\xf9\xec\xec\xc5\xf1\x25\x5c\x9d\xc3\xd5\xcb\x93\x4b\x78\x7e\x72\x7a\x3c\x85\xab\x97\xc7\xbf\xc1\xaf\x27\xa7\xa7\xf0\xf3\x31\x9c\x9e\x5f\x5e\xc1\xc9\x73\xf8\xed\xfc\x0d\x5c\x1c\xbf\x38\x3e\x3b\xbe\x78\x76\x75\x4c\x34\xf0\xfa\xf4\xcd\x8b\x93\xb3\x38\xe6\x75\xa3\xb4\x85\x34\x8e\x12\x94\xb9\x2a\xb8\xac\x66\x7f\x33\x4a\x26\x71\x94\x94\xb5\xa5\x7f\x84\xaa\xe8\x1f\x65\x92\x38\x8e\x98\x34\x1c\x92\x8a\xdb\x45\x7b\x9d\xe5\xaa\x9e\xd5\x55\x6b\xff\x9c\xd1\x32\x6d\x8f\x77\x96\xaa\x66\xb2\x98\x35\xa2\xad\xb8\x7c\x6c\x8a\xe5\xe3\x4a\x3d\x9d\x15\xdc\x34\xcc\xe6\x0b\xd4\x49\x0c\x00\xd0\x08\x55\xc1\xe7\x8f\x05\x21\x3e\x4b\x57\xa3\x31\xac\x42\x92\xe5\xf6\xf6\x31\xf0\x12\xb2\x67\xb9\xe5\x4a\x1a\xd8\x6c\xe2\x28\xb9\xbd\x85\xec\xb5\x37\xeb\x85\x52\x16\x36\x9b\x19\xf3\xfb\x89\x3f\x81\xb2\xd8\x4b\x99\x2b\x29\xd1\x51\x27\xbb\x09\x0c\xea\x1b\xd4\xb3\x85\xb5\x4d\x32\x08\x70\xa5\x79\x55\xa1\xde\x2f\x81\x0d\x04\xdb\x22\x4c\xe2\xf8\x86\x69\x72\xcd\x6c\x06\x67\xac\x46\xf0\xba\x82\x64\x35\xc6\x91\x5b\x39\x00\xc7\xcf\xfd\xde\x6c\x12\x47\xfa\x0b\xca\x42\xe9\x8e\xf8\xc6\x7d\xc5\x51\x58\x0d\x07\xc2\xd7\x70\x44\x1b\xae\xe4\x70\xc6\x7d\x3a\xff\x74\x5b\xfd\x41\xff\xd9\x9d\x3c\x42\x93\x6b\xde\xd8\xd1\xe9\x62\x58\x72\x1c\xc6\x24\x81\xcb\x78\x89\x38\x4d\x5c\x74\x5f\x2d\xd0\x20\x14\x58\x72\x89\x70\xc3\x34\x57\xad\x81\x5c\x09\xa5\x21\x57\xd2\x58\x26\xad\x81\xce\x26\x82\xd7\x08\x70\x00\x14\x79\xd9\x21\x11\x1d\xaa\x02\xd3\xa4\xd2\x88\xf2\x87\xc5\xfc\x5a\xb0\x7c\x99\x4c\xe2\x48\x63\x01\xbb\x08\x35\x16\xb4\xed\xe8\xf7\xf1\xf1\xe7\x0d\xda\x9d\xe7\x0d\xda\x64\x42\xb2\xdb\x75\x83\x70\x78\x7a\xf2\x4c\x57\x06\x8c\xd5\x6d\x6e\x6f\xe3\xe8\x50\xd5\x14\xa1\xb4\xc0\x65\x15\x47\x97\xed\x75\x58\x32\xf0\xf6\x7d\xb7\xfa\xca\x07\x2c\x7c\x1f\x22\x37\xfb\xe5\x49\xbc\x89\xe3\xb2\x95\x39\x54\x68\x89\xe5\x73\xad\xea\xc3\xd3\x93\x74\x02\xe9\xf7\xe1\x96\x29\xa0\xd6\x4a\x4f\xe0\x36\x8e\x78\x09\x02\x65\xaa\x4c\x46\x3b\x13\xf8\xdf\x03\x78\x42\xeb\x91\x46\xdb\x6a\x09\x92\x8b\x40\x6e\xb2\x33\x5c\xa5\xc9\x5a\xb5\x50\xb7\xc6\x82\x69\x30\xe7\xe5\x1a\xf2\x20\xa9\x55\xc0\xe5\x8d\x5a\x22\xb0\xe0\x4c\x32\xc0\x26\x8e\x18\x29\x36\x3f\x80\x47\xe1\x7a\xe2\x1e\x74\x99\x43\xb8\xf8\xed\x93\xf7\xd3\x38\x1a\x6b\x39\x6c\x3d\x9d\xbb\xbd\xa0\xeb\x1c\x1e\x0d\xca\xde\x6e\xa6\xee\x0a\x63\x99\x9d\xc2\xef\x74\x8b\x32\xd9\xa5\x2d\xb8\xcc\x2e\x2d\xb3\xe9\x04\x66\x33\x38\xfe\xa3\x11\x3c\xe7\x56\xac\x81\x57\x52\x91\x4f\x9d\x46\x4e\xfb\x94\xce\x66\xaf\xc8\x2b\x13\x78\x44\xc7\xe9\xf7\xe1\x82\xe9\x23\xbc\xe1\x39\x4e\xe0\xe0\x00\x7e\x84\x5b\x17\x8d\x91\x0b\x34\x6e\xa0\x46\x26\x0d\xd8\x05\x6a\x04\x6e\xa0\x60\x96\x91\x01\x1a\xde\x20\x70\x09\xea\x06\x35\x18\x12\x63\x0a\x46\x81\x40\xfb\x9d\x81\x42\x01\xb7\x71\x14\x15\x98\x93\xa0\x04\x94\x64\xd2\x23\xcc\x55\x81\x3a\xed\x04\x9f\xc4\x11\xc9\x85\x5a\x13\x55\x81\x79\xe6\x29\x52\xb2\x63\x16\xac\x30\xf9\xc9\x11\xfc\xcf\x01\x39\xc8\xf9\xeb\xae\xc3\xe2\x88\x0c\xb3\x89\xbb\x75\xe6\x1c\x2f\xb9\xe8\x03\x84\x0a\x43\xea\x82\x80\x75\x41\x41\x37\xde\x8d\x9b\xb8\x93\x66\x74\x99\x50\x55\xf6\x9c\x59\x26\x52\xd4\xda\x7b\xd9\xac\xb8\xcd\x17\xee\x9a\xac\x0b\xde\xdb\x38\xca\x99\x41\x48\xb8\x2c\x55\x32\x8f\xa3\xe8\xb5\xe6\xd2\x8e\x12\x98\xd8\x7b\x12\xc3\xea\x46\xa0\x23\x0a\x31\xe9\x58\x8d\x22\xa2\xf7\x44\x34\x16\x20\xf9\xad\x0b\xc8\x46\xab\x1b\x5e\x20\x30\x09\x1e\x95\x41\x69\x08\xe8\x48\xce\xa9\x50\xa2\x66\x16\xc1\x5f\x05\x5c\x36\xad\x7d\x27\x8f\xff\x98\x77\x2b\xf5\xfa\x77\x7f\x92\x22\x97\x94\xf2\xf2\x5e\xba\xdd\x13\x22\xbf\x27\xd4\xdb\x1f\xdf\xf7\x2a\x3c\x76\xd0\x3d\xa7\x90\x3b\x62\x58\x2b\xc9\xff\x44\x60\x06\x68\x39\x8e\xa2\xc1\xc4\xb4\x40\xae\xbf\x74\x88\x9f\x0e\x95\x81\x16\x0f\x59\xbe\xc0\x74\x32\x0a\x83\xb1\x97\xef\x5a\xde\x49\x59\xd6\x36\x73\x92\x0a\x99\x26\xaf\x3d\x90\x8e\x90\x1d\xae\x95\xb2\x5c\x56\xf0\xf2\xea\xea\x75\x10\x2d\xcb\x32\xa7\x64\x17\xd0\x2b\x2e\x04\x5c\x0b\x95\x2f\xa1\x95\x96\x0b\x8a\x6d\xf0\x15\x09\xcc\xa2\xb5\x14\xbe\x2b\xb9\x15\x9a\x26\x3b\xe5\xc6\xa2\x7c\x26\x0b\xa7\x48\xba\x23\x28\x77\x89\x1b\x8c\x15\x2c\xed\xcc\x75\xd1\x4a\x60\x60\xb8\xac\x04\x76\xce\x63\x26\xa0\x79\x01\xd7\xeb\x6e\xb1\x61\x9a\xd5\x66\x94\x5f\x23\x15\xb8\x01\x25\xc9\xfd\x05\x14\x4a\xe2\x14\xb8\x85\x95\x92\xdf\x59\x28\x7a\x6f\xcc\xbc\x8e\x5b\x7a\xe8\x56\x9e\x4b\x3c\x2f\x4b\x5f\xeb\x77\xb9\x78\x0a\x9f\x49\xbe\x1d\x7a\x12\x5e\x04\x55\x43\x10\xee\x08\x8d\x86\x42\x73\x81\xd0\x28\x21\xc8\x43\x5d\xb8\x7e\x4a\xcf\x9d\xae\xea\x0e\xee\xf1\x95\x6e\x65\x68\x24\xfc\xf5\xff\x2e\x25\xa3\x4d\x0f\x27\x77\xcd\x58\xab\x02\x43\xf9\x9a\x42\x3d\x2e\x51\x13\x0f\xbf\xc4\x74\x57\x9b\x95\x17\xae\x5a\x8c\xb2\xe2\xb0\xff\x79\xc4\x2c\xbb\xdd\xc4\x91\x20\x12\xea\xfe\x28\x63\x4e\x15\x29\x46\x50\xe2\x4e\x0e\x4d\x22\x61\xd8\x05\x5b\xa5\x75\xf6\xb3\x2a\xd6\xd9\x51\xbf\x41\xa4\x58\xa2\x06\x91\x3d\x17\xad\x59\x04\xf0\xf5\x6a\xf5\x58\x16\x8e\x79\xd9\x3a\x69\x35\x93\x15\xc2\x03\x39\x85\x07\x0d\xdd\xb6\x2d\xba\xf3\xf7\xed\x2d\x3c\x68\xb2\x0b\xb6\xea\x3a\xab\xb9\xf7\xde\x1b\x59\x33\x6d\x16\xcc\x7b\xec\x5a\x15\x6b\xe0\xd2\x2a\xf7\xa5\x79\xb5\xb0\xa1\xfc\x7b\xea\x5f\x11\x72\xd5\x8a\x02\xd8\x8d\xe2\x85\x23\x7a\x0a\xf8\x47\x8e\xc6\xb8\xda\x01\x1d\xb3\x9c\x09\x61\xa8\xea\xb8\x6a\xb4\xe2\x76\x01\x0c\x84\xb2\xa0\x4a\xf0\x9a\x3c\xce\x19\xe5\x16\x28\x09\xd4\x6d\x18\x7f\xc1\x75\x6b\xe9\x94\xa5\x98\x22\xc1\xa7\x3e\x12\x51\x97\x4a\xd7\x4c\xe6\x08\x15\xe3\x92\xd2\x4a\x2a\x0b\x76\xc1\x2c\x54\x1a\xa9\xd0\x52\x8a\x71\x2a\x69\x82\x84\x09\xb8\xea\x1a\xad\x02\x09\x69\xa9\xb2\x58\xd6\x05\xad\x55\xbe\xf4\xf9\x9b\x56\x6c\x9d\x85\x60\x3e\x3f\x3a\x27\xe7\xaf\x10\x4c\x4b\xdd\x44\xa0\xe0\x06\x18\x5c\x2b\x6b\x05\x4a\xcc\x97\x53\x02\xf6\x92\x13\x60\x5b\x77\xb3\x59\xb1\x06\xae\x59\xbe\x84\x60\xbb\x41\x49\x04\xd6\x34\x5a\xb1\x7c\x41\xd1\x4f\x80\xed\x42\x29\x34\xe9\x99\x77\x4c\xf0\x8a\xc3\x73\x8a\xa5\x51\x9a\xb8\x9a\xdc\xbb\xa9\x8b\x1b\x47\x39\xf5\xf5\x62\x7f\xe1\xed\x6b\xee\x67\xf9\x0d\xe1\x3c\x85\xbc\xf8\x12\x8e\x94\x0b\x7d\xf5\xb8\x9f\x18\x69\x5e\x4c\x41\xec\xa9\x18\xf7\x98\xb1\xfd\x36\xf1\xb1\xec\x8c\xa2\x5b\xf9\x0a\xed\x42\xb9\x94\x62\xd9\x45\x1b\x00\xc5\xa5\xf5\xc1\x01\x24\x16\x8d\x4d\xc2\x15\x3d\x2d\x91\x5e\xa1\xb1\xe1\x2a\x35\x1d\x01\x90\x27\x49\xbd\x2e\xdc\xdb\xf4\x8b\x85\x9e\xcd\xfa\xbc\xf6\xf9\x82\xa6\x15\xae\x9b\xca\x2e\x51\x16\xa9\x9a\x6c\x4f\x60\x05\x96\xac\x15\x76\x3e\x74\xb2\x54\x24\x8f\x09\x77\xca\x34\x69\xe5\x52\xaa\x55\xdf\x27\x3c\x34\xc9\x74\x3b\xdb\x7d\x4f\x13\x18\x6e\x86\x2e\x6a\xdc\x3f\xdd\xc3\xd4\xaf\x42\xbc\xad\xb9\xee\x3f\x02\x79\x5f\x89\x6b\xdb\x02\xee\x07\xb6\x21\xcd\xba\x49\x34\x1b\xf5\x1e\x81\xcb\x7f\x53\xb2\x79\xec\xe5\x75\x8d\x05\x67\x16\xc5\x1a\x4a\xaa\x11\x2e\xec\x06\x0f\x81\x50\x15\xf5\xf6\xdc\x42\xce\x24\x5c\x23\x60\xcd\xad\xc5\xa2\x43\x25\x82\x65\xd4\x04\xc2\xf4\xc5\x1a\x9a\x41\x98\x9b\x6b\x3d\xfa\x85\x82\x5d\xb8\x0e\x45\x22\x16\x30\x83\xd6\xa0\xa3\xe6\xd2\xa2\x96\x4c\xc0\x75\x5b\x96\x48\x03\x8b\x70\x0e\xef\xe1\x6d\xea\xd0\x7b\x90\xc6\xc0\x82\xdd\x38\xec\x5d\x29\xbd\xf4\x37\x70\x49\x28\xba\x80\x46\xb0\x1c\x8d\x1b\x44\x56\x34\x21\x33\xe1\x8b\x84\x07\x5b\x6a\xbc\x94\xc4\xc7\xaa\x2c\xa1\x64\x66\x41\xaa\x51\x21\xf9\x1a\xd4\xd9\x55\x45\xbf\x28\xab\x5d\xdc\xf4\x61\x73\x86\xab\x2d\x34\x0a\x26\x4a\x8b\xc9\x7e\xe8\x19\x10\xc6\x3a\xe0\x19\xc3\xcb\xe4\x27\xa2\xe0\x25\xdc\x13\x64\x5b\x12\x27\x8a\xf3\x89\x0a\xc5\x96\xdc\xe1\xda\x31\xe5\x7a\x67\x68\x9b\x00\x3a\xac\x10\x4a\x35\xae\x0c\xdd\xed\xc0\x42\xb6\x53\xf9\xca\x95\x34\x6d\x8d\x45\x60\x5b\xd2\x1c\x82\xc6\x3a\x5c\x58\xf9\x40\xe9\xa2\x64\xc8\x5c\x28\xb8\xc6\xdc\x0a\x57\x1e\xc7\xb0\x36\x1e\xed\x86\x10\xbd\xb4\x4c\xdb\x5e\x2a\x20\xb1\xe2\x28\xaa\x14\xd8\xcc\x6d\x5d\x20\x2b\x4e\x95\x6a\xd2\xd0\xe5\x53\x8b\x7d\xaf\x73\xa4\xe0\x55\x34\xdc\x58\x34\x30\xf3\xcd\x63\xe8\x1d\xc3\x9d\x96\x90\x7f\xcb\xa8\xdf\x82\xb3\x5d\x77\xfa\xd5\x40\x3b\xea\xed\x1b\x8d\xd6\xae\x61\xc1\xf2\xe5\x7a\xea\x5a\x12\xd3\xd2\xf4\x5d\x0e\x63\x38\x83\x6b\xb4\x16\x35\x35\x19\x2e\x41\x4a\xad\x6a\x67\x23\x94\x15\x0f\x23\x41\xa1\xd0\x50\xca\x09\xa5\x96\xc4\x5f\xf0\x25\xba\x1e\x84\x54\x62\x72\x0d\x4b\x2e\x0b\x4a\xdb\x84\x7a\xa5\x04\x4a\xc1\xaa\x2e\x61\xc6\xfe\xca\xb2\x8c\xd8\x11\x1b\x13\x98\x50\x8b\x44\x29\xa6\xdc\x9b\x80\xb7\x4c\xec\x3b\x20\x06\x39\x6a\xea\x89\x5c\x07\xe6\x5b\x28\x8d\x2e\x35\x89\x8b\x92\x82\x9a\xc1\x9e\x68\xc1\x74\x41\xdd\x54\x01\xdc\xbd\x5d\xe5\x68\x32\xb8\x54\xbe\x45\x53\xd4\x14\x06\x20\xf0\x6a\x37\xd4\x6c\xcd\x66\x8e\x2b\x51\x48\x5c\xed\xa0\xc8\xe0\xe4\xbb\xda\xe1\x92\x8b\xed\x85\xdb\x10\xcc\xa2\xa6\x2e\x72\xe1\x0a\x00\xb3\x70\x8d\xc6\x86\xf8\xa0\x91\x1a\x25\x28\xb2\xf0\x8a\x1b\xf4\x85\xef\x7e\xb5\x71\xef\x1f\x35\x6b\xde\xfa\xea\xf7\xde\xe1\x57\xc9\x72\xbc\xdd\x4c\xc6\x26\x1b\xca\x51\x78\x7b\x6a\xb5\x98\x82\x5a\xba\x1a\xc6\x2c\x7b\x9b\xbc\xb9\x38\x4d\xde\xff\x44\x4b\xb7\xee\xe9\xc6\xf9\x8d\xea\x74\xcb\x84\x58\x3b\x27\x19\x78\x0a\x37\x4c\xb4\x84\x69\xe4\xe4\x15\x7a\xf3\x79\xf0\xf4\x53\xe0\xff\x0d\xf1\x38\xba\xfe\x0c\x57\x34\x02\xa7\xad\x16\x59\xea\x45\x9d\x4c\xc6\x8f\x24\xdb\xb4\x97\xb6\x50\xad\x4d\x27\x7d\xc5\xbf\xff\x7a\x41\x6a\xcc\x66\xf0\xc2\xb5\xc0\x02\x4e\x64\xa9\x60\x06\x2f\x91\x15\xa8\xdd\xeb\x5f\x2b\x1c\xc6\x25\xef\x64\xd2\x7f\xff\x70\xe0\x92\xe4\xb2\x21\x76\x65\x9a\x10\xdc\xcd\x21\xfc\xef\xa1\xa1\xff\x7f\xfc\xfb\x3f\xde\xc9\x64\x0a\xee\x21\x71\xea\x1e\x70\xa7\xe0\x1e\x0d\x27\x7b\xd9\xf8\x67\xd9\xf9\x27\xd8\x78\x8a\x2f\x60\xe4\x9e\x69\xe7\x9f\x62\xe4\x28\x3e\xcb\x69\x64\xab\xf9\x6e\x4e\x23\x8a\x9e\xdb\x9e\x26\x89\x6a\x03\x01\x49\xae\x5a\xe9\x8c\x9a\x0a\x94\x03\xcd\xc4\x11\x8d\x2a\x2b\x39\x63\xaf\x64\xef\xba\xe7\xd9\x5d\x9b\xfd\xb5\xe9\x43\xf3\xb0\x78\x68\x26\x73\x18\xcb\x4c\xd2\x8d\x24\xd9\x6c\x06\x3b\x8c\x3a\x29\x3e\x85\x07\xf6\x7e\x27\xb5\xe7\xca\x8f\x1f\x3e\x7c\xfc\xf0\xd7\xc7\x0f\x7f\x05\x33\xb9\xab\xcd\x64\x7c\x6d\xe2\xef\xed\xdf\xeb\xc3\xad\xc3\xc6\x9d\x87\xf1\x6d\xa9\x3a\xc0\x1e\xfd\xde\x3d\x7e\x93\x99\x7d\x5f\x7c\xc7\xd0\x81\xa8\xb7\x73\xe8\x1f\xbf\xdd\xcc\xdd\xad\xfb\xac\xbc\x2d\xc7\x27\xcc\xcc\xee\x0d\xe2\xff\xaa\x95\xd9\x3e\x2b\xb3\x6f\xb0\x72\xff\x3c\x97\x7a\xb1\xee\x00\xca\xd6\xf3\xa2\xb7\x69\xc0\xa6\x61\x6a\xa0\x02\xfc\xf3\xda\xe2\xf0\x86\xe8\xba\xdd\x57\xa1\xd7\xfd\xc4\xe0\xb0\xf3\xfd\x76\xdc\xfe\x6c\xe2\xa8\x26\x86\xa3\x57\xf5\x38\x8a\x7a\x0c\x48\x6e\x9e\x24\xd3\x38\x8a\xa8\x66\xcf\x7b\x22\xfa\xf2\x84\x91\x37\xfb\x3c\xcc\x52\x44\x1a\x0d\x32\xcc\x61\x90\x9c\x76\x5e\xa1\x65\x73\xa8\xd9\x12\xd3\x3d\xe5\xc2\x91\x0d\x75\xe2\xf3\xc4\xdd\x9f\x00\xc2\xfb\xf3\xae\xa1\x66\x77\x8c\x0c\x33\x0d\xbb\x3b\xd3\xd4\xd9\xd5\xba\x71\x7f\x20\x63\xdd\x5f\xec\x22\xff\xeb\x13\x4e\x18\x4f\xd4\xec\xce\x2b\xc3\x97\x36\xc4\xe3\x21\x88\x86\xe9\xe1\xce\xad\x26\xe9\xf3\x30\x33\x28\x67\xf7\x2b\xd7\xbd\x4b\x52\x27\xee\x7f\x7e\x42\xbd\xf1\x74\x37\xa0\xd0\xf6\x7c\xf7\x8d\x6a\x8e\x2f\xdf\xd2\x73\xd4\x5d\xf6\x8f\x8f\x65\x9a\xbc\xd9\x1e\xdf\x47\xcf\xfc\xae\xc1\x64\x43\x67\xd9\x21\xc1\x4e\x95\x4e\x64\x81\xd2\xa6\x8f\xea\x29\x24\x90\xd0\x7f\x20\xf9\x92\x74\x19\x3f\xb7\xfb\xa0\xec\x12\x7b\xb2\xdd\xbf\xfe\x33\x00\x00\xff\xff\xc8\x46\x8c\xca\x83\x1f\x00\x00")

func templatesCmdMainTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesCmdMainTemplate,
		"templates/cmd/main.template",
	)
}

func templatesCmdMainTemplate() (*asset, error) {
	bytes, err := templatesCmdMainTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cmd/main.template", size: 8067, mode: os.FileMode(420), modTime: time.Unix(1490115525, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesConnectionCacheTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x93\x41\x6f\xdb\x38\x10\x85\xcf\xd6\xaf\x78\xeb\xc3\x42\x0e\x54\x19\xd8\x63\x17\x39\x64\x13\x37\x31\xea\xda\x45\xe3\x60\x51\x14\x3d\xd0\xd4\x48\x22\x4c\x0d\x55\x72\x54\xad\x36\xc8\x7f\x5f\x50\x72\x12\xb7\xd8\xde\x64\x72\xe6\xcd\x37\x8f\xcf\xad\xd2\x47\x55\x11\xb4\x63\x26\x2d\xc6\x71\x92\x2c\x97\xb8\xd9\x61\xbb\xdb\xe3\xc3\xd5\xfb\x15\xae\xef\xae\xb6\xb7\xab\x7b\xec\x77\xd8\xdf\xad\xef\xf1\x6e\xbd\x59\x65\xd8\xdf\xad\x3e\xe3\xef\xf5\x66\x83\xbf\x56\xd8\xec\xee\xf7\x58\xbf\xc3\xe7\xdd\x03\x3e\xad\x6e\x57\xdb\xd5\xa7\xab\xfd\x2a\xd6\xe0\xe3\xe6\xe1\x76\xbd\x4d\x12\xd3\xb4\xce\x0b\xd2\x04\x00\xe6\x65\x23\xf3\xe9\x2b\x0c\xac\xe7\xc9\xf8\xdd\x5a\x57\x61\x5e\x19\xa9\xbb\x43\xae\x5d\xb3\x3c\xba\x46\x71\xb1\x6c\x6d\x57\x19\x7e\x13\x8a\xe3\x9b\xca\xfd\xb1\xb4\xae\x9a\x27\x8b\x11\xf3\x5a\xe9\x9a\x60\x02\x14\x82\x69\x5a\x4b\xe8\xbd\x6a\x5b\xf2\x50\xde\x75\x5c\x40\xa1\x51\x2d\x7a\x23\x75\xfc\xec\x84\xfe\xc9\x20\x0e\x41\x9c\x3f\xdf\x39\xc0\x70\x22\x43\x4b\x27\xc5\x20\xbe\xd3\x82\xc7\x11\x2b\x12\xe6\x1f\x62\xef\xf8\xb3\x50\x32\xaa\x7e\x09\xe2\x0d\x57\x5f\x2f\xae\x5f\xad\x7b\x1a\xa9\xb6\xd4\x4f\x32\x9e\xa4\xf3\x1c\xe9\x98\xfa\xb3\x71\xd0\xf1\x3a\x29\x3b\xd6\x2f\xc5\xe9\x02\x17\x53\xd7\x63\x32\x9b\x1a\xf1\xfb\x78\xf0\x98\xcc\x66\x71\xe8\x5b\x34\xea\x48\xe9\xff\x8f\x5e\x64\xc9\xec\xe9\x34\xff\x96\x04\xbd\xb1\x16\x15\x09\x9c\x87\x61\x23\x90\x7a\x5a\x38\xc7\x5a\x70\xb0\x4e\x1f\x03\x3a\x16\x63\x5f\x6e\xa2\x8f\x9e\x54\x31\x44\x8d\xfd\xee\x66\x07\xa9\x4d\x98\x94\x0e\x84\xef\xe4\x07\x18\xa6\xb2\x34\xda\x10\x0b\x0e\x9d\xa0\x27\x30\x51\xf4\xb9\x57\x43\x74\xd6\x3a\x77\xec\xda\x73\x6b\xa3\x9a\x61\x28\x48\x1d\xd5\x83\x2a\x09\x8d\x62\x26\x9f\x41\x71\x01\xc7\x76\x18\x11\x8d\xb2\xe6\x5f\x8a\x38\x0d\x1c\x6b\xca\x27\xe7\x77\xac\x09\xbd\xeb\x6c\x11\x29\x2a\xe7\x8a\xa8\x78\x1a\x1e\x24\xd2\x9d\x10\x5a\xab\x34\x45\x88\xd1\xde\x73\x86\x2c\xaa\xf2\x08\x37\xe9\x77\x2d\x0e\x03\x14\x8e\x34\x6e\xfb\xba\xa8\xa7\x6f\x9d\xf1\x84\xb6\x13\x31\x5c\x41\xe1\x3d\x0d\xe9\x02\x0d\x49\xed\x22\xec\x8b\x5d\xa7\xa7\x34\x2c\xe4\x4b\xa5\x29\x43\x5f\x1b\x5d\x47\xb9\xfe\x05\x4a\xdc\x29\x04\x31\xa1\xe3\xa3\x41\x6a\x25\xd1\x6a\xed\x9a\xd6\x05\x2a\xe0\xca\x73\xbd\x31\x5e\xa1\xd3\xf5\x54\xb8\x96\x28\xa8\x15\xa3\x63\xf3\xad\xa3\xe8\x55\x41\x2c\xa6\x1c\x7e\x26\xe9\x09\xbd\x62\x79\x7e\x05\x74\x6d\x3e\x45\x2c\xd5\xa7\x68\x2d\x62\x34\x52\x5d\xe0\x2c\x38\x37\x4a\x54\x06\x8b\x8b\xf8\xef\xcb\x37\xae\xaa\xc8\x2f\x90\x9e\x55\x64\x20\xef\x9d\x5f\xc4\x60\x7e\x57\x1e\xe1\xbc\x7d\x3a\x72\x47\x1c\x9c\xb3\xc9\x4c\xe7\x1b\xa7\x8f\xe9\x22\x99\x99\x12\x21\x8b\x17\x97\xd0\x79\x5c\xea\x8b\x2e\xf2\xd1\xcb\xaf\x7f\xc6\xe3\x98\x6a\x9d\x3f\xb0\x3d\xd5\x3f\x67\x3e\x64\x60\x63\x63\x98\x67\x65\x23\xf9\x47\x6f\x58\x2c\xa7\xf3\x2d\xf5\x78\x1d\x8b\xbd\x69\x68\xbe\x48\x66\x61\xa4\xc3\xdb\xcb\xe7\xcb\x54\x17\x19\xec\x04\x10\x6f\x7e\xbb\x8c\x7a\xbf\x1c\xc7\xc6\x8e\x0a\xe3\xc0\x9f\x41\x71\x89\x90\xfc\xd0\xf6\x23\xe4\xd3\x7f\x01\x00\x00\xff\xff\x6a\x5c\x8a\x33\x3e\x05\x00\x00")

func templatesConnectionCacheTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesConnectionCacheTemplate,
		"templates/connection/cache.template",
	)
}

func templatesConnectionCacheTemplate() (*asset, error) {
	bytes, err := templatesConnectionCacheTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/connection/cache.template", size: 1342, mode: os.FileMode(420), modTime: time.Unix(1489670705, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesConnectionConnectTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x94\x4f\x8f\xdb\x46\x0c\xc5\xcf\xd5\xa7\x78\xc8\xa1\xb5\x03\xef\x1a\xcd\xb1\x40\x2f\x4d\x10\xa0\x68\x52\xe7\x10\x14\x08\x8a\x1e\xe8\x11\x25\x4d\x3d\x9a\x51\x67\x38\x51\x54\x63\xbf\x7b\xc1\x91\xe4\x3f\xdd\xe4\xb2\x58\x4b\xd4\x23\xf9\x7b\x24\x07\x32\x27\x6a\x19\x26\x78\xcf\x46\x6c\xf0\x55\x65\xfb\x21\x44\xc1\xa6\x02\x80\xc1\x85\x16\x2f\x5a\x2b\x5d\x3e\x3e\x9a\xd0\xef\x4f\xa1\x27\x5f\xef\x07\x97\x5b\xeb\x1f\x52\x7d\x7a\x68\xc3\xab\xbd\x0b\xed\x8b\x6a\x5b\x55\xfb\x3d\x5e\xe7\x24\xa1\x7f\x7d\x11\xfc\x40\x91\xfa\x04\x9b\x30\x76\x1c\x19\x53\xc8\x90\x8e\x51\xf3\x67\x76\x61\xe0\x88\xd1\x3a\x87\x46\xff\x58\x0f\xf2\x13\x4c\x91\xc0\x10\xf5\xb5\x58\x4e\x3b\x8c\x9d\x35\x5d\xf9\x76\x0c\xd9\xd5\xf0\xcc\xb5\x66\x93\x80\x9c\x18\x21\x62\x0c\xf1\x84\xd1\x4a\xa7\x2a\x4b\xfa\x47\x1c\x3c\x83\xbf\x50\x3f\x38\x46\x6f\xdb\x4e\x70\xe4\x39\x87\xb3\xec\x05\xce\x1e\x23\x45\xcb\x49\x25\x52\x1e\xb4\x75\xeb\xdb\x9b\xdc\x68\x16\x71\xeb\x5b\xcd\x58\x52\x68\x03\xcf\x14\xb4\x3a\xad\x6b\x87\x63\x16\xd4\xc1\xff\x20\x18\xc9\x8b\x16\xe9\x42\x62\xd8\xa6\xc4\x44\x6e\xd9\x73\x24\xe1\xa2\x33\xa3\xac\x64\x1a\xf8\x5b\xf0\x92\xc4\x6c\x04\xe7\x62\xc9\x7e\x8f\x4f\x21\xc7\xe7\x94\x70\x64\x17\xc6\xea\x69\xb6\x61\xd6\x50\xee\xa5\xd8\x39\xd8\x84\x9a\x4b\x43\xf7\x0e\x48\xc0\x18\xad\xd6\x13\xd0\x64\xe7\x26\x58\x6f\xc5\x92\xb3\xff\x2a\xad\x1a\x91\x25\x47\x0f\x52\xe5\xc8\x54\x4f\x2b\xf8\x6b\xa9\x08\xc7\xbf\x15\x79\xd5\x64\x6f\xd6\xe7\x1b\x53\xe3\xe5\x35\xe6\x0d\x09\xed\xa0\x23\xf5\x52\x07\xeb\xf1\x5d\x68\x5b\x8e\x5b\x6c\x6e\x62\x76\xe0\x18\x43\xdc\x2e\xdd\xea\x64\xe2\xa7\x9f\xf1\xfd\x35\xe2\xfc\x74\xcf\x41\x7b\xd2\xd1\x5a\x9f\x7e\xa4\xd3\x4c\xf6\x3a\xd5\xa8\x49\xa8\x74\x52\xfa\xb0\x02\xeb\x25\x94\xa0\x67\x1d\x5c\x64\x3a\xf6\xbb\x7b\x10\x13\x92\x90\xf0\x0e\x29\x9b\x0e\x34\xa3\x25\x23\x99\x1c\x68\xb0\xb7\x09\x17\x75\xe9\x6c\xac\x31\x50\x94\x69\xd5\x7d\x6b\x3d\x39\x37\xed\x30\x50\x4a\x38\x92\x39\xfd\xaf\xd8\x1d\xbc\x75\xc5\xa5\x94\x8d\xe1\x94\xd6\x2f\x0f\xd2\x71\x1c\x6d\xe2\x12\xb1\x80\x2a\x81\x0d\x59\x97\x23\x57\x6b\xe4\x7b\x45\x90\x72\x2c\x8e\x1e\x7e\x7f\xf7\xa9\x98\xa5\xc8\x7f\xf5\x4d\x28\x20\xd6\x1f\xcd\x3c\x9e\xed\xed\xe6\x29\xd2\x59\x6b\x31\x5e\x8b\x2b\x49\x97\xe9\xfa\x83\x9c\xad\x75\x80\xcb\xee\xb2\x9f\x53\xdd\xd3\x1c\x29\xc1\x44\x26\xe1\x1a\x26\xc4\xc8\x46\xdc\x34\x4f\xc7\xc6\xdc\x4e\xc5\xf6\x22\xb7\xd9\xe2\xcf\xbf\xe6\xae\xce\xdf\xf0\xb8\xfa\x6e\x29\xe9\x5a\xcc\x6f\x3c\xc1\x84\x7e\x88\x36\x71\x2a\x6d\x34\x96\x5d\x9d\xca\x32\x72\xad\xfd\xf5\xca\x23\x0f\x20\x64\x6f\xff\xc9\x8c\xcf\xe4\xf2\xbc\x09\x4c\xa6\x83\x4d\x5e\xc8\x1b\x46\x68\x40\xb7\xd7\x50\xfd\xd2\xa0\xf9\x84\xec\xf0\x0a\x3d\xa7\x44\x2d\xa7\xeb\x21\x48\xd4\xcf\xf6\xa9\xcf\x65\x5d\xbb\x72\xa3\x52\x47\x91\xf1\xe3\x9d\xb3\x4a\x5e\x99\xa9\xb0\x5e\x09\xfd\xde\xf3\x17\x59\x65\x67\xd5\xda\x36\x0d\x47\xbd\x2e\x8b\xe2\x7c\xf4\xd4\x43\xba\x79\x79\x15\x7e\xfc\x1a\x57\xdd\xb6\xad\xd2\xd9\x6c\xf5\x82\xe8\x59\xbb\x50\xfd\x78\x78\x73\x00\x65\x09\x0f\x2b\x39\x84\xa6\x59\xc3\x66\x7e\x17\xd4\xe7\x33\x1e\xef\x65\x15\xf9\xd3\xd3\xc2\xff\x83\x23\xb3\x9e\xae\xdb\x01\x78\x9b\x7d\xf9\x27\x95\xae\xdf\xb3\x74\xa1\x4e\xf8\x45\x8f\xd4\x7f\x01\x00\x00\xff\xff\x29\x9a\xa1\xee\x78\x06\x00\x00")

func templatesConnectionConnectTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesConnectionConnectTemplate,
		"templates/connection/connect.template",
	)
}

func templatesConnectionConnectTemplate() (*asset, error) {
	bytes, err := templatesConnectionConnectTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/connection/connect.template", size: 1656, mode: os.FileMode(420), modTime: time.Unix(1489670484, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesConnectionConnectionTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\x41\x4f\xe3\x3e\x10\xc5\xef\xfd\x14\x4f\x88\x63\xff\xe1\xf0\xbf\x21\xed\x21\x0b\x01\x22\xba\x2d\xa2\x41\x2b\x6e\x4c\xed\x21\x31\x38\x76\x64\x3b\xed\x46\x28\xdf\x7d\x65\xa7\xb0\x59\xb8\xee\x31\x9e\xc9\x7b\x33\xef\x37\x1d\x89\x57\xaa\x19\xc2\x1a\xc3\x22\x28\x6b\x16\x8b\xb3\x33\x5c\x6e\xb0\xde\x54\xf8\x91\xdf\x16\xb8\xb8\xc9\xd7\xd7\xc5\x16\xd5\x06\xd5\x4d\xb9\xc5\x55\xb9\x2a\x96\xa8\x6e\x8a\x47\xfc\x2c\x57\x2b\x7c\x2f\xb0\xda\x6c\x2b\x94\x57\x78\xdc\x3c\xe0\xbe\xb8\x2e\xd6\xc5\x7d\x5e\x15\xb1\x07\x77\xab\x87\xeb\x72\x9d\x44\x2f\x3e\x3c\xa0\x3c\x42\x33\x77\x85\xdd\xbd\xb0\x08\x08\x0d\x85\x54\x92\xbc\x67\x6d\x3b\x76\x38\x28\xad\x41\x52\x22\x58\x1c\x1a\x36\x50\x26\x70\xed\x28\x28\x53\x83\x10\x1a\xe5\x24\x3a\x72\x61\x88\x26\xf9\x5d\x99\x21\x97\x12\x64\x06\xbc\x2a\x23\x61\x9f\xa1\xad\xa9\xa1\xd5\x9e\x25\xac\x83\xe8\x7d\xb0\x2d\xfe\x7f\xff\xed\xeb\x18\x3e\x7a\xd8\x28\xed\xe1\x83\xeb\x45\xc8\xa2\x76\x41\xa2\x81\x32\x3e\x90\x11\x1c\x75\x67\x0d\x53\x16\x3b\x86\x6f\xc8\xb1\x44\xad\xed\x8e\xb4\x1e\x96\xf0\x36\x3d\xf7\x8e\xe3\x06\x71\x91\xb6\x0f\xfc\x8b\x7d\x9c\x85\x82\x6d\x95\x88\xe2\x71\x57\x8a\x33\xf8\xb8\xa5\x63\x18\x66\xc9\x32\x5b\x84\xa1\xe3\x79\x76\x47\xbf\xb7\x05\x00\x5c\xa4\x5d\xfe\x54\xef\xc8\x51\xeb\x53\xe9\xed\xed\x3f\x38\x32\x35\xe3\xd4\x2c\x71\xda\xe1\xfc\x1b\xb2\x99\xce\x38\xa6\xb6\xa9\x15\xa7\x5d\xb6\xa6\x96\x31\x8e\xc7\xaf\x2a\xda\x8e\x23\x9e\x5e\xbc\x35\xe7\x27\xd3\xe3\x3d\x1d\x8e\x5d\x27\x4f\x1f\x26\x6c\x64\x14\x1b\x3f\x41\xbe\xa4\x40\xef\xa0\x8f\x33\x27\xba\x8d\xd5\x72\x7a\x75\x74\x98\x67\xdf\xa5\xd9\xf1\xec\x6c\x9b\xca\xca\x08\xdb\x46\xc8\x2d\x7b\x4f\x35\x47\xf9\x2a\x26\x9e\x2e\x62\xc7\x08\xbd\x33\x2c\x27\x56\x04\xc7\xa4\xe7\x72\xbb\x21\xa9\x6c\x2f\x6f\xe1\x7a\x13\x54\xcb\x19\x1e\x6d\x0f\xdf\xd8\x5e\x4b\x18\xde\xb3\x83\x54\x8e\x45\xd0\xe9\x74\x62\xe0\x11\x51\xef\x79\x22\x3b\x1d\xc3\x12\xd6\xe8\x49\xcb\x71\xdd\x6b\x72\x33\x97\x0c\xb9\x87\xef\x45\xb3\x04\xed\xad\x92\x91\x6f\xba\x4b\x33\xa0\x73\x91\x69\x50\xec\xa3\xaa\x0a\x5f\x50\xa6\x84\xfe\xc2\x39\x63\xf6\x99\xd7\x3f\xc7\xf5\x3b\x00\x00\xff\xff\x7a\xb3\x59\x30\xfb\x03\x00\x00")

func templatesConnectionConnectionTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesConnectionConnectionTemplate,
		"templates/connection/connection.template",
	)
}

func templatesConnectionConnectionTemplate() (*asset, error) {
	bytes, err := templatesConnectionConnectionTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/connection/connection.template", size: 1019, mode: os.FileMode(420), modTime: time.Unix(1489715230, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServerHttpHandler_xTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x56\x6f\x8f\xdb\xb6\x0f\x7e\x1d\x7f\x0a\xfe\x0c\xb4\x3f\xa7\x70\x1d\xac\x2f\x33\x14\xc3\xb5\x97\xde\x05\xbb\x26\x87\x4b\xba\xa2\x18\x86\x55\x91\x19\x5b\x8b\x2c\x7a\x12\x7d\x5e\x10\xe4\xbb\x0f\x92\x9d\xe4\xb6\x65\xdd\x15\xe8\xfe\xe4\x95\x25\x51\x7c\x1e\x52\xe4\xc3\xd4\x42\x6e\x44\x81\x50\x32\xd7\x51\x34\x1a\xc1\xe5\x1c\x66\xf3\x25\xbc\xbd\xf8\x76\x02\xaf\xaf\x2f\x66\x57\x93\x05\x2c\xe7\xb0\xbc\x9e\x2e\xe0\xcd\xf4\x66\x92\xc2\xf2\x7a\xf2\x01\xde\x4f\x6f\x6e\xe0\xd5\x04\x6e\xe6\x8b\x25\x4c\xdf\xc0\x87\xf9\x3b\xb8\x9b\x5c\x4d\x66\x93\xbb\x8b\xe5\xc4\xdb\xc0\xed\xcd\xbb\xab\xe9\x2c\x8a\x54\x55\x93\x65\x48\xa2\x41\xbc\xae\x38\x8e\x06\x31\x1a\x49\xb9\x32\xc5\xe8\x27\x47\x26\x8e\x00\x00\x62\x45\x23\x45\x0d\x2b\xdd\xaf\x0d\xf2\xc8\x93\x8a\xa3\x6e\xbd\xdb\x41\x76\xdb\x91\xbd\x23\x62\xd8\xef\x47\x42\xb2\x22\xe3\xe2\x3f\x35\x90\x64\x0c\x06\xa3\xce\xa6\xd6\x54\x40\x5c\x28\x2e\x9b\x55\x26\xa9\x1a\x6d\xa8\x12\x26\x1f\xd5\xba\x29\x94\x79\xee\xf2\xcd\xf3\x82\x5e\x8c\x34\x15\xbd\xcf\xbf\x34\xad\xd0\x39\x51\x60\x1c\x0d\x43\xf2\x3c\x87\x99\xa8\x10\xf6\xfb\x6b\x61\x72\x8d\x16\x94\x03\x01\x65\xb7\x88\x78\x5b\xe3\x39\x23\xc7\xb6\x91\x0c\xbb\x68\x20\xe1\xd9\x89\x75\xf6\x5a\xc8\x12\xa3\x7d\xf0\x3d\xc3\xf6\xcc\x4d\x8b\xdc\x58\xe3\x31\x0c\xb6\x67\x5c\x47\xeb\xc6\xc8\xf3\x77\x93\x33\x58\x43\x78\x76\x06\x64\x17\x0d\x3a\x1c\x78\x7a\x38\x3d\x1e\xee\xa2\xc1\x40\x8e\x41\xa6\xd1\x60\xdf\x33\x5d\xa0\xbd\xc7\xeb\xe5\xf2\xb6\x8f\xdb\x01\x97\x08\x16\x7f\x6e\xd0\xb1\xeb\x18\x25\xe5\x39\xa4\xe1\xe9\x6e\xd2\x86\x9a\xcc\xee\xd0\xd5\x64\x1c\xbe\xb7\x8a\xd1\xa6\x60\xe1\x59\xbf\x1f\xdc\x0d\x3d\xb9\x55\x0a\x68\x2d\x8c\x5f\x42\x57\x42\xd9\x1d\x8a\xfc\x42\xeb\xc4\x66\xaf\x28\xdf\x0e\xa3\xc1\x68\x04\xcb\xf9\xe5\x1c\x1a\x87\x20\x40\xab\x4a\x31\x58\x14\x39\x5a\x60\x82\xda\xe2\x3d\x1a\xbf\xe3\xa8\xb1\x12\x41\x30\x0b\xb9\x71\xdf\x9c\x2e\xd6\xc2\x39\xd0\x54\x14\xfe\x49\x0d\xd3\xe1\x49\x53\xbf\x09\xd4\xb0\x67\x40\xd6\xc1\x96\xa2\x81\x5a\x07\x3e\xff\x7b\x09\x46\x69\x4f\x70\xd0\x66\x81\xff\x75\x80\x4c\x42\x00\x0b\x16\xdc\xb8\xa9\x61\xb4\x46\xe8\x10\xb7\x9d\x78\x1f\xc3\x93\x7d\xf2\xfd\x0f\xab\x2d\x63\xb2\xae\x38\x5b\xd4\x56\x19\x5e\x27\x1f\x77\x71\x57\x84\x3f\x06\xc4\x78\x1c\x3f\x71\xf1\xfe\x63\x48\xc1\x70\xe8\x2f\x77\x6f\xe5\xdf\x63\xd0\x25\x20\x7b\xad\xc9\x61\x32\x0c\xcc\x6c\xf6\x16\xb9\xa4\xdc\xd3\x8b\x6f\xe7\x8b\x65\xfc\x69\x86\x9d\xf5\x8c\xf8\x42\x6b\x6a\x31\xff\x92\xf4\x2a\xff\x66\x4f\xfb\x26\xca\xbe\xfb\x6a\xb7\x3f\x26\x6f\xfc\x12\xbc\x3a\x64\xef\x4c\x25\xac\x2b\x85\x4e\x56\x29\x54\xc3\xaf\x1f\x9d\xd9\x57\x22\x3f\xd4\xc8\x17\x64\x3c\x1a\xc1\x91\x51\x28\xeb\x15\xe5\xdb\xae\x22\x42\x91\xab\xa2\xe4\xbe\x9d\x83\xf1\x7b\x04\x49\x8d\xce\x41\xdc\x93\xca\x83\xcd\x0b\xc0\x5f\x24\x3a\x17\xe2\x83\x83\x2f\x29\xb4\x76\xa0\x0c\x94\x68\x11\x5a\xc5\xa5\x2f\x54\x62\xa0\x35\xb8\x56\xb1\x2c\x9f\x4b\xe1\x94\x29\x80\x0c\x78\x1d\x71\xc1\xff\xaa\x61\x7f\x89\x4b\xe5\x40\x0a\x87\x69\x80\xa8\xd1\xae\xc9\x56\xc2\x48\x84\x42\x28\xe3\x55\xc8\x10\x03\x97\x82\xa1\xb0\x28\x38\x05\x61\x72\x50\xfc\x7f\x07\xda\x73\x29\xd0\xa0\x15\x4c\x16\x24\xe5\xe8\x9b\xa2\x12\xca\xb0\x50\x26\xc0\x30\x41\x4e\xa0\xb8\x03\x6a\xc5\x36\x3b\xb5\x86\x5a\x43\x8b\xe0\x1a\x57\xa3\xec\x0d\x82\xe8\xad\x88\x59\xa3\x41\xb9\x49\xa1\xb6\xb4\x56\x1a\xbd\x07\x8f\xeb\x5a\x51\xc3\x4a\xc8\x0d\xf4\x79\x3b\x45\x88\x20\xea\xda\x92\x90\x65\x34\x50\xa6\x6e\x38\x94\x48\x2f\xf5\xd9\x03\xc9\x98\xfa\xc3\x4f\x16\x4c\xd5\x15\x7f\x30\x4c\x21\x38\xfb\x8c\xfa\xf9\xf2\x9d\x09\xfd\xef\x41\x39\xc9\x3c\x84\xf7\x50\x86\x8f\x9f\x97\x82\xc5\x63\xe2\x3b\xdd\x48\x41\xe6\xff\xb5\x08\xb5\x27\xee\x07\x6f\x36\xc3\xf6\x26\x08\x68\xd2\x19\xfa\xa0\x8f\xc2\x5d\x66\x32\xbb\x42\x4e\x64\x9e\x82\xee\xce\x7f\xaf\xa2\x07\xe7\x7f\x77\x3c\x29\x1c\x36\xfd\x1f\x81\x87\x21\xa6\xa0\xb3\x05\x5b\x65\x8a\x64\x78\x26\x5c\xff\xd9\x49\xc4\x44\xc8\xf2\x30\xf0\xc0\x20\xe6\x87\x01\xdd\x4f\x10\x26\x90\xa2\xe6\xc6\x62\xd7\x82\xd4\x70\xdd\xf0\xa9\xa5\x2a\xba\xc7\xae\x93\x98\x40\x80\xdb\x1a\x99\xdd\x12\xe9\xd0\x3c\x85\x15\x2b\x20\x83\xb0\xb6\x54\xf9\xee\xb1\x08\xe8\x01\x59\x55\xa1\x73\x9d\xb8\x47\xaf\x12\x42\x6b\x92\xfd\x10\x33\xc4\xe1\x4c\x98\xad\xbf\xea\x67\x9f\xd7\x12\x8f\x31\x86\x4b\x0a\xea\x50\x10\x88\x3c\x6c\x2b\xf3\x00\xd3\x6b\x91\x1f\x70\x8d\xc9\xd1\x3a\x16\x26\x98\x94\xd4\x7a\xec\x6d\xf0\xde\x92\xdd\x04\x6e\x61\x97\x8e\xed\xee\xc9\x20\xfa\x97\xec\x1d\x7b\xec\x56\x69\x0d\x42\x72\x23\xb4\xde\x42\x25\x36\x7e\x24\xe7\x6a\xbd\x46\x8b\x5e\xb0\xc6\x43\x98\xfa\xa4\xb0\x55\x72\xb3\x05\xa5\xac\xec\xd5\xa6\x14\xec\xa0\x2d\xb7\x0f\x44\x26\xa4\xcb\x23\xfb\x00\xba\xe5\x6c\x12\x0d\x3a\xbd\xf0\x85\x75\x46\x39\x2e\xc2\x96\x6f\xad\x2e\xef\xc7\x22\xec\x6c\xb3\xbb\xc6\x24\x5d\x71\xaa\x4e\x3a\xf4\xf0\xdf\x98\xe9\x8f\xaf\xc3\xdf\x4c\x28\xb5\x86\xfe\xff\x50\x2f\x18\x6f\x7b\xb9\xe8\x82\xfd\xe7\xf5\xe1\x31\x71\xfc\x21\x8a\xcf\x02\x39\x07\x91\x42\xdc\x05\x1c\x8f\x9f\x38\x8f\x77\x4a\x59\xea\x07\xb4\xff\x5a\x85\xec\xed\x7f\x0d\x00\x00\xff\xff\x1c\x9c\xbc\x23\x04\x0d\x00\x00")

func templatesServerHttpHandler_xTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerHttpHandler_xTemplate,
		"templates/server/http/handler_x.template",
	)
}

func templatesServerHttpHandler_xTemplate() (*asset, error) {
	bytes, err := templatesServerHttpHandler_xTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/http/handler_x.template", size: 3332, mode: os.FileMode(420), modTime: time.Unix(1489670724, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServerHttpServerTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x52\x41\x6f\x9b\x4c\x14\x3c\xef\xfe\x8a\x11\x8a\x3e\x41\xc4\x07\x6d\x8f\x56\x7a\x70\x12\x12\x5b\x75\x8c\x65\x13\x45\x39\x6e\xe0\xc5\x46\x81\x5d\xba\xec\xd6\x8e\x10\xff\xbd\x5a\x68\x6d\xae\xf5\xcd\x3b\x6f\x66\xde\x9b\xa1\x11\xf9\x87\xd8\x13\x0e\xc6\x34\x9c\xc7\x31\xee\x53\xac\xd3\x0c\x4f\xf3\x1f\x09\xee\x16\xf3\xf5\x63\xb2\x43\x96\x22\x5b\x2c\x77\x78\x58\xae\x92\x10\xd9\x22\x79\xc5\xcb\x72\xb5\xc2\x6d\x82\x55\xba\xcb\xb0\x7c\xc0\x6b\xfa\x8c\x6d\xf2\x98\xac\x93\xed\x3c\x4b\xdc\x0c\x36\xab\xe7\xc7\xe5\x9a\xf3\xb2\x6e\x94\x36\xf0\x39\xf3\x24\x99\xd8\x39\x79\x9c\x79\xa6\xac\xc9\xe3\x9c\x79\x5d\x87\x68\x33\xae\xb1\x55\xca\xa0\xef\xe3\x5c\x49\x49\xb9\x29\x95\xf4\x78\x30\xac\xb5\xa6\xe3\x8e\xf4\x2f\xd2\xd0\x64\xac\x96\x2d\x04\x24\x1d\x87\xbd\xd1\x0e\x08\x7f\xb7\x32\xbf\x0c\xfa\x39\xae\x2f\x3a\xd1\x9d\xc8\x0f\x14\xc0\xbf\x76\x8c\x68\x1c\x09\x41\x5a\x2b\x1d\xa0\xe3\x2c\x8e\x91\xa5\xf7\x29\x48\xe4\x07\x34\x95\xdd\x97\x12\x92\xa8\x70\x46\x56\x96\x3f\x2d\x61\x38\xc3\x28\xd0\xa9\x51\x2d\x0d\x94\x37\x6b\x50\x4a\x43\x5a\x8a\xaa\xfa\x0c\x91\x0b\x09\x51\x55\xb0\x2d\x41\x20\x57\x75\xad\xe4\xc0\xe3\x4c\x14\x85\xc6\xec\x3b\xbc\x99\x3b\x78\x91\x65\x9b\x68\xe3\x04\xfb\xde\xbb\xb8\xd7\xe2\x83\x60\x0e\xd4\x12\x72\x25\xdf\xcb\xbd\xd5\xe2\xad\x22\xb4\xaa\xa6\x83\x3a\x72\xa6\x49\x14\x59\x59\x93\xb2\xc6\x89\xb9\x10\xa3\x1d\xe5\x4a\x16\xb8\x1e\xff\xdd\x5b\x2d\xdc\xc5\xfe\xd9\x66\x7b\xe1\xf4\x7d\xc0\xd9\x51\x97\x86\xfe\x55\xe4\x65\x42\x72\x2a\x9c\xd5\xf6\xe4\xd8\x43\x9e\x7f\x53\x7f\xb2\x27\x3f\xe0\x00\x10\xc7\x50\x92\xf0\xae\xf4\x18\xa9\x18\x6a\x18\xa0\xae\xfb\x1f\x5a\xc8\x3d\xe1\x4a\x86\xb8\x6a\x9c\x4a\x34\x1f\xf0\x16\x7d\x3f\xcc\xd4\xf6\x14\x2d\x84\x2c\x2a\xf2\xbd\x78\xe4\xb6\x71\xd7\xe1\xaa\x89\xb6\xe2\xb8\x16\x35\xb9\xe0\x42\x57\xf7\xf8\xea\x9e\xfa\x7e\xa4\x68\x3f\x0f\x82\xb3\x15\xc9\xc2\xa9\x72\xd6\x3a\xa3\xff\x26\xfd\x77\x9c\xb1\x79\x51\xe8\x19\x2e\x3f\x57\x53\xc8\x19\xfb\xa3\x74\x86\x6a\x7b\x72\xcf\x93\x2c\x07\x68\xd2\x87\x83\xa7\x29\x39\x7c\x1a\xb5\xc3\x9f\xc4\x69\x41\xa2\x20\x7d\xfb\x69\xa8\x9d\xe1\x2b\x6e\x6e\xf0\xed\x4b\xc8\x59\xef\xba\x75\x5f\x36\xda\x10\xb2\xac\x78\xff\x3b\x00\x00\xff\xff\x50\xce\x19\x27\x9b\x03\x00\x00")

func templatesServerHttpServerTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerHttpServerTemplate,
		"templates/server/http/server.template",
	)
}

func templatesServerHttpServerTemplate() (*asset, error) {
	bytes, err := templatesServerHttpServerTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/http/server.template", size: 923, mode: os.FileMode(420), modTime: time.Unix(1489677189, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTriggersTrigger_xTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x51\x6f\xdb\x36\x10\x7e\xb6\x7e\xc5\x37\x23\x1b\xe4\x42\xb6\xb1\x3d\x7a\xcd\x43\xb6\xaa\x89\x31\xcf\x2e\x12\x77\x43\xdf\x4a\x4b\x27\x99\x8d\x44\x6a\x24\x15\x2f\x33\xf4\xdf\x07\x8a\x94\xec\x34\x4e\x52\x04\x68\x9e\xa8\xbb\xe3\xdd\xf7\x7d\x77\xbc\xb8\x62\xc9\x2d\xcb\x09\x46\xf1\x3c\x27\xa5\x83\x60\x3a\xc5\xbb\x15\x96\xab\x35\xfe\xbc\xf8\x23\xc6\xef\x57\x17\xcb\xcb\xf8\x06\xeb\x15\xd6\x57\xf3\x1b\xbc\x9f\x2f\xe2\x08\xeb\xab\xf8\x13\xfe\x9e\x2f\x16\xf8\x2d\xc6\x62\x75\xb3\xc6\xfc\x3d\x3e\xad\x3e\xe2\x3a\xbe\x8c\x97\xf1\xf5\xc5\x3a\xb6\x31\xf8\xb0\xf8\x78\x39\x5f\x06\x01\x2f\x2b\xa9\x0c\xc2\x00\x00\x86\x85\xcc\x87\x81\x3b\xe6\xdc\x6c\xeb\xcd\x24\x91\xe5\xf4\x56\x96\x4c\xa4\xd3\xaa\xa8\x73\x2e\xc6\x3a\xbd\x1d\xe7\xf2\x97\x69\xca\x75\xc5\x4c\xb2\x25\x35\x0c\x46\x41\xb0\xdf\xe3\x4c\xb0\x92\x30\x3b\xc7\x64\x69\x0f\x4d\x13\xec\xf7\x63\x28\x26\x72\xc2\x99\x88\x70\x56\xb5\xce\xb9\xa8\x6a\xd3\x79\x79\x86\xb3\x6a\x12\x8b\xba\x5c\x70\x43\x8a\x15\xd6\x31\x9d\xc2\x05\x59\xbb\x3e\xce\xc2\x23\x9c\xb5\x25\x4e\x5e\xea\x31\x34\xcd\xda\xc9\xd6\xa6\xb1\x66\xea\x30\x81\x6b\x30\x01\x12\x75\x49\x8a\x19\x4a\x71\xc7\x8a\x9a\x82\x44\x0a\x6d\xfa\x0c\xcf\x25\x38\x87\xfb\xf6\xb5\xff\xb2\xd7\x3b\x3a\x24\xd2\xe7\x8f\x8f\xd4\x58\xd5\xe6\x1b\xe4\xf0\x51\xaf\xd4\xa3\x67\xe3\xd2\xbc\x42\x0f\x3c\x9b\xe2\xd5\x8a\x78\x90\x6d\xa2\x87\x92\x23\xa5\x8c\x0b\xd2\x30\x5b\x02\x6f\x2d\x99\x54\xed\x57\x77\xe1\x80\x29\x30\xf7\xd5\x29\xbb\xcb\xa4\x8d\xaa\x13\x83\x7d\x3b\xd7\xc7\x3d\xc0\xc3\x91\x6c\x1a\x1f\x61\xc5\xec\xa8\xb9\xaf\xb5\xcd\xdf\x34\xf8\xfc\x45\x4b\x31\x1b\x3a\xe3\x35\xdb\xf9\xa8\xe1\xe7\x3e\xb7\x27\xf6\x04\x35\xdf\xc6\x63\x6e\xd2\x99\xbe\x26\xf7\x22\x37\x9f\xea\x1b\xc8\x1d\x26\xec\x3b\xd1\x3b\x80\x02\xeb\xf6\xd5\x53\xb0\x1f\x02\xfe\xa7\xa6\x9a\x90\x6c\x99\xc0\x9b\xa7\x28\xb6\x81\x87\x65\x73\x74\x9c\xbc\xeb\x8f\x1e\xd1\x92\x76\x27\x4a\x2a\x32\xb5\x12\x1a\x0c\x82\x76\xd8\xef\xbf\xf6\x57\x4a\x56\xa4\x8a\x7b\x70\xc1\x0d\x67\x05\xff\x8f\x52\x30\x91\x42\x11\x4b\xef\x61\x24\x54\x2d\x26\x41\x56\x8b\xe4\x74\x85\x30\x3d\x8d\x6a\x74\x8a\x95\xa7\xee\x40\xe1\xa7\xc7\x01\xce\xdf\xcb\x33\x43\xc9\x6e\x29\x7c\x5e\xa4\x08\x3f\x8f\xa2\xfe\xde\x01\xcc\x0c\xa9\x33\x77\x3d\xbb\xb1\x1d\xdc\xf1\xa2\x80\xae\x37\x25\x37\x60\x4f\xcf\x96\x14\x46\xfa\xf7\x67\x48\x09\x56\x38\x40\x11\x76\x5b\x9e\x6c\xad\x47\x60\x53\x67\x19\x29\x0d\x1f\x49\xff\x1e\x47\x3a\xc9\x42\x73\x0a\xf7\xa8\x85\x12\x4a\x97\x3c\x63\x09\xed\x9b\x91\xd7\xc6\x4c\xdc\x60\xbc\x1d\x43\x4e\xc2\x37\x4f\x3c\xa3\x91\xa7\x74\x4d\xcc\x53\xaa\x64\x65\x77\x19\x37\x54\x42\x66\xd9\x49\xec\x46\x62\x43\xd8\x32\x91\x52\xfa\x1a\xd4\xb6\x5a\x78\xb2\xb1\x5e\xb5\x07\xed\x7d\x3b\xf6\x5c\x3a\xf9\x8d\xac\x1c\xd6\xa4\x90\x9a\x9e\x51\xd7\x11\x52\x74\x47\xc2\xb4\x73\xfb\x45\x6e\x34\x32\x25\x4b\x90\xbd\xc0\x45\x3e\x79\x41\x5f\x23\xab\xb0\x93\xb4\x2d\x17\x7a\x30\xa3\x1e\x0d\x53\xc6\x12\x5a\xc8\x0e\xd6\xa6\x90\xc9\x6d\xd4\x4e\x3e\x17\x39\x6a\x61\x78\x61\x1f\x0e\x2f\x50\x92\xd6\xf6\x17\x09\xd7\x50\x94\x10\xbf\xa3\x34\x42\x49\x4c\xd8\xc0\xc7\x44\xb0\x63\xda\x95\x4d\x5f\xc2\x79\x84\x22\x1c\x81\x94\x92\xdd\x2b\xc9\xda\xd3\xc0\x1e\xfd\xa2\x9c\x9d\xc3\x4c\x5c\x13\xfa\x79\xe7\x59\xe7\x3d\x3f\x6f\xa1\x1e\x9e\x90\xfd\x9b\x4e\xb1\xde\xba\x35\x23\xa8\x38\xc2\x15\x61\x47\xc8\xa5\x69\xff\x01\x96\x95\xb9\x1f\x3b\xfb\xd8\xd2\x8f\xa0\xa5\xf5\x6f\x18\x2f\x6c\x7a\xec\xb8\xd9\x42\x48\x70\xad\x6b\xd2\x0f\x2a\xf8\x6e\x0b\x5e\xf4\xe6\x26\x18\x0c\x78\x66\xc9\x38\xc8\x47\x0b\xc2\x0d\xbe\x9b\xe1\x5f\xdb\x88\x1f\x3a\xd8\x83\xc1\xa0\x90\xf9\xe4\x83\xe2\xc2\x64\xe1\xf0\xda\xea\x4c\x77\x94\x7a\x51\x34\x89\xb6\x2d\x7e\xc9\x76\x2d\x99\xe1\x47\x3d\x8c\x6c\xcc\xc8\x66\xf0\x68\x48\xa9\x60\x30\x68\x82\x41\x13\x34\xff\x07\x00\x00\xff\xff\x8b\x69\x0a\x56\x4e\x0a\x00\x00")

func templatesTriggersTrigger_xTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesTriggersTrigger_xTemplate,
		"templates/triggers/trigger_x.template",
	)
}

func templatesTriggersTrigger_xTemplate() (*asset, error) {
	bytes, err := templatesTriggersTrigger_xTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/triggers/trigger_x.template", size: 2638, mode: os.FileMode(420), modTime: time.Unix(1490024127, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTriggersTrigger_x_runTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x93\xcf\x6b\xdb\x4e\x10\xc5\xef\xfb\x57\x3c\x72\xf8\x22\x05\x7f\xad\x9c\x03\x29\x84\x9c\x7a\x69\x4b\x08\x85\x52\x7a\xd8\x48\x63\x79\xf1\x6a\x46\xec\x8f\x14\x63\xf4\xbf\x97\x5d\xad\x5c\x37\x71\xd2\x43\x0f\x85\xfa\x60\xa4\x9d\xd9\x7d\x4f\x9f\x37\x3b\xea\x76\xa7\x7b\x42\x70\xa6\xef\xc9\x79\xa5\xcc\x30\x8a\x0b\xa8\x14\x00\x5c\x1c\x0e\x58\x7f\x9a\x7b\xee\x45\x02\xa6\xa9\x69\x85\x99\xda\x60\x84\x2f\x54\xad\x54\xd3\xe0\xb3\xb6\xa6\xd3\x81\xf0\xdd\x58\x8b\xa7\xe5\x2d\x6c\x09\x86\xc7\x18\x60\x3c\x46\x27\x23\x39\xbb\x87\xa7\x10\xc7\xb5\xda\x44\x6e\x51\x19\x5c\x26\x85\x0f\x7a\x20\x4c\xd3\xc3\x6c\xe2\x7d\xda\x53\x1f\x4f\xad\x6a\x7c\xfd\x46\xce\x89\xc3\x21\x9b\xca\xcf\x1e\xd7\x37\x18\xf4\x8e\xaa\x52\x5c\xe1\xaa\xce\xe5\xfc\xd7\x34\xb8\x8b\x3e\xc8\xb0\xd8\x31\xc2\x68\xa5\x23\x6c\xc9\xd1\xd2\x72\x3b\x8e\xc4\xdd\x72\xa0\xf6\x60\xa2\x8e\x3a\xb5\xd4\x1d\x85\xe8\x38\xbf\x99\x0d\x2c\x71\x35\xb7\xd6\x78\x87\xab\xe2\x26\xfd\xe6\xbe\x72\x4e\x5e\x9d\xd4\xc9\x3a\x1b\xab\xa6\xdf\x91\x92\x18\xde\x44\x25\xe7\x50\x7d\xcc\x9b\xfe\x4d\x56\xf7\x91\xe1\x22\xfb\x4c\xa7\xcc\x27\x34\x77\x78\xb4\xd2\xee\x3c\x22\x07\x63\x7f\x29\x8e\x62\xad\xe1\x3e\x31\x6c\x65\x18\x2d\x05\x82\xb8\x45\x6a\xc6\x18\xce\x61\xac\x93\x58\x95\x06\x1b\x97\x3f\xc7\x7b\x7d\x77\x7c\x5c\x95\x41\x3e\xee\x7d\x3e\xac\xa7\xcc\x9b\x06\xa5\xe8\xd1\x09\x58\x02\xb6\xfa\x69\x4e\xd9\x27\x5d\x2b\x7d\x9f\x7c\xb6\xc2\x2d\x39\x4e\x30\x6f\xb3\x8c\xc7\xff\xd8\x4b\xc4\xa0\xf7\xa9\x09\xd1\xa7\x36\x1f\x34\x77\xda\x75\xd8\x0c\x21\x03\x48\xa5\x72\x71\x67\x82\x9b\xa3\x76\xd1\xff\x22\xd1\x3d\x8b\x70\x52\xe7\x31\x3f\x90\x0f\x2f\x38\xaf\xf0\x18\x03\x3a\x21\x9f\xed\x67\xe2\x59\x5a\xd8\xee\x5f\xa6\xb2\x80\x17\x26\x04\x33\xd0\xdb\xac\x93\xe2\x1f\xc1\xae\x5e\xbd\x09\xab\x39\x88\xfa\xaf\x25\x51\x6e\xf1\xf5\x0d\xfe\x7b\xcd\xe3\x61\x52\xe7\x53\x3a\xcd\x47\xca\xe7\xe4\x9c\x7e\x04\x00\x00\xff\xff\xa2\x00\xd3\xf1\xa5\x05\x00\x00")

func templatesTriggersTrigger_x_runTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesTriggersTrigger_x_runTemplate,
		"templates/triggers/trigger_x_run.template",
	)
}

func templatesTriggersTrigger_x_runTemplate() (*asset, error) {
	bytes, err := templatesTriggersTrigger_x_runTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/triggers/trigger_x_run.template", size: 1445, mode: os.FileMode(420), modTime: time.Unix(1489673184, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTypesType_xTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x51\x4d\x6f\xa3\x30\x14\xbc\xfb\x57\x8c\x22\x8e\xd9\x70\x8f\x94\x43\x76\xd7\x49\x50\x29\x54\x89\xd3\x2a\xb7\xb8\xf0\x48\x69\xc1\x20\x6c\x5a\x55\x88\xff\x5e\x99\x40\xbe\xa4\xa8\xb7\xf7\xde\xcc\x78\x46\xe3\x52\x46\x1f\xf2\x40\x30\xdf\x25\x69\xc6\x5c\x17\xff\x43\x04\xa1\xc0\xe3\xfc\x81\xe3\xdf\x6a\x1e\x2c\xf9\x06\x22\x84\x58\x79\x1b\x2c\x3c\x9f\x8f\x21\x56\x7c\x87\x17\xcf\xf7\xf1\x97\xc3\x0f\x37\x02\xde\x02\xbb\x70\x8b\x35\x5f\xf2\x80\xaf\xe7\x82\x5b\x0e\x9e\xfc\xed\xd2\x0b\x18\x6b\x1a\x38\x81\xcc\x09\xd3\x19\x26\xdd\xd0\xb6\xac\x69\xfe\xa0\x92\xea\x40\x70\xd4\x18\x4e\xd9\x81\x8b\x94\xb2\x58\xdf\xc0\xe9\x18\x4e\xa7\x75\xca\x09\x57\x75\xee\xa7\x86\x2a\x99\x59\x96\xeb\xe2\xf4\x78\xdb\xda\x91\x06\x03\xa4\x1a\x52\x81\x54\x9d\x53\x25\x0d\xc5\xf8\x94\x59\x4d\x2c\x2a\x94\x36\xf7\x55\x33\x1c\xf7\xde\xe4\xd9\x6a\x86\x3c\xa4\xe2\xf3\x64\x8f\xbd\xff\x95\x25\xa2\x5a\x9b\x22\xef\x0a\xc5\x81\x54\x6f\x5e\x24\x09\x8a\x04\xe6\x8d\xa0\x4b\x8a\x58\x07\x5f\x6a\xb5\xa9\xea\xc8\xa0\x61\x00\xf0\x4b\x39\x03\x25\x4d\xba\x4e\xf2\x57\x8a\xcf\x67\x7b\x12\xf6\x37\x3d\x65\xa8\x52\x32\xb3\xcb\x05\x4c\x99\xa6\x6b\xf6\x10\xe1\xbe\x16\xfb\x77\x5d\xa8\xe9\xe8\xc8\x58\xcb\xaf\x5e\x32\xda\x9f\xb2\xf4\x95\xdc\xac\xed\x4f\x00\x00\x00\xff\xff\xd2\x9e\x31\xcd\x60\x02\x00\x00")

func templatesTypesType_xTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesTypesType_xTemplate,
		"templates/types/type_x.template",
	)
}

func templatesTypesType_xTemplate() (*asset, error) {
	bytes, err := templatesTypesType_xTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/types/type_x.template", size: 608, mode: os.FileMode(420), modTime: time.Unix(1490023861, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesVendorGitkeep = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func templatesVendorGitkeepBytes() ([]byte, error) {
	return bindataRead(
		_templatesVendorGitkeep,
		"templates/vendor/.gitkeep",
	)
}

func templatesVendorGitkeep() (*asset, error) {
	bytes, err := templatesVendorGitkeepBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/vendor/.gitkeep", size: 0, mode: os.FileMode(420), modTime: time.Unix(1488419629, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/Dockerfile.template": templatesDockerfileTemplate,
	"templates/Makefile.template": templatesMakefileTemplate,
	"templates/actions/action_x.template": templatesActionsAction_xTemplate,
	"templates/actions/action_x_run.template": templatesActionsAction_x_runTemplate,
	"templates/cmd/main.template": templatesCmdMainTemplate,
	"templates/connection/cache.template": templatesConnectionCacheTemplate,
	"templates/connection/connect.template": templatesConnectionConnectTemplate,
	"templates/connection/connection.template": templatesConnectionConnectionTemplate,
	"templates/server/http/handler_x.template": templatesServerHttpHandler_xTemplate,
	"templates/server/http/server.template": templatesServerHttpServerTemplate,
	"templates/triggers/trigger_x.template": templatesTriggersTrigger_xTemplate,
	"templates/triggers/trigger_x_run.template": templatesTriggersTrigger_x_runTemplate,
	"templates/types/type_x.template": templatesTypesType_xTemplate,
	"templates/vendor/.gitkeep": templatesVendorGitkeep,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"Dockerfile.template": &bintree{templatesDockerfileTemplate, map[string]*bintree{}},
		"Makefile.template": &bintree{templatesMakefileTemplate, map[string]*bintree{}},
		"actions": &bintree{nil, map[string]*bintree{
			"action_x.template": &bintree{templatesActionsAction_xTemplate, map[string]*bintree{}},
			"action_x_run.template": &bintree{templatesActionsAction_x_runTemplate, map[string]*bintree{}},
		}},
		"cmd": &bintree{nil, map[string]*bintree{
			"main.template": &bintree{templatesCmdMainTemplate, map[string]*bintree{}},
		}},
		"connection": &bintree{nil, map[string]*bintree{
			"cache.template": &bintree{templatesConnectionCacheTemplate, map[string]*bintree{}},
			"connect.template": &bintree{templatesConnectionConnectTemplate, map[string]*bintree{}},
			"connection.template": &bintree{templatesConnectionConnectionTemplate, map[string]*bintree{}},
		}},
		"server": &bintree{nil, map[string]*bintree{
			"http": &bintree{nil, map[string]*bintree{
				"handler_x.template": &bintree{templatesServerHttpHandler_xTemplate, map[string]*bintree{}},
				"server.template": &bintree{templatesServerHttpServerTemplate, map[string]*bintree{}},
			}},
		}},
		"triggers": &bintree{nil, map[string]*bintree{
			"trigger_x.template": &bintree{templatesTriggersTrigger_xTemplate, map[string]*bintree{}},
			"trigger_x_run.template": &bintree{templatesTriggersTrigger_x_runTemplate, map[string]*bintree{}},
		}},
		"types": &bintree{nil, map[string]*bintree{
			"type_x.template": &bintree{templatesTypesType_xTemplate, map[string]*bintree{}},
		}},
		"vendor": &bintree{nil, map[string]*bintree{
			".gitkeep": &bintree{templatesVendorGitkeep, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

