// Code generated by go-bindata.
// sources:
// templates/Dockerfile.template
// templates/Makefile.template
// templates/actions/action_x.template
// templates/actions/action_x_run.template
// templates/cmd/main.template
// templates/connection/cache.template
// templates/connection/connect.template
// templates/connection/connection.template
// templates/server/http/handler_x.template
// templates/server/http/server.template
// templates/triggers/trigger_x.template
// templates/triggers/trigger_x_run.template
// templates/types/type_x.template
// templates/vendor/.gitkeep
// DO NOT EDIT!

package sdk

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesDockerfileTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\x4f\x4f\xc3\x20\x18\xc6\xef\x7c\x8a\x37\xbb\x17\x9c\x89\x17\x93\x1e\x66\x8a\xa6\x71\x83\x86\xd4\xa9\x31\x1e\xb0\x45\x42\x18\xd0\xd0\x7a\x98\x0d\xdf\xdd\x2c\xa5\x27\xf5\xc8\xc3\xf3\xe7\xf7\xde\x0b\x7e\x00\x1b\x9c\xf4\x3d\xd1\xa1\x18\x4e\x5f\xda\xf8\xdb\x2b\x7c\x0d\x68\xbf\xbb\xa3\x7b\x08\x51\x4b\x6f\xbe\xe5\x64\x82\x2f\x17\x63\xfe\x19\x7b\x5b\xea\x90\x1f\xd3\x79\x50\xe5\x92\x46\x88\xb2\x23\x3c\xf0\xed\xcd\x91\xb2\x8a\x0b\xfa\xd2\x50\x51\x1f\x28\x6b\xcb\x2d\x42\xe2\x89\x81\xb3\xbd\x89\x50\x0c\x40\xf2\xf2\x12\x1c\xc9\x87\xf1\x68\x57\x55\x80\x81\xe8\x40\xc6\xd8\x91\x79\x06\xdc\xc8\xce\x4a\xad\x44\x08\x13\xa4\x84\x9e\xb9\x78\xac\x6a\xf1\x9f\x25\x25\xb4\x74\xe4\x56\x3c\x0e\xaa\xc3\x67\xe9\x4e\xf0\x4b\xc9\x38\xd2\x2a\x58\xd9\x2f\x42\x74\x50\xc4\xcf\x75\xe0\x72\x4f\x2b\x5e\x1b\x5e\xb3\x16\xde\x36\x7f\x30\x93\x79\xc6\x4c\x3a\x95\xd2\xe6\x1d\xfd\x04\x00\x00\xff\xff\xc4\x7a\x21\x4f\x52\x01\x00\x00")

func templatesDockerfileTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesDockerfileTemplate,
		"templates/Dockerfile.template",
	)
}

func templatesDockerfileTemplate() (*asset, error) {
	bytes, err := templatesDockerfileTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/Dockerfile.template", size: 338, mode: os.FileMode(420), modTime: time.Unix(1490194044, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesMakefileTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x6d\x6f\xdb\x36\x10\xfe\xac\xfb\x15\x57\xcf\xb0\xad\xa0\x14\xe3\x60\xdd\x00\x6d\x79\x29\xe2\x20\x2d\x8a\xd9\x46\x92\xb6\x18\xa6\xb5\x60\x24\x5a\x22\x2c\x91\x02\x45\x39\x4b\xe2\xfc\xf7\x81\x7a\xf1\x4b\x9c\xb8\xfb\xb2\x2f\x86\x7d\x77\xbc\x7b\x9e\xbb\x87\x47\x7f\xb9\xb8\xba\xfe\x38\x19\x9f\x1e\x77\x07\x45\xc2\xd3\x14\x63\xcd\x73\xec\x7f\x5b\x70\x5d\x08\x25\x7d\xec\x63\x9e\x96\xb1\x90\x5e\x91\xf3\xd0\xbb\x67\x59\x8a\x4b\x2c\x78\x84\xfd\x82\xae\x82\x28\xed\xbb\x30\x7e\xff\xc7\xc5\x4e\x1e\xc9\x32\xbe\x3f\x49\x1d\x51\x65\xb8\x18\x9f\x4f\x46\x1f\xc7\x97\xfe\x2a\xcb\x2d\x2b\xf8\x2f\x3f\xa3\x08\x95\xf4\x72\x19\xe3\xd1\x09\x8d\xf8\x82\xca\x32\x5d\x67\x58\xd2\x65\x10\xd0\x65\xdc\xc7\x25\x1a\x8d\x24\xc2\x7e\x20\xfb\x2e\x7c\xb9\x18\x8f\x26\x57\x2f\x30\x93\x91\xd2\x3f\x22\x56\xc7\x54\xa8\xce\xbf\x8e\x4e\xb7\x00\x59\xc4\xd8\x1d\x4c\xbf\x8e\x5c\x17\xbe\x6f\xd3\xe6\x61\xa2\xb0\x3b\xb0\x46\x17\x97\xc8\xee\xe6\xd8\x7f\xc4\x5c\x0b\x69\xd0\xa8\x32\xcf\xb9\x1e\x14\xe5\x6d\x61\xf4\xa0\xdb\x3d\x7c\x3b\x7c\x3b\x74\x5d\x34\x2a\x55\x77\xdb\x8e\x23\xd7\xc5\xa7\xbe\x0b\x30\xfd\x74\x79\xdc\x1d\xd4\x5c\x5c\xd2\x64\x26\xd6\x52\x0d\xce\xf5\x0c\xd3\x5e\xfc\x00\x30\xba\xbe\x39\x3d\xa6\x73\x95\x31\x19\xd1\x9a\x5a\x41\x6f\x85\x04\xb8\xba\x98\x4e\x8e\x1f\x1f\xd1\x9b\xb2\x70\xce\x62\x7e\xa5\x94\xc1\xa7\x27\x10\x33\x19\xf1\x19\x5a\x37\x38\x55\x50\x93\x1e\xb8\x8c\xc4\x0c\x80\xa5\xa9\x5f\xf5\x1e\x45\xc6\x62\x8e\x79\x7d\x1e\x75\x29\x25\xd7\x00\x75\x15\x1f\x85\x2c\x0c\x4b\x53\x80\xdb\x52\xa4\x91\x0f\xce\x59\xd5\x86\xce\xe7\x42\xc8\x18\x35\xcf\x6d\x4b\x6c\x01\xb7\x03\x8e\xe1\x85\xb1\x43\xea\x0e\x2e\x27\xd3\xf7\x37\x1f\x5c\x5a\xe8\x90\x36\x7e\x5c\x2e\x31\x95\x48\x8a\xa6\xbf\xaf\x44\x81\x93\xcd\x23\xa1\x91\xe4\x68\x19\x3a\xb1\xc2\xaa\x34\x12\x65\x0d\xb4\x1d\xc0\x8b\xa7\x69\x98\x45\x34\x63\x42\x7a\xb1\x02\x68\xb0\xfb\x75\x02\x70\xc2\x1c\x89\x7e\x96\x64\x74\x7d\xe3\x02\xd8\x46\x58\x6e\x35\x81\xd9\x5a\x94\xbd\x1e\x06\xe0\x58\xe9\x10\xe1\xdd\x96\xd8\xa1\xdf\xac\x8f\x16\x34\x18\x54\x87\x30\x70\xbd\x03\x1a\x0c\x83\x4e\xc4\x0c\xf3\xab\x66\x06\x34\x97\xf1\x6f\xb5\xbe\xdf\x76\x07\xad\xf4\xdd\xa0\x43\x3b\x2f\x28\xd3\x4a\xbb\xe4\xe0\x9c\xe9\xcc\xd6\x3e\xb0\x75\x5a\x23\x34\x73\xf1\xc1\xb1\x5e\x3d\xb3\xcd\xfb\x74\xe9\x82\x63\x98\x46\x12\x2e\x1e\x5a\x0b\x12\xc2\xff\x09\xd3\x32\xe2\xc7\x8d\xe1\x00\xa0\x82\xe3\x83\x13\xa9\x70\xce\x75\xdb\x48\x92\xdb\x3b\x46\x0c\xae\xc4\xd7\x36\xc4\x5f\x8b\x0f\xbd\xd5\x31\xc3\xe2\xfd\xa1\xbb\xce\x94\xd9\x56\x02\x68\x1e\x73\xc9\x35\x33\x7c\x25\x9d\xcb\xda\x60\xe5\x23\xf9\x5d\xd3\x0f\x2c\xe6\x3c\xe5\x46\xc9\xd5\x10\x22\xf4\xbc\xd5\x9c\x96\x4b\xcc\x16\xb6\x39\x95\xed\xdc\xaa\x67\xed\x05\xe7\xec\x2e\x11\x61\x82\xf5\x05\xc1\xe1\xc6\x22\xe9\xf5\x5a\x6b\x53\xa7\x85\x83\xb1\xda\x1d\x05\x21\x39\x33\x6d\x1e\x93\xe5\x1b\xb3\xa9\xa0\x4f\x16\x5c\xa7\xec\xde\x42\x7f\x06\x1b\x8d\x42\x93\x70\x0c\x4b\xad\xb9\x34\x18\x09\xcd\x43\xa3\xf4\xfd\x06\x9f\x75\xda\x5e\x0f\x23\x31\x9b\x21\x29\xc7\x7a\x93\xe6\x2a\x82\xe2\x49\xbb\x69\xbc\x2a\x72\x0d\xa4\x95\xe8\x96\xbb\xd7\xc3\x9c\x99\x30\xb1\xb7\x8b\xe4\x43\xfc\xfd\xb5\xd3\xad\xc4\x94\x16\x31\x1e\xd4\xde\x03\x2f\x7e\xd8\x29\xf0\x0c\x6e\x23\xbe\xdd\xce\x40\xbd\x30\xfc\xb6\x20\xd1\xa5\x6c\x8d\x24\x31\x26\xdf\xf2\x54\x16\x80\x0d\x8b\x95\x45\xb5\x42\x67\xd8\xf9\xe9\x8d\x5d\x6a\xb4\x48\x02\xd9\x28\x4f\x97\x12\x09\xb1\xc5\xc5\x7e\x05\x06\xdd\xee\x59\x07\x4f\x70\xd5\xcb\x0a\x87\x73\x16\x26\x99\x8a\xf0\xd7\x77\xef\x76\x3c\xf5\x1a\xfb\x8b\xfc\x8d\x9f\x0b\xbe\xed\x45\x42\x12\x9e\xe6\x76\xa6\xf6\x97\x9d\x6b\x23\x95\xce\x16\xf6\x9a\xdf\x7f\x24\x90\xe3\xf0\xf0\xf0\x70\x48\x8e\xec\xa7\x5f\x7d\xff\x21\x2b\x9b\x7f\x87\x55\xdd\xc3\x57\xa9\xb5\xee\x3d\xfc\xaa\x90\xbd\x24\xad\x67\x73\x1f\x7a\x1e\x35\x4a\xa5\x05\xb5\x0e\x2f\xbf\xb7\xe3\xaf\x0b\x9c\x27\x3c\x9c\xa3\xbd\x42\x68\x23\x50\x2a\x83\x42\x56\x7b\x28\x42\x21\x31\x2c\x0b\xa3\x32\xae\xdb\x87\xa4\x78\xd3\xd9\x97\xd7\x0a\xf9\xde\x24\x4a\x1e\xed\xfa\x3c\xfa\xfc\xc2\x02\x2c\x58\x2a\xa2\x66\xbb\xec\x24\x0d\x2d\xb6\xef\x55\xf4\xff\x00\x79\x3b\xfb\x4b\xc0\xb7\x23\x5e\x82\xef\x4d\x3f\x4c\xc6\x7f\xfa\xc8\xec\xdf\x8f\x6a\x39\xb7\xef\x70\xf3\x2a\xd7\x5b\x66\xbd\x45\xe1\xdf\x00\x00\x00\xff\xff\x1f\x34\x42\x85\xd5\x09\x00\x00")

func templatesMakefileTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesMakefileTemplate,
		"templates/Makefile.template",
	)
}

func templatesMakefileTemplate() (*asset, error) {
	bytes, err := templatesMakefileTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/Makefile.template", size: 2517, mode: os.FileMode(420), modTime: time.Unix(1490303952, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesActionsAction_xTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x53\xd1\x8a\xea\x30\x10\x7d\xcf\x57\x1c\xa4\x8f\x5e\xfb\x2e\xf8\x70\xb9\x8a\x88\x17\x85\x7b\x65\x9f\xcd\xb6\xa3\x9b\x5d\x3b\x29\x4d\xba\x8b\x94\xfc\xfb\x92\x26\x95\xee\x56\x50\x84\x7d\xcb\xcc\x9c\x33\x39\x73\x32\x29\x65\xf6\x26\x8f\x04\x99\x59\xa5\xd9\x08\x91\xa6\xf8\xa3\x73\xc2\x91\x98\x2a\x69\x29\xc7\xf3\x19\xf6\x85\xb0\xd6\x85\xe4\x1c\x4b\x8d\xff\xf3\x35\x96\xa1\xac\xab\x09\xe6\x5b\x6c\xb6\x3b\x2c\xe6\xab\x9d\x10\x4d\x83\x84\x65\x41\x98\xce\x30\xd9\xf8\x83\x73\xa2\x69\x7e\xa1\x92\x7c\x24\x24\x3c\x46\x52\xb6\xc5\x15\x97\xb5\xed\xaa\xea\x80\xa4\x9c\x2c\xb8\x2e\xfe\x2a\x4b\x95\x3c\xf9\x42\x9a\x22\x80\x7c\xde\xf4\xbb\xa8\x31\x92\xf6\x8a\xab\xa4\x8b\x06\xe7\x5a\xbe\x8f\xa9\x13\x03\x65\x20\x19\xc4\x75\x11\xe7\x7b\x97\xa7\x9a\x44\xa6\xd9\xd8\x1b\xd4\x19\x42\x1c\xaf\x7b\xf2\xc4\x6e\x02\xe2\xbc\x77\x1c\x26\x07\xf3\x6f\x6b\x7b\x87\x01\x11\xf5\xb8\x03\xa1\xc1\x63\x16\x5c\xe3\xde\xef\xc1\xb7\x63\xd4\xd5\x35\x0a\x2f\xab\x4c\xbb\x5b\xaa\x0d\x0e\xba\xea\x23\x84\x3d\x97\x34\xa4\x18\x5b\xd5\x99\x45\x23\x00\xa0\xef\x2c\xbe\xae\x96\x73\x11\xe1\x2d\xea\xd4\x87\x68\xe7\x1b\x3b\x87\xfd\xab\xd1\x3c\x1d\x85\xe4\x3f\xf9\x11\x51\xa3\xfd\xa5\x77\xd4\x3e\x50\x1f\x9f\x25\xca\xd7\x21\xba\xa5\x3f\x92\xee\x18\x20\x20\x7f\x74\x82\xdf\xed\x87\x8f\xab\x10\x7e\xff\x40\x70\xc4\x74\x82\xdd\x67\x00\x00\x00\xff\xff\x94\xae\x74\x7a\x2d\x04\x00\x00")

func templatesActionsAction_xTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesActionsAction_xTemplate,
		"templates/actions/action_x.template",
	)
}

func templatesActionsAction_xTemplate() (*asset, error) {
	bytes, err := templatesActionsAction_xTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/actions/action_x.template", size: 1069, mode: os.FileMode(420), modTime: time.Unix(1490288384, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesActionsAction_x_runTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x53\x4f\x6b\xdb\x4e\x10\xbd\xeb\x53\x3c\x7c\xf8\x21\x05\x47\x0a\xbf\x63\x20\x85\x90\x53\x21\x4d\x42\x28\x85\x50\x7a\xd8\x4a\xe3\xf5\xe2\xd5\x8c\xd8\x3f\x09\xc1\xe8\xbb\x97\x5d\x49\xb1\x93\x40\x7b\x2a\x94\x52\x1f\x8c\x66\xe6\xcd\xec\xdb\xf7\x66\x07\xd5\xee\x94\x26\xa8\x36\x18\x61\x5f\x14\xa6\x1f\xc4\x05\x94\x05\x00\xac\xf6\x7b\xd4\x77\x13\xe4\x5e\x24\x60\x1c\x9b\x56\x98\x29\xa3\x57\x19\x33\x58\xd1\x58\x69\x13\xb6\xf1\x7b\xdd\x4a\xdf\xec\xa4\x57\xdc\x35\x83\x8d\xda\xf0\xa9\xef\x76\xa7\x5a\xfe\x6f\xac\xe8\x55\x51\x15\x45\xd3\xe0\x8b\xb2\xa6\x53\x81\xf0\x64\xac\xc5\xe3\x12\x85\x2d\xc1\xf0\x10\x03\x8c\xc7\xe0\x64\x20\x67\x9f\xe1\x29\xc4\xa1\x2e\x36\x91\x5b\x94\x06\x27\x89\xd1\x8d\xea\x09\xe3\xf8\x31\x81\xab\x97\x71\x65\x85\xaf\xdf\xc8\x39\x71\xd8\x67\x66\xe4\x9c\xc7\xf9\x05\x7a\xb5\xa3\x72\x2e\xad\x71\x56\xe5\x62\xfe\x6b\x1a\x5c\x45\x1f\xa4\x5f\x58\x18\x61\xb4\xd2\x11\xb6\xe4\x68\x81\x5c\x0e\x03\x71\x87\xdc\xef\xa1\x3c\x98\xa8\xa3\xae\x58\xea\x8e\x42\x74\x9c\x23\xb3\x81\x25\x2e\xd3\xc9\x15\x3e\xe0\x6c\x66\x92\x7e\x13\x2a\x93\xca\xb9\xb1\x38\xca\xb2\xb1\xc5\xf8\x2b\x71\x24\x86\x9f\xaa\x23\xaf\xd4\xb9\xcd\xe8\xbf\x4d\x9e\xfb\xc8\x93\x32\x2e\x72\x16\x65\x5a\x5c\x3c\x99\xb0\xcd\xb1\x36\x8f\xc4\xf3\x1e\xc9\x23\xb9\xa3\xe4\x61\x73\x67\xc1\xd4\x2b\xc1\x2e\x73\xa9\x4a\x47\x94\x09\x8a\x93\x43\x43\x7d\xf5\xf2\xb9\x9e\x87\xbf\xdb\xc4\x35\xd2\x4b\x48\xcf\xa1\xbe\x16\xad\xc9\x55\x28\xdf\x1b\xb2\x9e\x84\xaa\xe6\xab\xcf\x9e\x9e\x5f\xe0\xbf\x77\xd0\xfd\xb8\x48\xf8\x20\xd1\x1d\x09\xbf\xa4\x3f\xa9\x1d\xc1\x47\x47\x08\x82\xdb\x9b\xeb\x07\x44\x4f\x89\x45\x7d\xe7\x0c\x07\xcb\x50\xdc\x1d\xe2\x4d\x82\x25\x8e\x8a\x9f\xd1\x4e\xc6\xf6\xe4\xbd\xd2\xe4\xd7\x19\xda\x09\x58\x42\x9e\x92\x64\x63\x71\xbd\xb2\xd0\xb9\x4b\x93\x7b\x63\xe9\x42\x3e\x75\xb2\x4c\xf7\xc2\x46\x1c\x7c\x6c\x5b\xf2\xfe\x0d\x9a\x8d\xcd\xd0\x03\x6e\xa3\x8c\x8d\xcb\x7d\x5e\xcd\x5c\x1f\x59\xfe\x99\x7c\x98\x3c\x0f\xe9\xeb\xf7\x98\x9e\x0e\xf9\xe7\xfa\x9f\xe1\xfa\x8f\x00\x00\x00\xff\xff\x83\x3e\x7b\x77\x94\x06\x00\x00")

func templatesActionsAction_x_runTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesActionsAction_x_runTemplate,
		"templates/actions/action_x_run.template",
	)
}

func templatesActionsAction_x_runTemplate() (*asset, error) {
	bytes, err := templatesActionsAction_x_runTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/actions/action_x_run.template", size: 1684, mode: os.FileMode(420), modTime: time.Unix(1490288285, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCmdMainTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x5a\xdd\x8e\x1b\x37\xb2\xbe\x56\x3f\x45\x9d\x86\x1d\xb7\x4e\xe4\x56\xec\x73\xa7\x64\xce\x41\xe2\x71\x62\x23\xfe\x83\x67\x92\x83\x85\x6d\x24\x54\x77\x49\xcd\x55\x37\xd9\x20\xd9\xa3\x28\x03\x01\x79\x08\x5f\xee\x03\xec\x73\xf9\x49\x16\x55\x64\xff\x8d\xa4\xb1\x9d\xc5\xee\xcd\xee\x02\xb1\x45\x56\x17\x8b\xf5\xf3\xd5\x47\xd2\xb5\xc8\x36\x62\x8d\x50\x09\xa9\xa2\x68\x3e\x87\x47\x3a\x47\x58\xa3\x42\x23\x1c\xe6\xb0\xdc\x81\x2b\x10\x7e\xd4\x95\x50\x39\xfc\xa0\xe1\xe2\xfc\x47\xf8\xc1\x4f\x6b\x93\xc2\xf9\x4b\x78\xf1\xf2\x12\x1e\x9f\x3f\xbd\x8c\x22\x59\xd5\xda\x38\x48\xa2\x49\x8c\x2a\xd3\xb9\x54\xeb\xf9\x5f\xad\x56\x71\x34\x89\x57\x95\xa3\x3f\x4a\xbd\xa6\x3f\xb4\x8d\xa3\x68\x22\x94\x95\x10\xaf\xa5\x2b\x9a\x65\x9a\xe9\x6a\x5e\xad\x1b\xf7\xfb\x9c\x86\x69\x7a\x38\xb3\x61\x03\xe6\x75\xd9\xac\xa5\xba\x6f\xf3\xcd\xfd\xb5\x7e\x38\xcf\xa5\xad\x85\xcb\x0a\x34\x71\x04\x00\x50\x97\x7a\x0d\x1f\xff\x2c\x18\xf1\x51\xb9\x0a\xad\x15\x6b\x24\x5b\xae\xaf\xef\x83\x5c\x41\xfa\x6d\xe6\xa4\x56\x16\xf6\xfb\x68\x12\x5f\x5f\x43\xfa\xca\x3b\xf0\xb5\xd6\x0e\xf6\xfb\xb9\xf0\xf3\xb1\xff\x02\x55\x7e\x52\x32\xd3\x4a\x21\x4b\xc7\xc7\x05\x2c\x9a\x2b\x34\xf3\xc2\xb9\x3a\xee\x0d\xb8\x34\x72\xbd\x46\x73\xda\x02\x17\x04\xc6\x26\x4c\xa3\xe8\x4a\x18\x0a\xcd\x7c\x0e\x2f\x44\x85\xe0\xf7\x0a\x4a\x54\x18\x4d\x78\xe4\x0c\x58\x1f\xff\x7d\xbf\x8f\x59\xf4\x67\x54\xb9\x36\xad\xf0\x15\xff\x8a\x26\x61\x34\x7c\x10\x7e\xf5\x9f\x18\x2b\xb5\xea\xbf\xe1\x9f\x1c\x9f\x76\xaa\xfb\xd0\xff\x6c\xbf\x3c\x47\x9b\x19\x59\xbb\xc1\xd7\x79\x3f\xc4\x1a\x86\x22\x41\xcb\x70\x88\x34\x4d\x39\x8f\x2f\x0b\xb4\x08\x39\xae\xa4\x42\xb8\x12\x46\xea\xc6\x42\xa6\x4b\x6d\x20\xd3\xca\x3a\xa1\x9c\x85\xd6\x27\xa5\xac\x10\xe0\x0c\x28\xf3\xd2\x47\x24\x44\x65\x90\xc4\x6b\x83\xa8\xbe\x2c\x16\xcb\x52\x64\x9b\x78\x1a\x4d\x0c\xe6\x70\x4c\xd0\x60\x4e\xd3\x2c\x7f\x4a\x8f\xff\xde\xa2\x3b\xfa\xbd\x45\x17\x4f\xc9\x76\xb7\xab\x11\xb2\x52\x7e\x6b\xd6\x16\xac\x33\x4d\xe6\xe0\x3a\x9a\x3c\xd2\x15\x97\x20\xfd\xcf\x3a\x23\xd5\x3a\x9a\x5c\x34\xcb\x30\x6c\xe1\xcd\xbb\x30\xba\x8f\xa2\x55\xa3\x32\x58\xa3\x23\x15\xdf\x1b\x5d\x3d\x7a\xf6\x34\x99\x42\xf2\xdf\x41\xeb\x0c\xd0\x18\x6d\xa6\xa4\x56\xae\xa0\x44\x95\x68\x9b\xd2\xcc\x14\xbe\x39\x83\x07\x34\x3e\x31\xe8\x1a\xa3\x40\xc9\x32\x88\xdb\xf4\x05\x6e\x93\x78\xa7\x1b\xa8\x1a\xeb\xc0\xd6\x98\xc9\xd5\x0e\xb2\x60\x98\xd3\x20\xd5\x95\xde\x20\x88\x10\x3c\xda\xf0\x3e\x9a\x08\xda\xc8\xe2\x0c\xbe\x08\xcb\x93\xf6\x60\xf6\x82\xb7\x13\x16\x7f\xf3\xe0\xdd\x2c\x9a\x0c\x37\xb5\xe8\xa6\x1e\x2e\x68\x6e\x1f\xb5\x66\x09\xde\x86\x92\xe5\x70\xbb\xcf\x7d\xb9\xd2\x8e\x2f\x5c\x2e\x15\xef\x39\xd4\x70\xfa\xf3\x83\x19\x74\x3f\xbe\xd3\xf9\x8e\x06\x7a\x3f\x2c\xd9\xc2\xf1\xfc\xf5\x3e\x9a\x54\xa3\xf1\x9f\x1f\x90\xf1\x34\xbb\x00\x58\xce\xe6\x73\xb8\x40\xcc\x41\x3a\xd8\x4a\x57\x80\x00\x0e\x9e\xd5\x50\x09\x63\x0b\x51\x96\x52\xad\x61\xab\xcd\xc6\xb2\xf1\x39\x66\xa4\x8e\x20\x91\x9c\x79\x8e\x99\xce\xd1\x90\xf3\xd9\xde\x29\x87\x03\x8d\x21\xa1\x1c\xb3\xd4\x0b\x24\xd5\xf4\x6b\x1e\xfd\xaf\x33\xda\x31\x47\x87\x12\xdc\xec\x60\x65\x74\xd5\xf9\xe8\x7f\xde\xc1\xb6\x90\x59\x01\xd2\xc2\xb6\x40\x83\x8c\xdc\x8d\x0c\xd1\x48\x1d\x52\xd4\x10\x2b\x4b\xb1\xb2\x04\x0c\xae\xc0\x2a\x9a\x0c\x56\x65\xd3\x7e\x52\xc1\xfc\xe4\xcd\xbb\xe5\xce\x61\xd2\xaf\x30\x9d\x1d\x31\x66\x94\x2b\x6d\xc2\x44\x13\xda\x71\x1f\xb1\x6a\x06\xcb\x71\xc4\xa8\xe5\x24\xec\x7c\xd1\x26\x25\x99\x70\x33\x6f\x3b\xa7\x0c\x56\x2c\xf5\x3a\xfd\x5e\x38\x51\x26\x68\x8c\xcf\x32\xbb\x95\x2e\x2b\x38\x31\xd2\xb6\x56\xae\xa3\x49\x26\x2c\x42\x1c\x30\x28\x5e\x44\x93\x49\x6d\xa4\x72\x01\x79\x48\xbb\x97\x28\xb0\xac\xfb\xe9\x27\x58\xd6\xfd\x9c\x54\x2b\xdd\xcf\x0d\xe0\xa6\x17\xb1\xa2\xaa\x4b\x64\xa1\x50\x51\x6c\xc8\x20\x97\xa7\x70\x76\x06\x5f\x79\x7f\xf5\xe6\xc7\x7f\x69\xcb\xa9\x36\xfa\x4a\xe6\x08\x42\x81\xef\x21\xa0\x0d\x04\x2c\xa7\x78\xb5\x2d\x19\xfc\x52\x20\x55\xdd\xb8\xb7\xea\xf1\x6f\x8b\x76\xa4\xda\xfd\xe2\xbf\xa4\xba\x23\x97\x78\x7b\x2f\x78\xf6\x29\x89\x1f\x18\xf5\xe6\xab\x77\xbd\x07\xa8\xcf\x2c\x80\x60\x58\x60\xa5\x95\xfc\x1d\x41\x58\xa0\xe1\x68\x32\xe9\xe3\x43\x03\x94\xbd\x17\xdc\x9e\x92\xbe\x8d\xd1\xe0\x23\x91\x15\x98\x4c\xa7\x7d\x52\x0d\xf3\xe4\x66\xd8\xd8\xc8\x55\xe5\xd2\x57\x64\x68\xa9\x92\xf8\x95\x47\xfd\x41\x1b\x82\xa5\xd6\x8e\xca\xe8\xc9\xe5\xe5\xab\x60\x5a\x9a\xa6\xbc\x47\x86\x79\xca\x76\x59\x96\xb0\x2c\x75\xb6\x81\x46\x39\x59\x72\xe2\xfb\xf6\x09\xb6\x68\x9c\x85\x5c\x6f\xd5\x28\xd1\x6d\xfa\x4c\x5a\x87\xea\x5b\x95\xf3\x46\x92\x23\x69\x7d\xcc\x5c\xef\x2b\xd3\xf8\x5c\x5a\x89\xb2\x74\x85\xd1\xcd\xba\xa0\xea\x5e\x89\xa6\x74\x0b\x6f\xd8\xff\xe3\x3d\x83\x60\x1a\xa5\xc8\x78\x94\xae\x40\xd3\x07\x77\x46\xd1\x15\x6d\x7c\xa3\xc9\xc4\x97\x47\x5f\x02\x87\x58\xf6\x11\x97\xae\x06\xd0\xdc\xe5\x12\x04\xe0\x82\xa5\xce\x77\x70\x25\x05\x5c\x5c\x9e\x3f\x7d\x41\xf9\x64\x1a\x75\x34\xd7\x16\x70\xd7\xc6\x6c\x49\xfa\x98\xd0\xd1\x07\x93\x02\x15\x2a\xac\x4a\x2f\x09\xe4\x68\x75\xef\x0c\xaf\xe2\x17\xeb\x84\x71\xec\x95\x81\x9b\x4d\xa3\x5e\x2a\x7c\xb9\x5a\x79\xde\x94\x0c\xcb\x73\x06\xcb\x1b\x4e\x07\xe6\x9f\xbe\x76\x6d\xa1\x9b\x32\x87\x25\xfb\x90\xdd\x45\xf8\x45\xda\x0f\xe3\xc2\xe6\x79\x63\xc2\x2e\x86\xd6\xdc\x9a\x25\x6d\x85\x8d\xd2\x64\xbc\x81\xc0\xb8\x7c\xea\xfd\x2b\x77\x30\x48\xa0\x51\x5c\x1b\xb5\x51\x7a\xab\xba\x60\x72\x93\xe1\x28\xf9\x58\x4c\x5b\xac\x6d\x91\xf5\xa6\xd7\x2b\xe2\xf4\x9e\x1e\xcc\x60\x79\xb3\x0d\x4e\x7d\x1b\xa4\x88\x1e\x63\xb9\x59\xee\x9b\x77\x5f\xe7\xe7\xc2\x09\xea\x8d\x25\x4d\x10\xe5\xa6\xca\xff\xae\x59\xad\xd0\x60\xfe\x4c\x93\xb3\x28\x5d\xf9\xbb\x9e\xa1\x53\x2a\xbf\x16\xdb\x64\x99\x9e\x77\x63\x53\xae\x1a\x34\x50\xa6\xdf\x97\x8d\x2d\x42\x2b\xf4\x4e\x31\x68\x6b\xad\x2c\x8e\x3a\xf0\xeb\x30\x48\xe9\xf7\x1c\x9d\x58\x40\xe8\x51\xbf\x5e\xef\x7f\x9d\x32\x7f\x70\xc2\x35\x76\x01\xb1\xde\xc4\x9e\x33\xcc\xe7\xd0\xb5\x34\x0e\x3a\x57\x83\x54\x4e\xf3\x2f\x23\xd7\x85\x0b\x4c\x2b\xf2\xa5\x0b\x19\x87\x4e\x5c\x69\xc9\x4d\x12\x1e\x02\xfe\x96\xa1\xb5\xdc\x20\xdb\xee\x0e\x99\x28\x4b\x0b\x52\x01\x77\xdb\x40\x01\x4a\xed\x40\xaf\xc0\x57\xcb\xfd\x4c\x58\xaa\x7f\xad\x38\x6a\x96\xf5\x2f\x1b\x47\x1f\x39\x4a\x4a\xca\xda\x19\x2f\x51\xa3\x59\x69\x53\x09\x95\x21\xac\x85\x54\xd4\xc6\x95\x76\xe0\x0a\xe1\x60\x6d\x50\xb8\x19\x50\x5a\x49\x77\xcf\x42\x49\xb6\xac\xdb\x63\x18\x10\x4d\xa0\xa2\xa6\x96\xea\xe8\x24\x47\xcb\x38\x0d\xb9\x26\x6e\xc2\x0b\x6d\xc5\x2e\xe5\xe1\xcb\x97\xe7\x2f\x29\xc8\x5b\x04\xdb\x10\x89\x0b\x02\xd2\x82\x80\xa5\x76\xae\x44\x85\xd9\x66\x46\x28\xb2\x92\xd4\x69\x1c\xaf\x6b\xb7\xa2\x86\xa5\xc8\x36\x10\xfc\xd6\xef\x10\x41\xd4\xb5\xd1\x22\x2b\xba\x3e\xbc\x0c\x39\xd4\x66\x95\x11\x6a\x8d\x70\x47\xcd\xe0\x4e\x4d\x01\x1d\xa7\x18\x97\xee\xf5\x35\xdc\xa9\xd3\xd7\x62\xdb\x1e\x40\xb8\x9b\x52\xdf\xe2\x0c\x08\x27\xab\xd4\x8b\x05\x19\x6e\x6b\x94\x8b\xa7\x39\xcc\x32\x65\xa1\x99\xef\x98\xa7\xd9\x4b\xc7\x59\x6e\x53\xf5\xa8\xab\x82\x19\x64\xf9\xa7\x28\xa3\xba\xe9\x80\x7d\x50\x44\x41\x53\x92\xe5\x33\x28\x4f\x80\xfb\x81\x32\x71\xda\x13\xde\x9f\xec\x0a\xd3\xa8\xe7\xe8\x0a\xcd\x05\x28\xd2\xd7\x4d\x68\x7d\x0c\x03\x67\x67\x10\x13\x0e\xc5\x61\x89\x4e\x96\x44\x2f\x3d\x40\xb1\x92\x50\x68\xe9\xcb\xc6\xb1\xfb\xc8\x38\xc6\x43\x2f\x9f\xf8\x8d\x49\xef\xdb\xd3\x3b\x08\x5a\x7c\x55\xd2\x91\x8d\xc1\x26\x1e\x4d\x72\xa3\x81\xb3\x61\xd3\x09\x56\xcc\xe7\x1d\x82\xf8\x5a\x45\xdb\x94\x64\xe2\xd6\x88\xba\x46\x73\x84\x9d\x07\x7a\xde\x2a\x27\x48\x98\x10\x4a\x2e\xba\x4e\x85\x57\xa8\x5c\xcc\x13\x81\x07\x2e\x20\xbe\x7a\xc0\x23\x8c\xc3\xe9\x05\xaa\x3c\x09\x4b\x4c\xc7\x47\xf9\x01\x48\x87\xf0\x10\x81\x61\xab\x07\x50\x1d\xda\x2a\x83\x74\x5b\x0a\x9e\xa7\x06\x5d\xfb\x9e\x19\x0f\x39\xf1\x41\xbb\xf9\x6c\xe8\x1e\xdd\x0f\x7c\x22\x76\xbf\x20\xdc\x29\x3f\x17\xb9\x2b\x74\x9c\x8f\xad\x49\x61\xe5\xc7\xe4\x5d\x82\x66\x5a\xe6\x96\x52\x22\x91\x19\x05\xcf\x89\xc3\x3a\x1a\x66\xfe\x3e\x1a\xa0\x4a\x58\xe4\x24\xac\x8c\xb7\xff\x29\xb8\xd2\xde\x97\xa4\x03\xd2\x19\xb4\xfc\x87\xa1\x0b\xfb\xa3\x73\xc7\x0b\xdc\x8e\x00\x26\xf8\x24\xc9\x67\xc0\x31\x3b\x8d\x29\xba\xb3\xc8\x31\xa2\xdc\x84\x8a\xaf\x87\xc5\x7f\xb2\xbb\x9f\xea\xef\x93\x89\x47\xa4\x05\x68\xff\xf3\x46\xc3\xf7\x7b\x21\xdb\x0e\x76\xfc\x31\xc4\xf9\x08\x5e\xb1\xde\x5b\x80\xe7\x18\xf2\xb4\xd0\xd3\xf2\xd2\x01\xf6\x1c\x82\x8f\x5f\xe1\x00\x7e\x86\x07\xec\x1e\x17\x2f\x88\xe1\x06\x50\x14\x39\x94\x5a\xd3\x39\x6d\xad\xc1\xa5\x3c\xf5\x1a\x45\xfe\x4c\xeb\x3a\x29\xc3\x51\xe9\x75\xa3\x0e\x39\xb0\x74\x90\x69\x3a\x20\x3a\xb4\x30\xf7\x34\x38\xb0\xe0\xb0\xa8\xa3\x06\x72\x88\xf6\x9f\x8f\x89\x2d\xd5\xfe\x1c\x50\x6c\xb9\xbb\xb4\x50\x1b\x74\x6e\x07\x85\xc8\x36\xbb\x19\x33\x23\xdb\x18\x24\xcc\x73\x4c\xbf\x3c\x7f\x41\xe7\xd0\x10\xd9\x61\x96\xc5\xf7\x23\xe4\x22\x54\x6b\xa9\x70\x46\xdb\xcd\x35\x5a\x75\xcf\x91\xc3\x36\xa4\xbf\x94\x1b\x64\x32\x44\xbb\x11\x6a\x07\x1b\xa9\x72\x62\x70\x31\x31\xb6\x18\x56\xa5\x58\x7b\x6e\x47\x8a\x7a\x54\x4c\xd3\x94\xd4\x91\x1a\x1b\x94\x10\x53\xdb\x22\xb3\x2e\x0b\xc1\x29\x91\x67\x62\x02\x32\x34\x44\xcd\x98\x07\x7a\x26\x67\xb0\x2e\x45\xc6\x04\x4b\xab\x92\x18\x69\x27\x54\x08\x93\x13\xa9\xcb\x41\xf2\x5d\x65\x86\x36\x85\x0b\xed\x99\xa2\x26\x6a\x1a\x08\x97\xdf\x76\x4d\x9c\x6f\x3e\x67\xad\x24\xa1\x70\x7b\x44\x22\x85\xa7\xf7\x2a\x26\xad\x44\x49\x99\xf4\x09\x28\x85\x43\x43\x5c\xb6\x60\x28\x15\x0e\x96\x68\x5d\xc8\x0e\x3a\x48\xa2\x02\x4d\x1e\xde\x4a\x8b\xbe\x49\x1d\x76\x86\x5c\x38\x01\x95\xa8\xdf\xf8\x4e\xf5\x4e\x2a\x87\x66\x25\x32\xbc\xde\x4f\x87\x2e\xeb\xfb\x47\xb8\x7b\x6c\x4c\x39\x03\xbd\xe1\x7e\x23\x9c\x78\x13\x37\xa6\x8c\xdf\x7d\x4d\x43\x7c\x96\x7a\xcc\x71\xa3\x76\xda\x88\xb2\xdc\x71\x90\x2c\x3c\x84\x2b\x51\x36\x68\x67\x1c\xe4\x2d\x7a\xf7\x35\x16\xfd\xa6\xb4\xc2\xff\xeb\x53\x71\xb0\xfc\x0b\xdc\x3e\xb9\xbc\x7c\x95\x34\xa6\x4c\x13\x6f\xea\x74\x3a\xbc\xa4\x1a\xcb\x5e\xb8\x5c\x37\x2e\x99\x76\xdd\xf9\xf0\xfe\x87\xb6\x31\x9f\x87\x07\x91\x12\x9e\xaa\x95\x86\x39\x3c\x41\x91\xd3\xa9\xde\xb3\x15\xda\x5c\xfc\x56\xc5\xdd\xef\x2f\xcf\xb8\x3e\x2e\x58\xdd\x2a\x89\x09\x60\xfd\x4d\x28\x00\xdc\xb5\xf4\xff\x0f\x7f\xfb\xfb\x5b\x15\xcf\x80\x2f\x8e\x67\x7c\x61\x3f\x03\xbe\x24\x9e\x9e\x54\xe3\xaf\xe1\x17\xb7\xa8\xf1\x12\x9f\xa0\x28\xe0\xd2\x2d\x8a\x58\xe2\xa3\x9a\x06\xbe\x5a\x1c\xd7\x34\x90\xe8\xb4\x9d\x20\x33\xd4\x8d\x08\x43\x32\xdd\x28\x76\x6a\x52\xa2\xea\x65\xa6\x2c\xc4\x17\xa3\x1e\x67\x28\x18\x27\x2d\x7b\xdb\x5e\xc7\x1f\x9b\xec\x96\x4d\xee\xda\xbb\xf9\x5d\x3b\x5d\xc0\xd0\x66\xb2\x6e\x60\xc9\x7e\xdf\xfb\x61\xc0\x49\xe4\x0c\xee\xb8\x43\x4e\x72\x62\xc9\x0f\xef\xdf\x7f\x78\xff\xc7\x87\xf7\x7f\x04\x37\xf1\xd2\x76\x3a\x5c\x36\xf6\xeb\x76\xef\x33\x61\xd5\x7e\xe2\xc6\x43\xc8\xd8\xaa\x16\xab\x07\x7f\x3f\x7e\xde\x27\x37\x7b\xfa\x7a\xc3\xd1\x41\xa8\xf3\x73\x38\xe0\xfd\x79\x37\xb7\xab\x9e\xf2\xf2\xd8\x8e\x5b\xdc\x2c\x0e\x4e\x94\xff\xac\x97\xc5\x29\x2f\x8b\x3f\xe1\xe5\xee\x86\x33\xf1\x66\xdd\x00\x94\xd1\x05\xad\xf7\x69\xc0\xa6\x9e\xdd\x53\xfb\xfd\x6e\xe7\xb0\xbf\x86\x65\xf2\xf8\x3c\x50\xc7\x03\x82\x7f\xf4\xd6\x7c\x4c\xaa\x8f\x3f\x79\x44\x93\x89\xf7\xe3\xa2\xbd\xa9\xe4\xd7\x9a\x56\xfd\x02\x7a\x4b\x4e\xde\xc0\xf4\x28\xbf\x80\x4a\x6c\x30\x39\xd1\x19\xfc\xed\x4c\x35\x3c\x43\x78\x0b\x0e\x88\x91\x27\x56\xcb\xd9\xe8\xa6\xff\xd8\xfd\xc2\xf1\x6c\xe8\xcf\x01\xe2\xe6\x39\x20\xdc\x66\x9e\xdd\x38\x1c\xd2\x59\x9b\x7f\xdf\xe2\xf4\xe1\x31\x5c\xdc\xb8\x90\xf8\x54\xca\x1d\x8e\x0f\x74\xf8\xee\x97\x1b\xf1\xa1\x8f\x23\x4a\xbf\x3b\x77\x7a\x77\x63\xfe\x49\x64\xdf\x0f\xdc\xb2\xbf\xe1\xc1\xa8\x87\x9d\xf1\xd1\xe8\xf3\xf7\x39\x5c\x77\xb4\xd1\x01\x89\x1c\x5e\x7e\xfe\x34\x3e\x51\x0f\x1e\x45\x98\x47\x8a\x9e\x45\xb6\x55\x7f\x74\x37\x4f\x55\x8e\xca\x25\x5f\x54\x33\x88\x21\xa6\xff\x40\xfc\x29\x45\x32\x7c\x9d\xf0\x29\xdc\x16\xf1\xf4\xe8\x01\x7e\xfc\xba\x44\x1a\x87\x1a\xc2\xc4\x0d\x00\xf0\xaf\x4d\x23\xd9\xa4\x7b\x89\xdf\xef\x81\xe6\x17\x6f\x95\xc7\xd2\x81\x48\xf7\x4c\x7a\x64\xae\x08\xdf\xb8\x8b\x42\x6f\xad\xe7\x45\x15\xaa\xe6\x88\x68\x78\x1c\x63\x69\x2a\xdd\x52\xec\xda\x47\x7b\x90\x6a\xa5\x8f\x7c\x42\xc3\x23\x79\x1a\x30\x95\xe0\x10\x89\xa5\x6e\xfc\xc1\x44\x5c\x09\x59\x8a\x65\x89\x21\x4c\xd6\x13\xd4\x90\x57\x33\x10\x16\xb6\x58\x96\xf4\xe7\x3a\x30\xa8\xf0\xec\x4f\x27\x4c\x22\x84\x47\xd6\x0e\xaf\x5d\xdf\xb4\x69\xa0\x4d\x9b\x1b\x4a\x54\xf8\xbf\x23\xb3\xc4\xe8\xb5\xac\xbb\x40\x5f\x51\x16\x15\xed\xbf\x0e\xe8\x2c\xea\x55\x1d\x59\x96\xce\xb7\xac\x9b\x8e\x51\xfc\x72\x40\x34\xb9\xf2\x77\x67\xc2\x5a\x9d\x49\xfe\x07\x33\xdd\x49\x21\x3c\xc2\x1c\xd1\x1e\x9e\xce\x25\xe6\xfc\x24\x23\xd4\x0d\xf3\x34\xbf\x5b\xb9\x5c\x1e\xb3\xc3\x34\x6a\x64\x86\x69\xd4\xbf\xc9\x8a\xfd\x3f\x02\x00\x00\xff\xff\x56\xf2\xa4\xdd\x2c\x24\x00\x00")

func templatesCmdMainTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesCmdMainTemplate,
		"templates/cmd/main.template",
	)
}

func templatesCmdMainTemplate() (*asset, error) {
	bytes, err := templatesCmdMainTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cmd/main.template", size: 9260, mode: os.FileMode(420), modTime: time.Unix(1490810610, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesConnectionCacheTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x93\x41\x6f\xe3\x36\x10\x85\xcf\xd6\xaf\x78\xf5\xa1\x90\x03\xad\x02\xf4\xb8\x45\x4e\x71\x11\x04\xd9\xc6\x05\x9a\x9e\x16\x7b\xa0\xa9\xb1\x44\x98\x1a\x6a\xc9\xe1\xaa\x6e\x90\xff\x5e\x0c\xe5\x24\xde\x45\x7b\xa3\x38\xe4\x9b\x8f\x6f\x9e\x26\x63\x8f\xa6\x27\xd8\xc0\x4c\x56\x5c\xe0\xaa\xba\xbe\xc6\x6d\xe8\x08\x3d\x31\x45\x23\xd4\x61\x7f\x82\x0c\x84\x87\x30\x1a\xee\x70\x17\xf0\xe7\xf6\x01\x77\x4b\x39\xc4\x16\xdb\x1d\x1e\x77\x4f\xf8\x6d\x7b\xff\x54\x55\x6e\x9c\x42\x14\xd4\x15\x00\xac\x0f\xa3\xac\x97\x55\x3a\xb1\x5d\x57\x65\x3d\xf9\xd0\x63\xdd\x3b\x19\xf2\xbe\xb5\x61\xbc\x3e\x16\xe5\xeb\xc9\xe7\xde\xf1\x87\xd4\x1d\x3f\xf4\xe1\x97\x6b\x1f\xfa\x75\xb5\x59\x80\x8c\x1d\x08\x2e\xc1\x20\xb9\x71\xf2\x84\x39\x9a\x69\xa2\x08\x13\x43\xe6\x0e\x06\xa3\x99\x30\x3b\x19\x74\x99\x85\xfe\x6e\x20\x01\x49\x42\xbc\x7c\x5d\x82\xe3\x4a\x4e\x13\x9d\x15\x93\xc4\x6c\x05\xcf\x05\x4b\x09\xdb\xdf\xf5\x6e\xf9\xec\x8c\x14\xd5\xcf\x49\xa2\xe3\xfe\xcb\xd5\xed\xbb\x49\x2f\x85\xea\x91\xe6\x45\x26\x92\xe4\xc8\x4a\xc7\x34\x5f\xb4\x83\xd5\x72\x75\xc8\x6c\xdf\x0e\xd7\x1b\x5c\x2d\xb7\x9e\xab\xd5\x72\x11\x3f\x97\x8d\xe7\x6a\xb5\xd2\xa6\x1f\x31\x9a\x23\xd5\xff\xdd\x7a\xd3\x54\xab\x97\x73\xff\x3b\x12\xcc\xce\x7b\xf4\x24\x08\x11\x8e\x9d\x94\x49\x29\x41\x8b\x7b\xc1\xde\x07\x7b\x4c\xc8\x2c\xce\xbf\x55\xd4\xc7\x48\xa6\x3b\xa9\xc6\xd3\x6e\xbb\x83\x0c\x2e\x2d\x4a\x7b\xc2\x37\x8a\x27\x38\xa6\xc3\xc1\x59\x47\x2c\xd8\x67\xc1\x4c\x60\x22\xf5\x79\x36\x27\x75\xd6\x87\x70\xcc\xd3\xa5\xb5\xaa\xe6\x18\x06\x32\xa8\x7a\x32\x07\xc2\x68\x98\x29\x36\xd0\xdc\x04\xf6\xa7\x82\xe8\x8c\x77\xff\x90\xe2\x8c\x08\x6c\xa9\x5d\x9c\xdf\xb1\x25\xcc\x21\xfb\x4e\x29\xfa\x10\x3a\x55\x3c\x37\x4f\xa2\x74\x67\x84\xc9\x1b\x4b\x0a\x51\xec\xbd\x64\x68\x54\x95\x0b\xdc\xa2\x9f\x27\x4d\xaf\xc1\x91\xca\x6b\xdf\x1f\x1a\xe9\x6b\x76\x91\x30\x65\x11\xc7\x3d\x0c\x1e\xe8\x54\x6f\x30\x92\x0c\x41\x61\xdf\xec\x3a\x8f\xd2\xb1\x50\x3c\x18\x4b\x0d\xe6\xc1\xd9\x41\xe5\xe6\x37\x28\x09\xe7\x10\x68\x42\xcb\xd0\x20\x83\x11\xb5\xda\x86\x71\x0a\x89\x3a\x84\xc3\xa5\x5e\x89\x57\xca\x76\x58\x0e\xde\x8b\x0a\x5a\xc3\xc8\xec\xbe\x66\x52\xaf\x3a\x62\x71\x87\xd3\x8f\x24\x33\x61\x36\x2c\xaf\x53\x40\x9e\xda\x25\x62\xb5\x3d\x47\x6b\xa3\xd1\xa8\x6d\x87\xab\xad\x11\xd3\xc0\x97\x5f\xae\xfd\x14\xfa\x9e\xe2\x06\xf5\x45\x9e\x1a\x50\x8c\x21\x6e\x34\x8d\xdf\x4c\x44\xc2\x65\xce\xcb\x56\x38\x62\x1f\x82\xaf\x56\xb6\xfd\x14\xec\xb1\xde\x54\x2b\x77\x40\x6a\xb4\x70\x03\xdb\xea\x4b\x3e\xdb\xae\x2d\x06\x7e\xf9\x55\xb7\x35\xca\xb6\xfd\x8b\xfd\xf9\xfc\x6b\xd0\x53\x03\x76\x5e\x13\xbc\xf2\xed\x1f\xd1\xb1\x78\xae\xd7\xb7\x91\xcc\x79\x08\x8f\x34\xe3\xbd\xff\x7a\x53\xad\x52\x21\xc4\xc7\x9b\xd7\xfd\xda\x76\x0d\xfc\x02\xa1\x95\x9f\x6e\x54\xf3\x7f\x5b\xb2\xf3\x45\xa1\x34\xfd\x11\x16\x37\x48\xd5\x77\xd7\xbe\x07\x7d\xf9\x37\x00\x00\xff\xff\x18\x6c\xbe\x80\x21\x05\x00\x00")

func templatesConnectionCacheTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesConnectionCacheTemplate,
		"templates/connection/cache.template",
	)
}

func templatesConnectionCacheTemplate() (*asset, error) {
	bytes, err := templatesConnectionCacheTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/connection/cache.template", size: 1313, mode: os.FileMode(420), modTime: time.Unix(1490288320, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesConnectionConnectTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x94\x4f\x6f\x1b\x37\x10\xc5\xcf\xdd\x4f\xf1\x90\x43\x2b\x05\xb2\x85\xe6\x58\xa0\x97\x3a\xc8\xa5\x49\xed\x43\x50\x20\x28\x7a\x18\x71\x67\x77\x59\x71\xc9\x2d\x39\xcc\x66\x6b\xf8\xbb\x17\x43\x6a\xf5\xa7\x46\x2f\x86\x25\x0d\x1f\xdf\xfc\xe6\x71\x26\x32\x47\xea\x19\x26\x78\xcf\x46\x6c\xf0\x4d\x63\xc7\x29\x44\xc1\xa6\x01\x80\xc9\x85\x1e\x6f\x7a\x2b\x43\x3e\xdc\x9b\x30\xee\x8f\x61\x24\xdf\xee\x27\x97\x7b\xeb\xef\x52\x7b\xbc\xeb\xc3\xbb\xbd\x0b\xfd\x9b\x66\xdb\x34\xfb\x3d\x1e\x72\x92\x30\x3e\x51\xa4\x31\xc1\x26\xcc\x03\x47\xc6\x12\x32\x64\x60\xb4\xfc\x95\x5d\x98\x38\x62\xb6\xce\xa1\xd3\x3f\xd6\x83\xfc\x02\x53\x0e\x62\x8a\xfa\xb3\x58\x4e\x3b\xcc\x83\x35\x43\x39\x3b\x87\xec\x5a\x78\xe6\x56\xef\x90\x80\x9c\x18\x21\x62\x0e\xf1\x88\xd9\xca\xa0\x2a\x0f\xb5\x8b\x7b\x3c\x7a\x06\x7f\xa3\x71\x72\x8c\xd1\xf6\x83\xe0\xc0\xf5\x0e\x67\xd9\x0b\x9c\x3d\x44\x8a\x96\x93\x4a\xa4\x3c\x69\xc3\xd6\xf7\x57\x77\xa3\x3b\x89\x5b\xdf\xeb\x8d\xe5\x0a\x6d\xe0\x95\x82\xba\x53\x5f\x3b\x1c\xb2\xa0\x0d\xfe\x07\xc1\x4c\x5e\xd4\xa4\x0b\x89\x61\xbb\x52\x13\xb9\x67\xcf\x91\x84\x8b\x4e\x05\xd8\xc8\x32\xf1\x2d\xb2\x24\x31\x1b\xc1\x73\xc1\xbf\xdf\xe3\x4b\xc8\xf1\x35\x1b\x1c\xd8\x85\xb9\x79\xa9\xc8\x6b\xdf\x4a\xbb\x58\xac\xc5\x26\xb4\x5c\xda\xb8\xe5\x2e\x01\x73\xb4\xea\x22\xa0\xcb\xce\x2d\xb0\xde\x8a\x25\x67\xff\x51\x46\x2d\x22\x4b\x8e\x1e\xa4\xca\x91\xa9\x5d\x56\xdc\x0f\xe7\x90\x20\x1c\xfe\x52\xd0\x4d\x97\xbd\x59\xbf\xdf\x98\x16\x6f\xdf\x93\xd0\x0e\x1a\x1a\x4d\xce\xfd\xc7\xd0\xf7\x1c\xb7\xd8\xbc\xbd\x1c\xde\x81\x63\x0c\x71\x7b\x6a\x51\xa3\x87\x9f\x7e\xc6\xf7\x97\x8a\xe7\x97\xdb\xe6\xb5\x11\x4d\xd1\xfa\xed\x67\x3a\x56\x88\x97\xd8\xa2\x25\xa1\x62\xbf\x98\xb7\x02\xeb\x25\x94\xa2\x57\xb6\xcf\x32\x03\xfb\xdd\x6d\xf7\x0b\x92\x90\xf0\x0e\x29\x9b\x01\x54\x79\x92\x91\x4c\x0e\x34\xd9\xeb\x0b\x4f\xea\x32\xd8\xd8\x62\xa2\x28\xcb\xaa\xfb\xc1\x7a\x72\x6e\xd9\x61\xa2\x94\x70\x20\x73\xfc\x8f\xd9\x1d\xbc\x75\x65\x34\x29\x1b\xc3\x29\xad\x27\x1f\x65\xe0\x38\xdb\xc4\xa5\xe2\x04\xaa\x14\x76\x64\x5d\x8e\xdc\xac\x95\x9f\x14\x41\xca\xb1\x8c\xf1\xf1\xb7\x8f\x5f\xca\x84\x14\xf9\x53\xb4\x5e\x9c\x2f\x2c\xce\x9f\xbb\x9a\xc6\xfe\xfa\xa1\x8d\x9c\x12\xf5\xfa\xcc\xb4\xb4\x0d\xf0\x41\x8a\x8a\x9a\xf5\x21\x8e\xe4\xd0\x97\x53\x3d\xc7\x7a\xf1\x29\x1a\xda\x49\x71\x78\xca\xdf\xef\xe4\x6c\xab\xc1\x2e\x6f\x9a\x7d\xf5\x75\x8b\x7e\xa6\x04\x13\x99\x84\x5b\x98\x10\x23\x1b\x71\x4b\xcd\xcf\xc6\xe0\x2a\x1e\xdb\xb3\xdc\x66\x8b\x3f\xfe\xac\x08\x9e\xff\x27\x10\xcd\x77\x27\x4b\x17\x33\xbf\xf2\x02\x13\xc6\x29\xda\xc4\xa9\xf4\xdb\x59\x76\x6d\x2a\x8f\x94\x5b\x05\x31\x2a\xbc\x3c\x81\x90\xbd\xfd\x3b\x33\xbe\x92\xcb\xf5\xad\x30\x99\x01\x36\x79\x21\x6f\x18\xa1\x03\x5d\xef\x46\x1d\xae\x16\xd5\xd5\xb2\xc3\xbb\x33\xc4\xcb\x82\x48\x34\xd6\x59\x6b\x28\xca\x83\x1e\xca\xee\x4a\x03\x45\xc6\x8f\x37\x31\x50\xf0\xca\x4c\x85\x75\x7b\x14\xf2\xfc\x4d\x56\xd9\xaa\xda\xda\xae\xe3\xa8\x5b\xe7\xa4\x58\x97\xa1\x8e\x8a\xae\x7e\xbc\x08\xdf\x5f\xb8\xea\x7b\xdc\x2a\x93\xcd\x56\x37\x8b\x2e\xb9\x33\xcb\xcf\x8f\xef\x1f\x41\x59\xc2\xdd\xca\x0b\xa1\xeb\xd6\xb2\x4a\xed\x0c\xf8\xf9\x19\xf7\x97\x21\xa9\xac\x82\x7e\x79\x39\x51\x7f\x72\x64\xd6\x45\x76\x3d\xf6\x0f\xd9\x97\x7f\x52\xe9\xf5\x13\xcb\x10\xda\x84\x5f\x74\x79\xfd\x1b\x00\x00\xff\xff\xc2\x92\x0a\x40\x7c\x06\x00\x00")

func templatesConnectionConnectTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesConnectionConnectTemplate,
		"templates/connection/connect.template",
	)
}

func templatesConnectionConnectTemplate() (*asset, error) {
	bytes, err := templatesConnectionConnectTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/connection/connect.template", size: 1660, mode: os.FileMode(420), modTime: time.Unix(1490219988, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesConnectionConnectionTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\x41\x4f\xdc\x4e\x0c\xc5\xef\xfb\x29\x9e\x10\xc7\xfd\x87\xc3\xff\x86\xd4\x03\x62\x11\x42\x20\x40\xed\x4a\x55\x6f\x78\x33\x26\x19\x98\xd8\xd1\x8c\xb3\xdb\x15\xca\x77\xaf\x66\x92\x6d\xd3\xf6\xda\xe3\x78\xec\xf7\x6c\xff\xdc\x53\xfd\x4e\x0d\xa3\x56\x11\xae\xcd\xab\xac\x56\x17\x17\xb8\x56\xc7\x68\x58\x38\x92\xb1\xc3\xee\x08\x6b\x19\xf7\xda\x91\x38\xdc\x2a\xbe\x6c\xee\x71\x3b\x7d\x6b\xac\xb0\x79\xc2\xe3\xd3\x16\x37\x9b\xbb\xed\x5c\x7e\x52\x83\x4f\xa5\xf4\x97\x3e\x74\xf7\xc6\xb5\xc1\x5a\xb2\xf2\xe5\x78\xcf\x41\x7b\x8e\x38\xf8\x10\x40\xce\xc1\x14\x87\x96\x05\x5e\x8c\x9b\x48\xe6\xa5\x01\xc1\x5a\x1f\x1d\x7a\x8a\x76\xcc\x26\x57\xcf\x77\x15\xae\x9c\x03\xc9\x11\xef\x5e\x1c\xf4\x15\x41\xa5\x41\xf0\x7b\x76\xd0\x88\x7a\x48\xa6\x1d\xfe\x3f\x95\xfd\xdd\x46\xca\x1e\x9a\xa5\x13\x92\xc5\xa1\xb6\x2a\x6b\xdf\x50\xdd\xc2\x4b\x32\x92\x9a\xb3\xee\x22\x01\x5f\xef\x1e\x1e\xb0\x63\xa4\x96\x22\x3b\x34\x41\x77\x14\xc2\x71\x8d\xa4\x25\x3c\x44\xce\x13\xe4\x41\xba\xc1\xf8\x3b\xa7\xdc\x0b\x99\x76\xbe\xce\xe2\x79\x56\xca\x3d\xa4\x3c\x65\x64\x08\xb3\x63\x57\xad\xec\xd8\xf3\x72\x77\xb3\xdf\xc7\x0a\x00\xae\xcb\x2c\xcf\x14\xa9\x4b\x25\xf0\xf1\xf1\x1f\x22\x49\xc3\x38\x97\x35\xce\x7b\x5c\x7e\x42\xb5\xa8\x1e\xc7\x92\x36\xa5\xe2\xbc\xaf\x1e\xa9\x63\x8c\xe3\xfc\xda\x66\xb3\x71\xc4\xcb\x5b\x52\xb9\x3c\x9b\x82\x9f\xe9\x30\x67\x9d\xbd\xfc\x34\x61\x71\x59\x6c\x2c\x68\x37\x64\x74\x82\x3a\xf7\x57\x48\xb6\x1a\xdc\x14\x8d\x74\x58\xee\xb9\x2f\x1d\xe3\x35\x6a\x57\xbe\xbd\xd4\xda\x65\xa0\x1d\xa7\x44\x0d\x67\xd1\x6d\xde\x6e\xa1\xbf\x63\xd8\x10\x85\xdd\xc4\x85\x10\x99\xc2\x52\x6e\x3e\xc5\x7c\x80\x71\x10\xf3\x1d\x57\xf8\xa6\x03\x52\xab\x43\x70\x10\xde\x73\x84\xf3\x91\x6b\x0b\xe5\x4c\xf2\x72\x33\x8e\x21\xf1\x44\x71\x02\xbf\x86\x4a\x98\xb4\x22\x37\x43\xa0\xb8\x70\xa9\x70\x95\x90\x86\xba\x5d\x83\xf6\xea\x5d\x66\x59\x6e\x50\x8e\xe8\x63\xe6\x67\x9e\x53\x56\xf5\x36\x63\x2b\x7b\xf9\x0d\xd8\x82\xcf\x9f\x6c\xfe\x39\x9a\x1f\x01\x00\x00\xff\xff\x86\xbf\x40\xa5\xc7\x03\x00\x00")

func templatesConnectionConnectionTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesConnectionConnectionTemplate,
		"templates/connection/connection.template",
	)
}

func templatesConnectionConnectionTemplate() (*asset, error) {
	bytes, err := templatesConnectionConnectionTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/connection/connection.template", size: 967, mode: os.FileMode(420), modTime: time.Unix(1490288327, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServerHttpHandler_xTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x56\xd1\x6f\xdb\xb8\x0f\x7e\xb6\xff\x0a\xfe\x0c\xfc\x76\xf6\x90\xd9\xd8\x1e\x73\x28\x0e\x5b\x5b\x6c\xc5\xb6\xb6\x68\x73\xdb\xc3\xe1\xb0\x29\x32\x63\xeb\x22\x4b\x3e\x89\xae\x2f\x08\xf2\xbf\x1f\x28\x39\x69\x37\x64\xdb\x6d\x2f\xeb\x53\x2d\x91\xfc\x3e\x8a\x1f\xc9\xf4\x42\xae\x45\x83\xd0\x12\xf5\x69\x5a\x55\x70\x6a\x6b\x84\x06\x0d\x3a\x41\x58\xc3\x72\x03\xd4\x22\xbc\xb6\x9d\x30\x35\xbc\xb4\x70\x7b\xf6\x1a\x5e\xc6\x6b\xeb\x4a\x38\xbb\x82\xcb\xab\x05\x9c\x9f\x5d\x2c\xd2\x54\x75\xbd\x75\x04\x79\x9a\x64\xab\x8e\xb2\x34\xc9\xd0\x48\x5b\x2b\xd3\x54\x7f\x79\x6b\xb2\x14\x00\x20\x53\xb6\x52\x76\x20\xa5\xa7\x6f\x83\x54\x31\x7c\x96\xc6\xef\xed\x16\xca\xeb\x48\xeb\xc6\x5a\x82\xdd\xae\x12\x92\x94\x35\x3e\xfb\xa2\x81\xb4\xc6\x60\x30\x8a\x36\xbd\xb6\x0d\x64\x8d\xa2\x76\x58\x96\xd2\x76\xd5\x3a\x24\x50\xf5\x7a\x68\x94\x79\xe2\xeb\xf5\x93\xc6\x3e\xab\xb4\x6d\xa6\x98\xdf\x34\xed\xd0\x7b\xd1\x60\x96\x16\xe1\x99\x98\xc3\xa5\xe8\x10\x76\xbb\x57\xc2\xd4\x1a\x1d\x28\x0f\x02\xda\xf8\x91\xd2\xa6\xc7\x63\x46\x9e\xdc\x20\x09\xb6\x69\x22\xe1\xf1\x3d\xeb\xf2\x54\xc8\x16\xd3\x5d\x88\x7d\x89\xe3\x11\x4f\x87\x34\x38\xc3\x18\x06\xc7\x23\xa1\xd3\xd5\x60\xe4\x71\xdf\xfc\x08\x56\x01\x8f\x8f\x80\x6c\xd3\x24\xe2\xc0\xa3\xfd\xed\xe1\x72\x9b\x26\x89\x9c\x83\x9c\xa5\xc9\x6e\x62\x7a\x8b\xee\x0e\x5f\x2d\x16\xd7\x53\xde\x3e\x88\xc5\xe1\xdf\x03\x7a\xf2\x91\x51\xde\x1e\x43\x2a\xee\x7d\xf3\x31\xa8\xaf\xbc\x41\xdf\x5b\xe3\xf1\xbd\x53\x84\x6e\x06\x0e\x1e\x4f\xe7\x21\x5c\x11\xc9\x45\x1b\x98\x9f\xc0\xa3\xa9\x24\x07\x47\x26\xf8\x16\x49\xcc\xe1\x8f\x3f\x97\x1b\xc2\xfc\xe3\x76\xf7\xb1\x98\xa5\x49\x72\x4b\x82\x06\x3f\x87\xcc\xae\xb3\x40\x3f\x59\xce\x00\x9d\xe3\x30\x51\x8b\xe5\x0d\x8a\xfa\xb9\xd6\xb9\x2b\x5f\xd8\x7a\x53\xa4\x49\x55\xc1\xe2\xea\xec\x0a\x06\x8f\x20\x40\xab\x4e\x11\x38\x14\x35\x3a\x20\x0b\xbd\xc3\x3b\x34\x7c\xe2\xed\xe0\x24\x82\x20\x12\x72\xed\x7f\x4b\x13\xb5\x0a\xa1\xff\x77\x02\x46\x69\x26\x9d\x8c\x65\xc8\xe9\x55\xf0\xce\x43\x52\x91\xd1\x85\x21\x74\x46\xe8\xf0\x16\xee\xdc\x39\xeb\x8a\x34\x49\x1c\xf6\x7a\xf3\x5e\x51\x1b\x4e\xf2\x7d\xd2\x33\x18\x03\xeb\x68\xc2\x55\x0a\xa9\x44\xc6\xe5\xa9\xb6\x1e\xf3\x22\xe0\xbb\xf2\x2d\x52\x6b\x6b\x26\x91\x5d\x5f\xdd\x2e\xb2\xaf\xf3\x88\xd6\x97\x96\x9e\x6b\x6d\x47\xac\xbf\x45\x62\xd5\x51\x19\x8e\x57\x79\xd6\x45\xa4\xff\x7b\x6e\x80\xc1\xf8\xa1\xe7\x21\x80\x35\xac\xac\x83\xd8\x44\xb0\xef\xdf\xd9\x81\x59\xf1\x59\x12\x4b\x5b\x6f\x3e\x29\x2a\xe7\xf4\xee\xe9\x76\x97\x26\xdd\x27\xe7\xef\x9e\x72\x26\x7c\x3b\x87\x47\xec\x15\xeb\x39\x3d\xfa\xfc\x04\x78\xd2\x94\xbf\x9b\x4e\x38\xdf\x0a\x9d\x2f\x67\xd0\x15\xbf\xfe\xe7\x8a\xbc\x10\xf5\x5e\x6f\xdf\x5d\x88\xaa\x82\x03\x6e\x68\x84\x90\x94\x32\x64\x63\x5b\xa8\xa6\xa5\x69\x00\x04\xe3\xf7\x08\xd2\x0e\xba\x06\x71\x67\x55\x1d\x6c\x9e\x01\xfe\x23\xd1\xfb\x90\x05\xec\x63\x49\xa1\xb5\x07\x65\xa0\x45\x87\x30\x2a\x6a\x59\x91\x96\xc0\xae\xc0\x8f\x8a\x64\xfb\x44\x0a\xaf\x4c\x03\xd6\x00\x4f\x1e\x1f\xe2\x2f\x07\x62\x27\x6a\x95\x07\x29\x98\x36\x43\xf4\xe8\x56\xd6\x75\xc2\x48\x84\x46\x28\xc3\x65\x33\x96\x80\x5a\x41\xd0\x38\x14\x34\x03\x9e\xf5\x8a\x7e\xf1\xa0\x99\x4b\xb3\x1f\xf7\x20\x79\x39\x90\x85\x4e\x28\x43\x42\x99\x00\x43\x16\x6a\x0b\x8a\x22\xd0\x28\x36\xe5\x7d\xf3\xa8\x15\x8c\x08\x7e\xf0\x3d\xca\xc9\x20\x8c\xc9\xa5\x25\xd2\x68\x50\xae\x67\xd0\x3b\xbb\x52\x1a\x39\x02\xe3\xfa\x51\xf4\xb0\x14\x72\x0d\xd3\xbb\xdd\x67\x88\x20\xfa\xde\x59\x21\xdb\x34\x51\xa6\x1f\x28\x28\x63\x12\x57\xf9\x60\xc8\x5c\xf0\xe5\xf6\xab\xb2\xe0\x96\x09\x66\x33\x08\xa1\xbe\x43\x23\x3f\xda\xb5\x30\xfd\x3d\x90\x8c\xac\x43\x0a\x0f\x86\xf3\x99\x20\xf1\x6d\xe6\xa7\x07\x87\x19\xc8\xfa\xe7\x70\xd7\x4c\x8e\x17\x6d\x79\x89\xe3\x8b\x61\xb5\x42\x87\xf5\x1b\xdb\x34\xe8\xf2\xe8\xc0\x69\x1d\xe6\x6c\x5b\xca\xf2\x25\x52\x2e\xeb\x19\xe8\x78\xff\xf9\xa4\xdc\x83\x7c\x3f\xfb\x48\xb7\x7c\x63\x1b\x38\x01\x5d\xde\x92\x53\xa6\xc9\x7f\x24\x33\xfe\x37\xf6\xf2\xb9\x90\xed\x7e\x97\x81\x41\xac\xf7\xbb\x57\x87\x1c\x59\x9e\x52\xf4\x34\x38\x8c\xbd\x62\x07\xea\x07\xba\xd7\x7e\x67\xef\x30\x4a\x9e\x2c\x08\xf0\x1b\x23\xcb\x6b\x6b\x75\x50\x79\xe3\xc4\x12\xac\x41\x58\x39\xdb\xb1\xcc\x1d\x02\x32\x20\xa9\x2e\xb4\x98\x17\x77\xc8\xed\x2c\xb4\xb6\x92\xd7\x4a\x55\x71\x9b\x86\x3b\x61\x36\xec\xca\xdb\x88\x9b\x9e\x31\xe6\x70\x66\x43\x1b\x37\x16\x44\x1d\x8e\x95\x79\x80\xc9\x43\xc3\x0e\x04\x83\xa9\xd1\x79\x12\x26\x98\xb4\x76\x64\xec\x4d\x88\x3e\x5a\xb7\x0e\xdc\xc2\xa9\x3d\xf4\x25\x93\x41\xe4\x62\x4d\x81\x19\x7b\x54\x5a\xf3\x58\x1f\x84\xd6\x1b\xe8\xc4\x9a\x97\x64\xad\x82\x08\x78\xb2\xcc\x0b\xb8\xe0\x47\x21\xa7\xe4\x7a\x03\x4a\x39\x39\x8d\x85\x56\x90\x87\xb1\xdd\x3c\x98\x06\xe1\xb9\x18\x99\x13\x88\x9f\x97\xe7\x69\x12\x1b\x9b\xb5\x73\xa4\xc5\x9f\x87\x23\xee\x94\xf8\xee\x07\x9d\x45\xdb\xf2\x66\x30\x79\xd4\x9f\x8a\x5d\xae\x8b\x9f\xb0\x9a\xbf\x2c\xcc\xc3\xd5\x55\xa0\x0f\x27\x07\xfd\x04\x08\xce\xe4\xd3\x95\xb7\xd8\xf4\x38\x87\x2c\xa6\xf7\x21\xfc\xfa\xe0\xdf\x32\xc9\x3b\x74\x5e\x59\x33\x87\xec\xee\x69\x38\x88\xbb\xf1\xc0\x6c\xff\x73\xe7\x03\x4c\xa3\xe4\xed\x34\x48\x02\x4e\x01\xa1\x26\x2c\xbf\xb8\x07\x5a\xae\xf0\x88\x20\x85\x09\x63\x7d\x15\xeb\x84\xce\xb1\x08\xbf\xf8\x5c\x57\xaf\x8b\xc3\x6d\xbe\x2c\xd2\xdd\xbf\x01\x00\x00\xff\xff\xe2\x4a\x53\x6c\x59\x0c\x00\x00")

func templatesServerHttpHandler_xTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerHttpHandler_xTemplate,
		"templates/server/http/handler_x.template",
	)
}

func templatesServerHttpHandler_xTemplate() (*asset, error) {
	bytes, err := templatesServerHttpHandler_xTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/http/handler_x.template", size: 3161, mode: os.FileMode(420), modTime: time.Unix(1490810515, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServerHttpServerTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\x5d\x6f\xdb\x46\x10\x7c\xe6\xfd\x8a\x01\x61\x14\xa4\xc1\x92\x75\x1f\x85\x18\x45\x12\x05\x71\x91\xfa\x03\x96\x90\x3c\x06\x27\x72\x25\x5e\x4c\xde\xb1\xf7\x61\x4a\x10\xf8\xdf\x8b\x3d\xda\x92\x5e\xeb\x27\x6b\xe7\x66\x96\x3b\xbb\x33\xc8\xfa\x45\xee\x08\xad\xf7\x83\x10\x55\x85\xcf\xa6\x21\xec\x48\x93\x95\x9e\x1a\x6c\x0e\xf0\x2d\xe1\x9b\xe9\xa5\x6e\xf0\xd5\x60\xb5\xfc\x86\xaf\x33\x6c\x6c\x89\xe5\x23\x1e\x1e\xd7\xf8\xb2\xfc\x7b\x2d\x84\xea\x07\x63\x3d\x32\x91\xa4\x9a\x7c\xc5\x9a\xa9\x48\x52\xaf\x7a\x4a\x85\x48\xd2\xe3\x11\xe5\xd3\xdc\xf0\xd9\x18\x8f\x69\xaa\x6a\xa3\x35\xd5\x5e\x19\x9d\x8a\x3c\x7e\xc0\x03\x8d\x2b\xb2\xaf\x64\x61\xc9\x07\xab\x1d\x24\x34\x8d\xf1\x0b\xe1\x22\x22\xb6\x41\xd7\xe7\x87\x59\x8d\xeb\xb3\x4e\xf9\x59\xd6\x2d\xe5\xc8\xae\x99\x51\xce\x4f\x0a\x90\xb5\xc6\xe6\x38\x8a\xa4\xaa\xb0\x7e\x5c\x3e\x82\x64\xdd\x62\xe8\xc2\x4e\x69\x68\xa2\x86\x1b\x05\xad\xfe\x0d\x84\x38\x86\x37\xa0\xfd\x60\x1c\x45\xca\x26\x78\x28\xed\xc9\x6a\xd9\x75\x87\x02\xb5\xd4\x90\x5d\x87\xe0\x08\x12\xb5\xe9\x7b\xa3\x23\x4f\x24\xb2\x69\x2c\x16\xb7\x48\x17\x3c\xf0\xdd\x7a\xfd\x54\x3e\xb1\xe0\x34\xa5\xe7\xee\xbd\x7c\x21\xb6\xd6\x11\x6a\xa3\xb7\x6a\x17\xac\xdc\x74\x04\x67\x7a\x6a\xcd\x28\x12\x4b\xb2\x59\xab\x9e\x4c\xf0\x2c\xc6\x26\x96\x2b\xaa\x8d\x6e\x70\x3d\xff\x5a\x06\x2b\x79\xe2\xec\xd4\xe6\xf9\xcc\x99\xa6\x5c\x24\xa3\x55\x9e\xfe\xaf\xc8\x8f\x0b\x12\xab\x88\xa4\x0f\x7b\x66\x47\x3f\xdf\x5d\xbf\x0f\xfb\x2c\x17\x00\x50\x55\x30\x9a\xb0\x35\x76\xb6\x54\xc6\x35\x44\xe8\x78\xfc\x1d\x56\xea\x1d\xe1\x4a\x17\xb8\x1a\x58\xa5\xfc\x18\x71\x87\x69\x8a\x6f\xfa\xb0\x2f\xef\xa4\x6e\x3a\xca\xd2\x6a\xe6\xba\xea\x78\xc4\xd5\x50\x3e\xcb\xf1\x41\xf6\xc4\xc6\x15\xbc\xee\xb9\xca\xa5\x69\x9a\x29\x36\xab\xf3\xfc\xd4\x8a\x74\xc3\xaa\x22\x71\xdc\xe8\xb7\x8b\xfd\x1f\x45\x92\x7c\x6c\x1a\xbb\xc0\xf9\x8f\xd7\x54\x88\x24\x79\x53\x3a\x41\x7d\xd8\x73\xf9\xc2\xcb\x08\x5d\xec\x83\xe1\x4b\x97\x18\xbf\xb4\x9a\xf1\x7b\xb9\xbf\x23\xd9\x90\xfd\x74\xf0\xe4\x16\xb8\xc1\x87\x0f\xf8\xf3\x8f\x42\x24\x13\xef\x96\x2f\x1b\xae\x80\x56\x9d\x98\xe2\xdd\xff\xa3\x76\xad\xc7\x68\xe5\x30\x90\x85\xb4\x26\xe8\xe6\x2d\x02\x4a\xef\x20\xf5\x7c\xc2\x18\x95\x6f\x63\x26\x2d\xb9\xc1\x68\x47\x30\x9b\x5f\x54\x7b\x18\xce\x4c\xcc\x71\x8c\x87\xa5\xa1\x3b\xfc\x50\xbe\xfd\xc2\xb4\xec\xf4\xfa\xba\x27\xe7\xe4\x8e\xca\xe7\xb7\x4a\x81\x39\x5c\xa7\x42\x1c\x6d\x8e\xcc\x45\x6c\xde\x05\xca\xa8\x87\x5b\x86\xe6\xff\xb3\xfc\x02\x5d\x79\xe9\x83\xc3\x2d\xd2\x48\x4d\x45\xd2\xc7\x65\xbc\x77\xfd\x7e\xc3\xbb\xf8\x64\x9a\xc3\xe2\x34\x01\xfb\xb5\x3e\x0c\xb4\x40\x3a\x1f\xc0\x4f\x7a\x25\xed\x53\xae\x7f\x27\xeb\x94\xd1\x0b\xa4\xaf\x37\xe9\xec\xde\xa6\xc0\x4f\xd6\xfc\xe5\x8c\x2e\xef\xa5\x75\xad\xec\xb2\x3e\xe7\x43\x5c\xb7\x64\x09\xca\x41\x1b\xdf\xb2\x6d\x23\xc5\xa4\x36\x06\x6a\x0b\xdf\x2a\x87\xad\x54\x9d\xfb\x4b\x24\xe3\x7c\xe8\xd9\x26\x17\xd3\x7f\x01\x00\x00\xff\xff\x5e\xcc\x55\x90\x06\x05\x00\x00")

func templatesServerHttpServerTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerHttpServerTemplate,
		"templates/server/http/server.template",
	)
}

func templatesServerHttpServerTemplate() (*asset, error) {
	bytes, err := templatesServerHttpServerTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/http/server.template", size: 1286, mode: os.FileMode(420), modTime: time.Unix(1490810497, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTriggersTrigger_xTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x4b\x6f\xe3\x36\x10\x3e\x5b\xbf\x62\x2a\xa4\x0b\x79\x21\xcb\xd8\x1e\xd5\xcd\xa5\xf5\x62\x11\x6c\x36\x29\xb2\x41\x7a\xec\xd2\xd2\x48\xe6\x86\xe2\xa8\x24\x15\xd7\x35\xf4\xdf\x0b\x3e\xe4\x47\xa2\x38\x41\x80\xe6\x10\xd0\x9c\xe1\xf0\xfb\xbe\x79\x50\x2d\x2b\xee\x59\x8d\x60\x14\xaf\x6b\x54\x3a\x8a\xe6\x73\xf8\x9d\x4a\x84\x1a\x25\x2a\x66\xb0\x84\xe5\x06\xcc\x0a\xe1\x0b\x35\x4c\x96\xf0\x99\xe0\xdb\xe2\x0b\x7c\xf6\x66\x52\x19\x2c\xae\xe1\xea\xfa\x16\x3e\x2d\x2e\x6e\xa3\x88\x37\x2d\x29\x03\x49\x04\x00\xd0\x0a\xaa\x21\xae\xb9\x59\x75\xcb\xac\xa0\x66\x7e\xef\x62\xcc\x5b\xd1\xd5\x5c\xce\x74\x79\x3f\xab\xe9\x97\xb9\xa0\x3a\x76\xfe\x2f\xbb\x96\x5c\xb7\xcc\x14\x2b\x54\xaf\x3d\xd1\xa0\xd6\xac\xc6\x38\x9a\x46\xd1\x76\x0b\x67\x92\x35\x08\xf9\x39\x64\x57\x76\xd1\xf7\xd1\x76\x3b\x03\xc5\x64\x8d\x70\x26\x53\x38\x6b\x9d\xf1\x42\xb6\x9d\x19\xac\xbc\x82\xb3\x36\xfb\x24\xbb\xe6\x92\x1b\x54\x4c\x58\xc3\x7c\x0e\xde\xc9\xee\xeb\xc3\x28\x3c\x85\x33\x77\xc5\xe8\xa1\x1d\x86\xbe\xbf\xf5\xa2\xbb\x30\x76\x1b\x07\x4c\xc0\x35\x30\x09\x28\xbb\x26\xe4\xe0\x81\x89\x0e\xa3\x82\xa4\x36\xbb\x08\xa7\x02\x9c\x83\xff\x1d\xee\xbe\xb3\xc7\x07\x3a\x28\xcb\xd3\xcb\x27\x6a\x5c\x77\xe6\x15\x72\x04\xaf\x37\xea\xb1\x63\xe3\xc3\xbc\x41\x0f\x38\x19\xe2\xcd\x8a\x04\x90\x2e\xd0\xb1\xe4\x50\x62\xc5\x25\x6a\xd7\x1e\xdc\xed\x54\xa4\xdc\xaf\xe1\xc0\x1e\x53\x64\x36\xed\xd8\xbe\x8f\xa4\x8d\xea\x0a\x03\x5b\x57\xd4\x87\x39\x80\xe3\x92\xec\xfb\xe0\x61\xc5\x1c\xa8\xf9\x5f\xb7\x36\x7e\xdf\xc3\xf7\x1f\x9a\x64\x1e\xfb\xcd\x1b\xb6\x0e\x5e\xf1\xf7\x5d\xec\x40\xec\x19\x6a\x21\x8d\x87\xdc\xc8\x6f\x3d\x26\xf7\x22\xb7\x10\xea\x15\xe4\xf6\x15\xf6\x3f\xd1\xdb\x83\x02\x36\x4c\xbb\xe7\x60\x1f\x03\xfe\xbb\xc3\x0e\xa1\x58\x31\x09\xef\x9f\xa3\xe8\x1c\xf7\xb3\xe9\x60\x99\x2d\x76\x4b\xe7\xd4\xa0\x61\x10\x66\x52\x16\x62\x7c\x7a\x40\x69\xbe\xa2\x61\x01\xf3\x15\xae\x47\x40\x29\x34\x9d\x92\x1a\x18\x48\x5c\xc3\x76\xfb\xd8\xde\x2a\x6a\x51\x89\x0d\x70\xc9\x0d\x67\x82\xff\x8b\x25\xd8\x89\xad\x90\x95\x1b\x30\x04\xaa\x93\x59\x54\x75\xb2\x18\xbf\x21\x29\xc7\x71\xa7\xa7\x41\x4f\xc7\x64\x09\xda\x79\xcc\xf0\xee\xa9\x83\xb7\xef\xf4\xcd\xa1\x61\xf7\x98\x9c\x56\x39\x85\x0f\xd3\x74\x77\x6e\x8f\x35\x87\x72\xbf\x6d\xb1\xe6\xee\xbf\xdf\x1b\x0a\xe1\x9b\x2d\x8b\x35\x17\x02\x74\xb7\x6c\xb8\x01\xf6\x7c\xc1\x92\x34\x14\x9a\xda\xa0\x92\x4c\x78\x90\x29\xac\x57\xbc\x58\x59\x8b\x84\x65\x57\x55\xa8\x34\x04\x4f\xfc\xe7\xd0\xd3\xab\x9c\x98\x31\x2e\x53\x07\x25\x21\x1f\xbc\x62\x05\x6e\xfb\x69\xd0\xcb\x64\xbe\xda\x3e\xce\x80\xb2\xe4\xfd\x33\xbd\x39\x0d\x94\x6e\x90\x05\x4a\x2d\xb5\x76\x40\x72\x83\x0d\x50\x55\x8d\x62\x37\x04\x4b\x84\x15\x93\x25\x96\x6f\x41\x6d\x6f\x4b\x46\x93\x1d\x54\x3b\x4a\xf9\xc7\x59\xe0\x32\xc8\x6f\xa8\xf5\x58\x0b\x41\x1a\x4f\xa8\xeb\x09\x29\xb4\xf5\xe5\x4a\xfd\x07\x2d\x35\x54\x8a\x1a\x40\x7b\x80\xcb\x3a\x7b\x41\x5f\x43\x6d\x32\x48\xea\xae\x4b\x02\x98\xe9\x0e\x0d\x53\xc6\x12\xba\xa4\x01\xd6\x52\x50\x71\x9f\xba\x66\xe1\xb2\x86\x4e\x1a\x2e\x6c\xaf\x71\x31\x54\xbe\x7d\x85\x14\x16\xc8\x1f\xb0\xb4\x3d\xc1\xa4\x75\x7c\x4a\x04\xd6\x4c\xfb\x6b\xcb\x97\x70\x1e\xa0\x48\x84\xfb\x5c\xca\x2e\xc9\x1b\x51\x29\x1a\xda\xa8\x72\xab\x89\x5d\x86\x51\x9c\x9f\x83\xc9\x7c\x46\x76\x95\xcf\xab\xc1\x7a\x7e\xee\x70\xef\x7b\xcc\xfe\xcd\xe7\x70\xbb\xf2\x83\x4c\xa2\x38\x00\x99\xc2\x1a\xa1\x26\xe3\x9e\xd8\xa6\x35\x9b\x99\xdf\x9f\x59\x2d\x52\xd0\x64\xed\x4b\xc6\x85\x0d\x0f\x6b\x6e\x56\x20\x09\xb8\xd6\x1d\xea\xa3\x1b\x42\xea\x25\x17\xbb\xed\x3e\xda\x1b\x75\x4b\x52\xbb\x0f\x81\xb1\x51\x72\x0c\xd6\x4e\xfb\x1c\xe2\x38\xb5\xb0\xff\x44\x28\x79\x09\x92\x0c\x68\x34\x4e\x71\x37\xb9\xb9\x74\x6b\xfb\x39\xba\xc4\x8a\x14\xa6\xa0\x11\x1b\xd7\x93\x24\xc5\xc6\xd6\xbb\x7b\xb3\x50\x1b\x9b\x2a\x52\x20\xb0\x66\xc5\x06\x24\x62\x79\x8c\xfd\x62\x71\xea\xba\x8b\xc5\xd3\xcb\x8e\x8e\x7f\x56\xd4\xb5\xa7\x63\x04\x97\x17\x02\xf9\x5e\xca\x43\x26\xd3\x23\xdb\x57\x37\xda\x4c\xe6\x86\x1b\xb8\x0f\xf5\x76\x13\x0a\xb0\xa0\xc6\x52\x74\x93\xda\x10\xb4\x4c\x6b\xb0\x43\x4e\x90\xad\x51\x1a\x9e\xf1\x9a\xbc\x97\xd3\x7f\x24\x4b\xcd\x61\x7a\xee\x3e\x1c\x27\xe5\x0e\x95\xe6\x24\x73\x88\x1f\x3e\xc4\xe9\x58\xbe\xc2\xc3\xfa\x97\x6b\xde\x47\x2e\xbf\x51\xb9\xc9\xe1\xdd\x50\x07\xe9\xc1\xed\x93\x09\xaf\x6c\xc1\xfb\xb2\x3e\x78\x84\xdc\xa4\x6c\xa6\xbf\x3a\xe3\x4f\x43\x55\x4f\x26\x13\xdb\x29\x7f\x28\x2e\x4d\x95\xc4\x37\xb6\x27\xf1\x01\xcb\xd0\x33\x1a\xa5\x6b\xe1\x00\x66\xa0\x93\xc3\xcf\x3a\x4e\xad\xcf\xd4\x46\x08\xc5\x8a\x4a\x45\x93\x49\x1f\x4d\xfa\xa8\xff\x2f\x00\x00\xff\xff\xb7\x8f\x37\x5e\x0d\x0d\x00\x00")

func templatesTriggersTrigger_xTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesTriggersTrigger_xTemplate,
		"templates/triggers/trigger_x.template",
	)
}

func templatesTriggersTrigger_xTemplate() (*asset, error) {
	bytes, err := templatesTriggersTrigger_xTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/triggers/trigger_x.template", size: 3341, mode: os.FileMode(420), modTime: time.Unix(1490760405, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTriggersTrigger_x_runTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x54\x4d\x6b\xdb\x40\x10\xbd\xeb\x57\x3c\x7c\x28\x52\x70\xa4\xd0\x63\x20\x85\x92\x53\x20\x4d\x42\x1a\x0a\xa1\xf4\xb0\x91\xc6\xf2\xe2\xd5\x8c\xd8\x8f\x14\x63\xf4\xdf\xcb\xae\x24\xd7\x21\x89\x7b\x29\x14\xea\x83\xd1\x6a\xe6\xcd\xc7\x7b\x6f\xd5\xab\x7a\xa3\x5a\x82\xb7\xba\x6d\xc9\xba\x2c\xd3\x5d\x2f\xd6\x23\xcf\x00\xa0\x37\xd2\x62\xd1\x6a\xbf\x0e\x4f\x65\x2d\x5d\xb5\x91\x4e\x71\x53\xf5\x26\xb4\x9a\x4f\x5d\xb3\x39\x6d\xe5\x63\x65\xa4\x5d\xa4\xfc\xc5\x6e\x87\xf2\x6e\xac\x79\x2f\xe2\x31\x0c\x55\x2d\xcc\x54\x7b\x2d\xbc\xc8\x8a\x2c\xab\x2a\x7c\x53\x46\x37\xca\x13\x7e\x6a\x63\xf0\x3c\x9f\xfc\x9a\xa0\xb9\x0f\x1e\xda\xa1\xb7\xd2\x93\x35\x5b\x38\xf2\xa1\x2f\xb3\x55\xe0\x1a\xb9\xc6\x49\xec\x70\xa3\x3a\xc2\x30\x3c\x8c\x43\x5f\x45\x4c\xb1\xaf\x9a\x17\xf8\xfe\x83\xac\x15\x8b\x5d\x1a\x2a\x3d\x3b\x9c\x5f\xa0\x53\x1b\xca\xa7\xe0\x12\x67\x45\x0a\xa7\xbf\xaa\xc2\x65\x70\x5e\xba\x79\x1c\x2d\x8c\x5a\x1a\xc2\x9a\x2c\xcd\x29\x9f\xfb\x9e\xb8\x99\x0b\x2a\x07\x26\x6a\xa8\xc9\xe6\xb8\x25\x1f\x2c\xa7\x93\x5e\xc1\x10\xe7\x63\x6a\x81\x4f\x38\x9b\xa6\x89\xbf\x31\x6f\xaa\x93\xde\x0e\xd9\xc1\x7b\xd6\x26\x1b\xfe\xc4\x94\x04\x7f\x94\x2a\x79\x8b\xaa\xdb\x04\xfa\x3f\xb9\xba\x0f\x0c\x1b\xd8\x25\x76\x26\x3f\x43\x71\x83\x27\x23\xf5\xc6\x21\xb0\xd7\xe6\x45\xb0\x17\x63\x34\xb7\x91\xc3\x5a\xba\xde\x90\x27\x88\x9d\x5b\x8d\x34\xfa\xb7\x68\x2c\x62\xb3\x3c\x1a\x1b\x27\xbf\xed\x5d\x5e\xee\x1f\x97\x93\x91\xf7\xd8\x97\x66\x5d\x22\xde\xab\x78\xb9\xca\x6b\x19\x0b\x1e\x8a\x50\x55\xf8\xa2\x36\x04\x17\x2c\xc1\x0b\x6e\x6f\xae\x1f\x11\x1c\x45\x54\x79\x67\x35\x7b\xc3\x69\xb3\xfd\x79\x15\xd3\x62\x4d\xc5\x5b\xd4\xa3\x38\x1d\x39\xa7\x5a\x72\xcb\x94\xda\x08\x58\x7c\xaa\x12\x29\x60\xb1\x9d\x32\x68\x13\xaa\x25\x9b\xfa\xae\xf6\x13\x4c\x53\x3c\x4a\xb0\x07\xca\x1e\x86\xbc\xee\xa8\xfc\x6a\x88\xfa\x3c\xad\x5a\x5e\xb1\x27\xfb\xac\x4c\x11\xa3\x57\x2b\x6c\x23\x76\x66\x3a\x9a\xc9\xa5\xe6\xb2\x82\x82\x8b\x38\xe8\x09\xb1\x44\xe0\x5a\xba\x8e\xd8\xc3\xaf\xb5\x83\xd1\x4c\xc7\x94\x7e\x20\xe7\x5f\x49\xbd\xc4\x53\xf0\x68\x84\x5c\x5a\x34\x89\x9e\x36\x17\x36\xdb\xd7\xc6\x98\xb5\x17\xa6\xb4\xcb\x71\xb9\x63\xc7\xbf\xab\x77\xfe\xee\xed\x5c\x8e\x5e\x28\xfe\xb1\x19\xa6\xef\xcb\xf9\x05\x3e\xbc\x37\xe9\x6e\xc8\x8e\x18\x65\x92\x4d\xa6\xa5\x92\x7c\xbf\x02\x00\x00\xff\xff\x2e\x80\x1f\x75\x6f\x06\x00\x00")

func templatesTriggersTrigger_x_runTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesTriggersTrigger_x_runTemplate,
		"templates/triggers/trigger_x_run.template",
	)
}

func templatesTriggersTrigger_x_runTemplate() (*asset, error) {
	bytes, err := templatesTriggersTrigger_x_runTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/triggers/trigger_x_run.template", size: 1647, mode: os.FileMode(420), modTime: time.Unix(1490283148, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTypesType_xTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x51\xbb\x6e\xf2\x30\x18\xdd\xfd\x14\x47\x28\xd3\x2f\xfe\x64\x47\x62\x2a\x14\x21\x2a\x90\x0a\xea\x8c\x89\xbf\xd0\xb4\x8e\x1d\xd9\x4e\x2b\x64\xe5\xdd\x2b\x1b\x03\x29\x6a\x97\x6e\xdf\xed\x5c\x7c\xdc\xf2\xf2\x9d\x1f\x09\xee\xd4\x92\x65\xac\x28\xf0\xa0\x05\xe1\x48\x8a\x0c\x77\x24\x70\x38\xc1\xbd\x12\x56\xba\xe1\x4a\x60\xa1\xb1\x9d\xad\xb0\x38\xaf\xb5\xc9\x31\xdb\x60\xbd\xd9\x61\x3e\x5b\xee\x18\xf3\x1e\xd9\x9a\x37\x84\xc9\x14\x79\x2c\xfa\x9e\x79\xff\x1f\x86\xab\x23\x21\x53\x63\x64\x6d\x5c\x3e\xd6\x24\x85\xbd\x5b\xd7\x63\x64\x11\x9b\xb5\xf9\x5c\x75\xcd\x53\xed\xc8\x70\x19\xae\x8a\x02\x57\xf2\xbe\x0f\x25\x5d\x04\x50\x5b\x70\x05\x52\x5d\x93\x3c\x7f\x70\xd9\x11\x2b\xb5\xb2\xee\x77\xd4\x14\xe7\x3e\x89\xbc\x04\xcc\xc5\x0f\x29\x71\xab\xc2\x30\xe9\x7f\x93\x44\xd9\x59\xa7\x9b\x18\xdd\x20\x30\x5d\x55\xd0\x55\x0c\xcd\xb6\x54\xb2\xb8\x1e\x62\xad\x33\x5d\xe9\xe0\x19\x00\xfc\x18\xce\x56\x1b\x47\xe2\x16\xd1\xe5\xb0\xae\x62\x32\xcd\x81\xc4\x6d\x9c\xa6\xeb\x4e\x4a\x7e\x90\x41\xe1\x9f\xf7\xc9\x77\x78\x61\x9b\xef\xc2\xdf\x2e\x95\x23\xa3\xb8\x0c\xcd\x00\x4c\xd2\x0e\xdb\x40\x94\x6c\xfe\x95\x19\xfb\x37\xab\xd5\x64\x74\xbe\x78\xe6\x9f\x89\x70\xb4\xbf\xbe\x23\x85\x7a\xd7\xf6\x5f\x01\x00\x00\xff\xff\x97\x7d\xb6\x0a\x8c\x02\x00\x00")

func templatesTypesType_xTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesTypesType_xTemplate,
		"templates/types/type_x.template",
	)
}

func templatesTypesType_xTemplate() (*asset, error) {
	bytes, err := templatesTypesType_xTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/types/type_x.template", size: 652, mode: os.FileMode(420), modTime: time.Unix(1490288348, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesVendorGitkeep = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func templatesVendorGitkeepBytes() ([]byte, error) {
	return bindataRead(
		_templatesVendorGitkeep,
		"templates/vendor/.gitkeep",
	)
}

func templatesVendorGitkeep() (*asset, error) {
	bytes, err := templatesVendorGitkeepBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/vendor/.gitkeep", size: 0, mode: os.FileMode(420), modTime: time.Unix(1490194044, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/Dockerfile.template": templatesDockerfileTemplate,
	"templates/Makefile.template": templatesMakefileTemplate,
	"templates/actions/action_x.template": templatesActionsAction_xTemplate,
	"templates/actions/action_x_run.template": templatesActionsAction_x_runTemplate,
	"templates/cmd/main.template": templatesCmdMainTemplate,
	"templates/connection/cache.template": templatesConnectionCacheTemplate,
	"templates/connection/connect.template": templatesConnectionConnectTemplate,
	"templates/connection/connection.template": templatesConnectionConnectionTemplate,
	"templates/server/http/handler_x.template": templatesServerHttpHandler_xTemplate,
	"templates/server/http/server.template": templatesServerHttpServerTemplate,
	"templates/triggers/trigger_x.template": templatesTriggersTrigger_xTemplate,
	"templates/triggers/trigger_x_run.template": templatesTriggersTrigger_x_runTemplate,
	"templates/types/type_x.template": templatesTypesType_xTemplate,
	"templates/vendor/.gitkeep": templatesVendorGitkeep,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"Dockerfile.template": &bintree{templatesDockerfileTemplate, map[string]*bintree{}},
		"Makefile.template": &bintree{templatesMakefileTemplate, map[string]*bintree{}},
		"actions": &bintree{nil, map[string]*bintree{
			"action_x.template": &bintree{templatesActionsAction_xTemplate, map[string]*bintree{}},
			"action_x_run.template": &bintree{templatesActionsAction_x_runTemplate, map[string]*bintree{}},
		}},
		"cmd": &bintree{nil, map[string]*bintree{
			"main.template": &bintree{templatesCmdMainTemplate, map[string]*bintree{}},
		}},
		"connection": &bintree{nil, map[string]*bintree{
			"cache.template": &bintree{templatesConnectionCacheTemplate, map[string]*bintree{}},
			"connect.template": &bintree{templatesConnectionConnectTemplate, map[string]*bintree{}},
			"connection.template": &bintree{templatesConnectionConnectionTemplate, map[string]*bintree{}},
		}},
		"server": &bintree{nil, map[string]*bintree{
			"http": &bintree{nil, map[string]*bintree{
				"handler_x.template": &bintree{templatesServerHttpHandler_xTemplate, map[string]*bintree{}},
				"server.template": &bintree{templatesServerHttpServerTemplate, map[string]*bintree{}},
			}},
		}},
		"triggers": &bintree{nil, map[string]*bintree{
			"trigger_x.template": &bintree{templatesTriggersTrigger_xTemplate, map[string]*bintree{}},
			"trigger_x_run.template": &bintree{templatesTriggersTrigger_x_runTemplate, map[string]*bintree{}},
		}},
		"types": &bintree{nil, map[string]*bintree{
			"type_x.template": &bintree{templatesTypesType_xTemplate, map[string]*bintree{}},
		}},
		"vendor": &bintree{nil, map[string]*bintree{
			".gitkeep": &bintree{templatesVendorGitkeep, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

