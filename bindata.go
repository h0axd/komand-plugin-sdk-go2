// Code generated by go-bindata.
// sources:
// templates/Dockerfile.template
// templates/Makefile.template
// templates/actions/action_x.template
// templates/actions/action_x_run.template
// templates/cmd/main.template
// templates/connection/cache.template
// templates/connection/connect.template
// templates/connection/connection.template
// templates/server/http/handler_x.template
// templates/server/http/server.template
// templates/triggers/trigger_x.template
// templates/triggers/trigger_x_run.template
// templates/types/type_x.template
// templates/vendor/.gitkeep
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesDockerfileTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\x4f\x4f\xc3\x20\x18\xc6\xef\x7c\x8a\x37\xbb\x17\x9c\x89\x17\x93\x1e\x66\x8a\xa6\x71\x83\x86\xd4\xa9\x31\x1e\xb0\x45\x42\x18\xd0\xd0\x7a\x98\x0d\xdf\xdd\x2c\xa5\x27\xf5\xc8\xc3\xf3\xe7\xf7\xde\x0b\x7e\x00\x1b\x9c\xf4\x3d\xd1\xa1\x18\x4e\x5f\xda\xf8\xdb\x2b\x7c\x0d\x68\xbf\xbb\xa3\x7b\x08\x51\x4b\x6f\xbe\xe5\x64\x82\x2f\x17\x63\xfe\x19\x7b\x5b\xea\x90\x1f\xd3\x79\x50\xe5\x92\x46\x88\xb2\x23\x3c\xf0\xed\xcd\x91\xb2\x8a\x0b\xfa\xd2\x50\x51\x1f\x28\x6b\xcb\x2d\x42\xe2\x89\x81\xb3\xbd\x89\x50\x0c\x40\xf2\xf2\x12\x1c\xc9\x87\xf1\x68\x57\x55\x80\x81\xe8\x40\xc6\xd8\x91\x79\x06\xdc\xc8\xce\x4a\xad\x44\x08\x13\xa4\x84\x9e\xb9\x78\xac\x6a\xf1\x9f\x25\x25\xb4\x74\xe4\x56\x3c\x0e\xaa\xc3\x67\xe9\x4e\xf0\x4b\xc9\x38\xd2\x2a\x58\xd9\x2f\x42\x74\x50\xc4\xcf\x75\xe0\x72\x4f\x2b\x5e\x1b\x5e\xb3\x16\xde\x36\x7f\x30\x93\x79\xc6\x4c\x3a\x95\xd2\xe6\x1d\xfd\x04\x00\x00\xff\xff\xc4\x7a\x21\x4f\x52\x01\x00\x00")

func templatesDockerfileTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesDockerfileTemplate,
		"templates/Dockerfile.template",
	)
}

func templatesDockerfileTemplate() (*asset, error) {
	bytes, err := templatesDockerfileTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/Dockerfile.template", size: 338, mode: os.FileMode(420), modTime: time.Unix(1490194044, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesMakefileTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x6d\x6f\xdb\x36\x10\xfe\xac\xfb\x15\x57\xcf\xb0\xad\xa0\x14\xe3\x60\xdd\x00\x6d\x6e\x53\xc4\x41\x5a\x14\xb3\x8d\x24\x6d\x31\x4c\x6b\xc1\x48\xb4\x44\x58\x22\x05\x8a\x72\x96\xc4\xf9\xef\x03\xf5\xe2\x97\x38\x71\xb1\x0f\xfb\x62\xd8\x77\xc7\xbb\xe7\xb9\x7b\x78\xf4\x97\xf3\xcb\xab\x8f\xd3\xc9\xbb\x51\x77\x50\x24\x3c\x4d\x31\xd6\x3c\xc7\xfe\xb7\x25\xd7\x85\x50\xd2\xc7\x3e\xe6\x69\x19\x0b\xe9\x15\x39\x0f\xbd\x3b\x96\xa5\xb8\xc2\x82\x47\xd8\x2f\xe8\x3a\x88\xd2\xbe\x0b\x93\xf7\x7f\x9c\xef\xe5\x91\x2c\xe3\x87\x93\xd4\x11\x55\x86\xf3\xc9\xd9\x74\xfc\x71\x72\xe1\xaf\xb3\xdc\xb0\x82\xff\xf2\x33\x8a\x50\x49\x2f\x97\x31\x9e\xbc\xa5\x11\x5f\x52\x59\xa6\x9b\x0c\x2b\xba\x0a\x02\xba\x8a\xfb\xb8\x42\xa3\x91\x44\xd8\x0f\x64\xdf\x85\x2f\xe7\x93\xf1\xf4\xf2\x19\x66\x32\x52\xfa\x47\xc4\xea\x98\x0a\xd5\xd9\xd7\xf1\xbb\x1d\x40\x16\x31\x76\x07\xb3\xaf\x63\xd7\x85\xef\xbb\xb4\x79\x98\x28\xec\x0e\xac\xd1\xc5\x15\xb2\xdb\x05\xf6\x1f\x30\xd7\x42\x1a\x34\xaa\xcc\x73\xae\x07\x45\x79\x53\x18\x3d\xe8\x76\x8f\x5f\x0f\x5f\x0f\x5d\x17\x8d\x4a\xd5\xed\xae\xe3\xc4\x75\xf1\xb1\xef\x02\xcc\x3e\x5d\x8c\xba\x83\x9a\x8b\x4b\x9a\xcc\xc4\x5a\xaa\xc1\xb9\x9e\x61\xda\x8b\xef\x01\xc6\x57\xd7\xef\x46\x74\xa1\x32\x26\x23\x5a\x53\x2b\xe8\x8d\x90\x00\x97\xe7\xb3\xe9\xe8\xe1\x01\xbd\x19\x0b\x17\x2c\xe6\x97\x4a\x19\x7c\x7c\x04\x31\x97\x11\x9f\xa3\x75\x83\x53\x05\x35\xe9\x81\xcb\x48\xcc\x01\x58\x9a\xfa\x55\xef\x51\x64\x2c\xe6\x98\xd7\xe7\x51\x97\x52\x72\x0d\x50\x57\xf1\x51\xc8\xc2\xb0\x34\x05\xb8\x29\x45\x1a\xf9\xe0\x9c\x56\x6d\xe8\x7c\x2e\x84\x8c\x51\xf3\xdc\xb6\xc4\x16\x70\x3b\xe0\x18\x5e\x18\x3b\xa4\xee\xe0\x62\x3a\x7b\x7f\xfd\xc1\xa5\x85\x0e\x69\xe3\xc7\xd5\x0a\x53\x89\xa4\x68\xfa\xfb\x42\x14\x38\xd9\x22\x12\x1a\x49\x8e\x96\xa1\x13\x2b\xac\x4a\x23\x51\xd6\x40\xdb\x01\x3c\x7b\x9a\x86\x59\x44\x33\x26\xa4\x17\x2b\x80\x06\xbb\x5f\x27\x00\x27\xcc\x91\xe8\x27\x49\xc6\x57\xd7\x2e\x80\x6d\x84\xe5\x56\x13\x98\x6f\x44\xd9\xeb\x61\x00\x8e\x95\x0e\x11\xde\x4d\x89\x1d\xfa\xcd\xfa\x68\x41\x83\x41\x75\x08\x03\xd7\x3b\xa2\xc1\x30\xe8\x44\xcc\x30\xbf\x6a\x66\x40\x73\x19\xff\x56\xeb\xfb\x75\x77\xd0\x4a\xdf\x0d\x3a\xb4\xf3\x8c\x32\xad\xb4\x4b\x0e\xce\xa9\xce\x6c\xed\x23\x5b\xa7\x35\x42\x33\x17\x1f\x1c\xeb\xd5\x73\xdb\xbc\x4f\x17\x2e\x38\x86\x69\x24\xe1\xf2\xbe\xb5\x20\x21\xfc\x9f\x30\x2d\x23\x3e\x6a\x0c\x47\x00\x15\x1c\x1f\x9c\x48\x85\x0b\xae\xdb\x46\x92\xdc\xde\x31\x62\x70\x2d\xbe\xb6\x21\xfe\x46\x7c\xe8\xad\x8f\x19\x16\x1f\x0e\xdd\x77\xa6\xcc\xb6\x12\x40\xf3\x98\x4b\xae\x99\xe1\x6b\xe9\x5c\xd4\x06\x2b\x1f\xc9\x6f\x9b\x7e\x60\xb1\xe0\x29\x37\x4a\xae\x87\x10\xa1\xe7\xad\xe7\xb4\x5a\x61\xb6\xb4\xcd\xa9\x6c\x67\x56\x3d\x1b\x2f\x38\xa7\xb7\x89\x08\x13\xac\x2f\x08\x0e\xb7\x16\x49\xaf\xd7\x5a\x9b\x3a\x2d\x1c\x8c\xd5\xfe\x28\x08\xc9\x99\x69\xf3\x98\x2c\xdf\x9a\x4d\x05\x7d\xba\xe4\x3a\x65\x77\x16\xfa\x13\xd8\x68\x14\x9a\x84\x63\x58\x6a\xcd\xa5\xc1\x48\x68\x1e\x1a\xa5\xef\xb6\xf8\x6c\xd2\xf6\x7a\x18\x89\xf9\x1c\x49\x39\xd1\xdb\x34\xd7\x11\x14\xdf\xb6\x9b\xc6\xab\x22\x37\x40\x5a\x89\xee\xb8\x7b\x3d\xcc\x99\x09\x13\x7b\xbb\x48\x3e\xc4\xdf\x5f\x3a\xdd\x4a\x4c\x69\x11\xe3\x51\xed\x3d\xf2\xe2\xfb\xbd\x02\x4f\xe0\x36\xe2\xdb\xef\x0c\xd4\x0b\xc3\x6f\x0b\x12\x5d\xca\xd6\x48\x12\x63\xf2\x1d\x4f\x65\x01\xd8\xb2\x58\x59\x54\x2b\x74\x8e\x9d\x9f\x5e\xd9\xa5\x46\x8b\x24\x90\x8d\xf2\x74\x29\x91\x10\x5b\x9c\x48\x6e\x46\x89\xb2\xd0\xc4\x61\x31\x06\xdd\xee\x69\x07\xdf\xe2\xba\xad\x15\x24\xe7\x34\x4c\x32\x15\xe1\xaf\x6f\xde\xec\x79\xea\x8d\xf6\x17\xf9\x1b\x3f\x17\x7c\xd7\x8b\x84\x24\x3c\xcd\xed\x78\xed\x2f\x3b\xe2\x46\x35\x9d\x1d\x1a\x35\xd5\xff\xce\x25\xc7\xe1\xf1\xf1\xf1\x90\x9c\xd8\x4f\xbf\xfa\xfe\x43\x82\xb6\xd4\x1e\xc1\xba\xb3\x2f\xb2\x6c\xdd\x07\xa8\x56\x21\x07\xf9\x5a\xcf\xf6\x96\xf4\x3c\x6a\x94\x4a\x0b\x6a\x1d\x5e\x7e\x67\x45\x51\x17\x38\x4b\x78\xb8\x40\x7b\xb1\xd0\x46\xa0\x54\x06\x85\xac\xb6\x53\x84\x42\x62\x58\x16\x46\x65\x5c\xb7\xcf\x4b\xf1\xaa\x73\x28\xaf\x95\xf7\x9d\x49\x94\x3c\xd9\xf7\x79\xf4\xe9\x35\x06\x58\xb2\x54\x44\xcd\xce\xd9\x4b\x1a\x5a\x6c\xdf\xab\xe8\xff\x01\xf2\x6e\xf6\xe7\x80\xef\x46\x3c\x07\xdf\x9b\x7d\x98\x4e\xfe\xf4\x91\xd9\x3f\x25\xd5\xca\x6e\x5f\xe7\xe6\xad\xae\x77\xcf\x66\xb7\xc2\xbf\x01\x00\x00\xff\xff\x69\x91\xfa\xae\xeb\x09\x00\x00")

func templatesMakefileTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesMakefileTemplate,
		"templates/Makefile.template",
	)
}

func templatesMakefileTemplate() (*asset, error) {
	bytes, err := templatesMakefileTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/Makefile.template", size: 2539, mode: os.FileMode(420), modTime: time.Unix(1490194044, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesActionsAction_xTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\x5f\x6f\xba\x30\x14\x7d\xe7\x53\x9c\x18\x1e\xfd\xc9\xbb\x89\x0f\xfc\xb6\xaa\x64\x0c\x16\xc5\x2d\xbe\xd9\x60\x75\x6c\x5a\x08\x2d\x5b\x16\xd2\xef\xbe\x94\x16\xc3\x86\x89\xc6\x64\x6f\xf7\xcf\x39\xb7\xe7\x9e\x36\x2d\x68\xfa\x4e\xf7\x0c\x34\x95\x59\xce\x85\xe3\x78\x1e\xee\x63\x44\x71\x82\x47\xff\x81\xe0\x6e\xee\x47\x33\xb2\x44\x12\x23\x99\x07\x4b\x4c\x83\x90\x0c\x91\xcc\xc9\x1a\x2f\x41\x18\xe2\x3f\x41\x18\x2f\x13\x04\x53\xac\xe3\x15\x16\x64\x46\x22\xb2\xf0\x13\xa2\x31\x78\x0a\x57\xb3\x20\x72\xea\x1a\x2e\xa7\x47\x86\xf1\x04\xa3\x48\x07\x4a\x39\x75\xfd\x0f\x25\xe5\x7b\x06\x97\x0f\xe1\x16\x4d\x33\xe0\x45\x25\xdb\x6e\xb6\x83\x5b\x8c\x08\xaf\x8e\x61\x26\x59\x49\x0f\xba\xe1\x79\x30\x20\x5d\x17\xdd\x29\xd9\x10\x6e\x73\xc4\x59\xd2\x49\x83\x52\x0d\x5f\xe7\xac\x15\x83\x4c\x80\x72\x30\x5e\x1d\x59\x49\x25\xdb\xe2\x83\x1e\x2a\xe6\xa4\x39\x17\xf2\x02\x75\x02\x93\xdb\xe3\x9e\x35\xb1\xdd\x80\xf1\x6d\x27\xec\x17\x7b\xfb\xc7\x95\xbc\xc2\x00\x8b\xba\xdd\x01\x33\xe0\x36\x0b\xce\x71\xaf\xf7\xe0\x57\x68\x75\xb5\x83\xcc\xcd\x66\x02\xf2\x95\x21\x6b\x92\x5d\x5e\x76\x11\x8e\xfc\x2a\x58\x9f\x22\x64\x59\xa5\x12\xb5\x03\x00\x5d\x67\xf1\xf3\x69\x29\x65\x11\xda\xa2\x56\xbd\xc9\x12\x3d\x58\x29\x6c\xde\x44\xce\xc7\x03\x53\x5c\xd0\x4f\x8b\x1a\x6c\x4e\xb3\xad\xf6\x9e\x7a\x7b\x2d\x56\x7e\x6e\xb2\x4b\xfa\x2d\xe9\x8a\x05\x0c\xf2\x4f\x37\xf0\x9b\x5f\xc0\x3e\x05\xf3\x25\xf4\x04\x5b\x4c\x2b\x58\x7d\x07\x00\x00\xff\xff\xe0\x17\x20\xd4\x42\x04\x00\x00")

func templatesActionsAction_xTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesActionsAction_xTemplate,
		"templates/actions/action_x.template",
	)
}

func templatesActionsAction_xTemplate() (*asset, error) {
	bytes, err := templatesActionsAction_xTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/actions/action_x.template", size: 1090, mode: os.FileMode(420), modTime: time.Unix(1490194044, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesActionsAction_x_runTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x52\x4d\x6b\xdb\x40\x10\xbd\xeb\x57\x3c\x7c\x28\x92\x71\xa4\xd0\x63\x20\x85\x90\x53\x20\x4d\x4a\x28\x85\x50\x7a\xd8\x4a\xa3\xf5\xe2\xd5\x8e\xd8\x0f\x87\x60\xf4\xdf\xcb\xae\x24\x7f\xc4\xd0\x9e\x72\x29\xf1\xc1\xec\xcc\xbc\x99\x79\x7a\x6f\x7a\x51\x6f\x84\x24\x88\xda\x2b\x36\x2e\xcb\x54\xd7\xb3\xf5\xc8\x33\x00\x58\xec\x76\x28\xbf\x8d\x90\x27\x66\x8f\x61\xa8\x6a\x36\x86\x12\x7a\x31\x62\xa4\xf2\xeb\xf0\xbb\xac\xb9\xab\x36\xdc\x09\xd3\x54\xbd\x0e\x52\x99\x0b\xd7\x6c\x2e\x24\x7f\xae\x34\xcb\x45\x56\x64\x59\x55\xe1\x87\xd0\xaa\x11\x9e\xf0\xa2\xb4\xc6\x76\x8e\xfc\x9a\xa0\x4c\x1f\x3c\x94\x43\x6f\xb9\x27\xab\x5f\xe1\xc8\x87\xbe\xcc\xda\x60\x6a\xe4\x0a\xcb\x48\xe6\x41\x74\x84\x61\xb8\x8b\xe0\x62\x3f\x2e\x2f\xf0\xf3\x17\x59\xcb\x16\xbb\x44\x8a\xac\x75\xb8\xba\x46\x27\x36\x94\x4f\xa5\x15\x2e\x8b\x54\x4c\x7f\x55\x85\xdb\xe0\x3c\x77\x33\x0b\xc5\x06\x35\x37\x84\x35\x59\x9a\x21\x37\x7d\x4f\xa6\x41\xea\x77\x10\x0e\x86\xa8\xa1\x26\x9b\xeb\x96\x7c\xb0\x26\x45\xaa\x85\x26\x93\xc7\xcd\x05\xbe\xe0\x72\x62\x12\x7f\x23\x2a\x91\x4a\xb9\x21\x3b\xca\x1a\xa5\xb3\xe1\x5f\xe2\x70\xf0\x7f\x55\x87\x4f\xd4\x79\x4c\xe8\xff\x4d\x9e\xa7\x60\x46\x65\x6c\x30\x49\x94\xf1\x66\xf1\xa2\xfc\x3a\xc5\x52\x6d\xc9\x4c\x77\xc4\x5b\xb2\x47\xc9\xc3\xd1\x4e\x82\x89\x13\xc1\x6e\x52\xa9\x88\x2b\xf2\x08\xc5\xf2\xd0\x50\xde\xee\x9f\xab\x69\xf8\xd9\x25\xae\xa0\x59\x62\xa9\x59\x96\xf7\x2c\x25\xd9\x02\xf9\xb9\x21\xab\x51\xa8\x62\xfa\xf4\xc9\xd3\xab\x6b\x7c\x3a\x83\xee\x86\x59\xc2\x67\x0e\xf6\x48\xf8\x39\xfd\x55\x6c\x08\x2e\x58\x82\x67\x3c\x3e\xdc\x3f\x23\x38\x8a\x2c\xca\x3b\xd3\x32\x84\x69\xf6\x41\x1b\x21\x91\x9f\x30\xaf\xa8\x47\x53\xe3\xc0\x37\x2e\xcd\x7c\x62\xab\xe1\x91\x2a\x5a\xb6\x70\xa1\xae\xc9\xb9\x37\x68\xa3\x74\x82\x1e\x70\xad\x50\x3a\xcc\x14\x4f\x66\xae\x8e\x5c\xfc\x4e\xce\x8f\x36\xfa\xf8\x7a\x1f\x1f\xe3\x92\x0f\x23\xdf\xcd\xc8\x3f\x01\x00\x00\xff\xff\x46\xdc\xf3\xd2\x35\x06\x00\x00")

func templatesActionsAction_x_runTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesActionsAction_x_runTemplate,
		"templates/actions/action_x_run.template",
	)
}

func templatesActionsAction_x_runTemplate() (*asset, error) {
	bytes, err := templatesActionsAction_x_runTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/actions/action_x_run.template", size: 1589, mode: os.FileMode(420), modTime: time.Unix(1490194044, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCmdMainTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x59\xef\x6e\xdb\x38\x12\xff\x2c\x3d\xc5\x9c\xd0\x3f\xf2\xae\x2b\x6f\xfb\xd1\x7b\xc1\xa1\x9b\xa4\x6d\x70\x69\x52\x24\xee\x2e\x16\x6d\xb1\x60\xa4\xb1\xcc\x33\x45\x0a\x24\x15\x6f\xd6\x30\xb0\x0f\xd1\x8f\xf7\x00\xf7\x5c\x7d\x92\xc3\x90\xd4\x1f\x27\x76\xd3\xf6\xee\x3e\xdc\x2e\xd0\x58\xe4\x68\x66\x38\x7f\x7f\x43\xd5\x2c\x5f\xb2\x12\xa1\x62\x5c\xc6\xf1\x64\x02\x47\xe7\x70\x76\x3e\x83\xd7\xcf\xff\x7e\x0c\x87\xaf\x9e\x9f\xbd\x3c\xbe\x84\xd9\x39\xcc\x5e\x9d\x5c\xc2\x8b\x93\xd3\xe3\x31\xcc\x5e\x1d\xff\x0a\xbf\x9c\x9c\x9e\xc2\x4f\xc7\x70\x7a\x7e\x39\x83\x93\x17\xf0\xeb\xf9\x5b\xb8\x38\x7e\x79\x7c\x76\x7c\xf1\x7c\x76\x4c\x34\xf0\xe6\xf4\xed\xcb\x93\xb3\x38\xe6\x55\xad\xb4\x85\x34\x8e\x12\x94\xb9\x2a\xb8\x2c\x27\xff\x30\x4a\x26\x71\x94\xcc\x2b\x4b\x7f\x84\x2a\xe9\x8f\x32\x49\x1c\x47\x4c\x1a\x0e\x49\xc9\xed\xa2\xb9\xca\x72\x55\x4d\xaa\xb2\xb1\x7f\x4c\x68\x99\xb6\x87\x3b\x4b\x55\x31\x59\x4c\x6a\xd1\x94\x5c\x3e\x31\xc5\xf2\x49\xa9\x9e\x4d\x0a\x6e\x6a\x66\xf3\x05\xea\x24\x06\x00\xa8\x85\x2a\xe1\xfe\xd7\x82\x12\xf7\xd2\x55\x68\x0c\x2b\x91\x74\x59\xaf\x9f\x00\x9f\x43\xf6\x3c\xb7\x5c\x49\x03\x9b\x4d\x1c\x25\xeb\x35\x64\x6f\xbc\x59\x2f\x94\xb2\xb0\xd9\x4c\x98\xdf\x4f\xfc\x1b\x28\x8b\xbd\x94\xb9\x92\x12\x1d\x75\xb2\x9b\xc0\xa0\xbe\x46\x3d\x59\x58\x5b\x27\xbd\x02\x33\xcd\xcb\x12\xf5\x7e\x0d\x6c\x20\xd8\x56\x61\x14\xc7\xd7\x4c\x93\x6b\x26\x13\x38\x63\x15\x82\x3f\x2b\x48\x56\x61\x1c\xb9\x95\x03\x70\xfc\xdc\xef\xcd\x26\x71\xa4\x3f\xa3\x2c\x94\x6e\x89\xaf\xdd\x53\x1c\x85\xd5\xf0\x42\x78\xea\x5f\xd1\x86\x2b\xd9\xbf\xe3\x1e\x9d\x7f\xda\xad\xee\x45\xff\xd8\xbe\x79\x84\x26\xd7\xbc\xb6\x83\xb7\x8b\x7e\xc9\x71\x18\x92\x04\x2e\xc3\x25\xe2\x34\x72\xd1\x3d\x5b\xa0\x41\x28\x70\xce\x25\xc2\x35\xd3\x5c\x35\x06\x72\x25\x94\x86\x5c\x49\x63\x99\xb4\x06\x5a\x9b\x08\x5e\x21\xc0\x01\x50\xe4\x65\x87\x44\x74\xa8\x0a\x4c\x93\x52\x23\xca\xef\x17\xd3\x2b\xc1\xf2\x65\x32\x8a\x23\x8d\x05\xec\x22\xd4\x58\xd0\xb6\xa3\xdf\xc7\xc7\xbf\x6f\xd0\xee\x7c\xdf\xa0\x4d\x46\xa4\xbb\xbd\xa9\x11\x72\xc1\x9f\xeb\xd2\x80\xb1\xba\xc9\xed\x3a\x8e\x0e\x55\x45\x11\x4a\x0b\x5c\x96\x71\x74\xd9\x5c\x85\x25\x03\xef\x3e\xb4\xab\xaf\x7d\xc0\xc2\x77\x21\x72\xb3\x9f\x9f\xc6\x9b\x38\x9e\x37\x32\x87\x12\x2d\xb1\x7c\xa1\x55\x75\x78\x7a\x92\x8e\x20\xfd\x2e\x48\x19\x03\x6a\xad\xf4\x08\xd6\x71\xc4\xe7\x20\x50\xa6\xca\x64\xb4\x33\x82\xbf\x1e\xc0\x53\x5a\x8f\x34\xda\x46\x4b\x90\x5c\x04\x72\x93\x9d\xe1\x2a\x4d\x6e\x54\x03\x55\x63\x2c\x98\x1a\x73\x3e\xbf\x81\x3c\x68\x6a\x15\x70\x79\xad\x96\x08\x2c\x38\x93\x0c\xb0\x89\x23\x46\x07\x9b\x1e\xc0\xa3\x20\x9e\xb8\x87\xb3\x4c\x21\x08\x7e\xf7\xf4\xc3\x38\x8e\x86\xa7\xec\xb7\x9e\x4d\xdd\x5e\x38\xeb\x14\x1e\xf5\x87\x5d\x6f\xc6\x4e\x84\xb1\xcc\x8e\xe1\x37\x92\xa2\x4c\x76\x69\x0b\x2e\xb3\x4b\xcb\x6c\x3a\x82\xc9\x04\x8e\x7f\xaf\x05\xcf\xb9\x15\x37\xc0\x4b\xa9\xc8\xa7\xee\x44\xee\xf4\x29\xbd\x9b\xbd\x26\xaf\x8c\xe0\x11\xbd\x4e\xbf\x0f\x17\x4c\x1f\xe1\x35\xcf\x71\x04\x07\x07\xf0\x03\xac\x5d\x34\x46\x2e\xd0\xb8\x81\x0a\x99\x34\x60\x17\xa8\x11\xb8\x81\x82\x59\x46\x06\xa8\x79\x8d\xc0\x25\xa8\x6b\xd4\x60\x48\x8d\x31\x18\x05\x02\xed\x63\x03\x85\x02\x6e\xe3\x28\x2a\x30\x27\x45\xa9\x50\x92\x49\x8f\x30\x57\x05\xea\xb4\x55\x7c\x14\x47\xa4\x17\x6a\x4d\x54\x05\xe6\x99\xa7\x48\xc9\x8e\x59\xb0\xc2\xe8\x47\x47\xf0\x97\x03\x72\x90\xf3\xd7\x6d\x87\xc5\x11\x19\x66\x13\xb7\xeb\xcc\x39\x5e\x72\xd1\x05\x08\x35\x86\xd4\x05\x01\x6b\x83\x82\x24\xde\x8e\x9b\xb8\xd5\x66\x20\x4c\xa8\x32\x7b\xc1\x2c\x13\x29\x6a\xed\xbd\x6c\x56\xdc\xe6\x0b\x27\x26\x6b\x83\x77\x1d\x47\x39\x33\x08\xc9\x02\x45\x9d\x4c\xdb\x27\x2e\xe7\x8a\x9e\xa2\x5a\x73\x69\x07\xe9\x4c\xc2\x3c\x89\x61\x55\x2d\xd0\x11\x85\x08\x75\x8c\x07\xf1\xd1\xf9\x25\x1a\xaa\x93\xfc\xda\x86\x67\xad\xd5\x35\x2f\x10\x98\x04\x5f\xa3\x41\x69\x08\xb5\x92\x5c\x55\xa2\x44\xcd\x2c\x82\x17\x05\x5c\xd6\x8d\x7d\x2f\x8f\x7f\x9f\xb6\x2b\xd5\xcd\x6f\xfe\x4d\x8a\x63\x3a\xa2\xd7\xf7\xd2\xed\x9e\x10\xf9\x1d\xa5\xde\xfd\xf0\xa1\x3b\x82\xab\xe3\x53\x8a\xbf\x23\x86\x95\x92\xfc\x0f\x04\x66\x80\x96\xe3\x28\xea\xed\x4d\x0b\x14\x07\x97\xae\xfc\xa7\x7d\x9b\xa0\xc5\x43\x96\x2f\x30\x1d\x0d\x62\x62\xe8\xf2\xdb\x6e\x70\x4a\xce\x2b\x9b\xbd\x21\x45\x85\x4c\x93\x37\xbe\xaa\x0e\xca\x3c\x5c\x29\x65\xb9\x2c\xe1\xd5\x6c\xf6\x26\xa8\x96\x65\x99\x3b\x63\x1b\xdd\x2b\x2e\x04\x5c\x09\x95\x2f\xa1\x91\x96\x0b\x0a\x74\xf0\xed\x09\xcc\xa2\xb1\x14\xcb\x2b\xb9\x15\xa7\x26\x3b\xe5\xc6\xa2\x7c\x2e\x0b\x77\x90\x74\x47\x84\xee\x52\xd7\xdb\x4a\x37\xd2\xf9\x7a\xce\x84\xb0\x0b\xad\x9a\x72\x11\x47\x05\xce\x59\x23\xec\xd4\x2b\xf6\x0b\x3e\xd6\x08\xba\x91\x92\x94\x47\x4e\xb9\xd7\x3b\x77\x4c\xde\x65\xad\x7f\xbd\x66\xc3\x7c\xa1\x60\xd9\xa1\x47\x5f\xcd\xba\x70\x81\x50\x5d\xe0\x4a\x15\x37\x70\xcd\x19\x5c\xce\x8e\x4e\xce\x28\x64\x74\x23\x77\x86\x53\x17\x1f\xc3\x1c\x08\x82\xb3\x19\x95\x77\x12\xeb\x4f\x1a\x22\x8a\x0e\x35\xb0\x9e\x6e\xe4\xb9\xc4\xf3\xf9\xdc\xc3\x8d\x5d\x71\x35\x86\x7b\xf2\xff\xae\x79\x9d\x4e\x5e\x6c\xab\xa9\x93\xfb\x59\x37\xb7\x29\xb2\xe5\xe7\x6d\x55\x03\x24\xf1\xb1\xf3\xdf\xd4\x75\xe0\xf1\x9e\x62\x9e\x26\x8d\x5c\x4a\xb5\x92\x9d\x6b\x5c\xcb\x7c\x68\x92\xf1\x5d\x53\x8f\xda\xba\xd7\x56\xb9\xdb\xa6\xad\x54\x81\xa1\xab\x8e\xa1\x1a\x76\xce\x91\xef\x0a\xa4\xe1\x2e\xf4\x97\x17\xbe\x89\xf5\xf9\x79\xc4\x2c\x5b\x6f\xe2\x48\xd0\x06\x41\x51\xca\xd8\x53\x45\xb6\xa1\x4a\xe6\xe8\x7b\xc4\x4a\x05\xf5\x82\xad\xd2\x2a\xfb\x49\x15\x37\xd9\x51\xb7\x31\x72\xa1\x8e\x1a\x44\xf6\x42\x34\x66\x11\x3a\x81\x37\x8c\x46\x53\x2b\x69\xd0\xc9\x6e\x75\xbd\x08\x8b\x64\x4b\x6a\x73\x8d\x99\x42\xa2\x96\x89\x6f\x86\x93\x09\xbc\x95\x15\xd3\x66\xc1\xbc\x4b\x5d\x24\x73\x69\x95\x7b\xd2\xbc\x5c\xd8\x00\x34\x62\x9f\x59\x90\xab\x46\x14\xc0\xae\x15\x2f\x1c\xcd\x33\xc0\xdf\x73\x34\xc6\x35\x29\x68\x79\xe5\x4c\x08\x43\xed\xcd\xb5\xbd\x15\xb7\x0b\x60\x20\x94\x05\x35\x07\x1f\xfa\x4f\x72\x66\x28\x3d\x95\x74\x3e\x32\x8e\xff\x55\x63\xe9\x25\x4b\x21\x47\xd1\x38\x76\x22\x6a\xd4\x73\xa5\x2b\x26\x73\x84\x92\x71\x49\x6d\x54\x2a\x0b\x76\xc1\x2c\x94\x1a\xa9\xa1\x53\x0f\xe1\xd4\x3a\x05\xe9\x12\x2a\xb6\x03\x74\x05\x52\x42\x52\x07\xb3\x34\xde\x90\x18\xab\x7c\x87\xf5\x82\x56\xec\x26\x73\xcb\xb3\xf3\xa3\x73\xf2\xe5\x0a\xc1\x34\x84\x59\x02\x01\x37\xc0\xe0\x4a\x59\x2b\x50\x62\xbe\x1c\x53\x05\x98\x73\x6a\x04\xd6\xc9\x35\x2b\x56\xc3\x15\xcb\x97\x10\xec\xd6\x9f\x10\x81\xd5\xb5\x56\x2c\x5f\x74\x6d\x2f\x38\xd5\xc7\x4b\x1b\x41\x9a\xc9\x12\xe1\x81\x1c\xc3\x83\x9a\xfc\xb7\x1d\x4e\x2e\x2f\xd7\x6b\x78\x50\x67\x17\x6c\xd5\x82\x70\xd7\xf1\xa8\xb7\x38\x87\x87\xe9\x22\xf3\x64\x81\xc6\xb5\x1e\x8a\xbb\x41\x56\x3a\x30\xd1\x79\xbd\x8d\x31\x47\x39\xf6\xad\x6d\x3f\x62\xe8\xc0\xc2\xbd\xfc\x0e\xbb\xd8\x1f\x43\x5e\x7c\x09\x47\xca\x96\xae\xd3\x0d\x52\x27\x70\x4a\xf3\x62\x0c\x62\x4f\x77\xbb\xc3\x8c\xed\xb7\x89\xb7\xac\x33\x8a\x6e\xe4\x6b\xb4\x0b\xe5\xd2\x8f\x65\x17\x4d\x68\x54\x2e\xf1\x0f\x0e\x20\xb1\x68\x6c\x12\x44\x74\xb4\x44\x3a\x43\x63\x83\xa8\x36\xed\xb2\xf3\xc6\x3a\x1b\x92\x72\xae\xf8\x79\xfa\xd4\x1f\x8c\x7b\x03\xef\x3f\x41\xe0\xe2\x93\x94\x06\x18\x57\x62\x92\xad\xcd\x63\x57\x75\x0e\xe8\x6d\xff\x3b\x6d\xfb\xc9\x64\xd2\xd5\x0f\x9f\xba\x68\x1a\xe1\x20\x64\x76\x89\xb2\x48\x5b\x16\xa3\xed\xe9\x73\x50\x46\x83\x0d\x09\x13\x38\xd6\x83\x62\x1a\xda\x98\x2b\xa3\x5b\xe1\xeb\xf1\x5c\x60\xb8\xe9\x11\xe4\x10\x3b\xde\xe9\x02\x5f\x55\x56\xb7\x66\xda\xff\x61\x5d\xfd\xca\xf4\xdc\x56\xeb\x4b\xf2\xb3\x9d\xbd\xb3\x01\xc0\x0a\x5c\xfe\x9f\xb2\xd4\x37\x01\x5e\x55\x58\x70\x66\x51\xdc\xc0\x9c\x1a\x91\x8b\xb9\xde\x2f\x20\x54\x49\xd3\x0c\xb7\x90\x33\x09\x57\x08\x58\x71\x6b\xb1\x68\x2b\x24\xf5\x07\xd4\xd4\x0d\xe8\x89\xd5\x34\x75\x31\x37\xc9\x7b\xcc\x11\x90\x45\xa1\xe4\x63\x0b\x12\xb1\x80\x09\x34\x06\x1d\x35\x97\x16\xb5\x64\x02\xae\x9a\xf9\x1c\x69\x44\x13\xce\xe1\x5d\xa9\x1d\xbb\x3e\xd2\x6b\x63\x60\xc1\xae\x5d\x17\x58\x29\xbd\xf4\x12\xb8\xa4\x8a\xbe\x80\x5a\xb0\x1c\x8d\x1b\xbd\x56\x08\x05\x32\xe1\xbb\x95\x2f\xfc\x12\x18\x28\x89\x4f\xd4\x7c\x0e\x73\x66\x16\x74\x34\xea\x68\x5f\x53\xae\x76\xb5\xea\x2f\xaa\x61\x2e\x6e\xba\xb0\x39\xc3\xd5\x56\x19\x0b\x26\x4a\x8b\xd1\xfe\x9a\xa5\x3a\x05\xad\xab\x58\xc3\x52\x34\xfa\x71\x58\x59\xf6\x62\x86\x28\xf2\x65\x6d\x0a\x6a\xec\x1e\x6f\x81\x08\xaf\x2a\x29\x70\x17\xb9\xdd\x53\xb6\xee\x29\x7a\x9b\x16\x7f\xaa\x80\x36\x28\x0c\x08\x31\x58\xe5\x06\x13\x68\xea\x50\xe9\x58\x21\x94\xaa\x5d\x2b\xbe\x0d\x51\x5b\x18\x48\x78\x42\x49\xd3\x54\x58\x04\xb6\x73\x02\xe5\x68\xac\xab\x42\x2b\x1f\xa0\x6d\x74\xf6\x15\x03\x0a\xae\x31\xb7\x82\x10\xc2\xae\x5a\x3a\x9c\xa5\xfb\x0c\xb9\xb4\x4c\xdb\x4e\x39\x20\xed\xe2\x28\x2a\x15\xd8\xcc\x6d\x5d\x20\x2b\x4e\x95\xaa\xd3\x30\x49\x5d\x34\xf2\x2e\xc2\xa6\xdc\x51\x34\x3f\x5a\x34\x30\xf1\x20\x3b\x60\xec\x20\xd3\x52\xc7\xda\xf2\xe9\xb7\x14\xf7\x16\xc5\x7f\x75\x75\x6f\x67\x03\x6e\xa0\xd6\x68\xed\x0d\x2c\x58\xbe\xbc\x19\x3b\x6c\x66\x1a\x8d\x54\xc0\xbb\x7b\x0f\x06\x57\x68\x2d\x6a\x82\x5b\x2e\x3f\xe7\x5a\x55\xce\x46\x28\x4b\x2e\x71\x4c\x07\x2e\x14\x1a\xca\x78\xa1\xd4\x92\xf8\x0b\xbe\x44\x07\xc7\xe8\x48\x4c\xde\xc0\x92\xcb\x82\xaa\x46\x42\x98\x31\x81\xb9\x60\x65\x9b\xaf\x43\xb7\x65\x59\x46\xec\x88\x8d\x09\x4c\x08\x2b\x52\x86\x2b\x77\x09\xe3\x2d\x13\x7b\x2c\xc8\x20\x47\x4d\xe0\xd0\x21\x51\x8f\x25\x35\xba\xca\x40\x5c\x94\x14\x84\x89\x3b\xa2\x05\xd3\x05\xc1\xca\x02\xb8\xbb\x2c\xcc\xd1\x64\x70\xa9\x3c\x56\x55\x04\x8e\x43\x1d\xf2\xc7\xae\x09\x75\x4e\x26\x8e\x2b\x51\x48\x5c\xed\xa0\xc8\xe0\xe4\x71\xe5\xca\xa2\x0b\xf1\x85\xdb\x10\xcc\xa2\x26\x34\xbd\x70\xfd\x87\x59\xb8\x42\x63\x43\x7c\xd0\x18\x8a\x12\x14\x59\x78\xc5\x0d\xfa\x6e\x7b\xb7\xd9\xb9\x0b\xa7\x8a\xd5\xef\x7c\xcb\xfd\xe0\xca\xe7\x9c\xe5\xb8\xde\x8c\x86\x26\xeb\xbb\x61\xb8\xec\x6b\xb4\x18\x83\x5a\xba\x16\xca\x2c\x7b\x97\xbc\xbd\x38\x4d\x3e\xfc\x48\x4b\x6b\x77\x57\xe6\xfc\x46\xe0\xa0\x61\x42\xdc\x38\x27\x19\x78\x06\xd7\x4c\x34\x54\x52\xc9\xc9\x2b\xf4\xe6\xf3\xb5\x9b\x1b\xaa\xa6\x7f\xeb\xe3\x71\x20\xfe\x0c\x57\xaf\x66\xb3\x37\x69\xa3\x45\x96\x7a\x55\x47\xa3\xe1\xad\xd4\x36\xed\xa5\x2d\x54\x63\xd3\x51\x07\x33\xee\x5e\x10\xd1\x31\x26\x13\x78\xe9\x66\x01\x01\x27\x72\xae\x60\x02\xaf\x90\x15\x34\xf6\x7b\x80\x44\x87\x4b\xde\xcb\xa4\x7b\xfe\xfe\xc0\x25\xc9\xa5\x63\x37\x4f\x13\xaa\xb6\x53\x08\xff\x3d\x34\xf4\xff\xa7\x7f\xfe\xeb\xbd\x4c\xc6\xe0\x6e\x6e\xc7\xee\xc6\x7c\x0c\xee\x96\x76\xb4\x97\x8d\xbf\x07\x9f\x7e\x86\x8d\xa7\xf8\x02\x46\xee\x5e\x7c\xfa\x39\x46\x8e\xe2\x5e\x4e\x03\x5b\x4d\x77\x73\x1a\x50\x74\xdc\xf6\x20\x33\x6a\x4d\x54\x48\x72\xd5\x48\x67\xd4\x54\xa0\xec\x69\x46\x8e\x68\xd0\xd8\xc9\x19\x7b\x35\x7b\xdf\xde\x87\xef\xda\xec\xc4\xa6\x0f\xcd\xc3\xe2\xa1\x19\x4d\x61\xa8\x33\x69\x37\xd0\x64\xb3\xe9\xed\x30\x00\x72\x7c\x0c\x0f\xec\x5d\x20\xb7\x47\xe4\xa7\x8f\x1f\x3f\x7d\xfc\xf3\xd3\xc7\x3f\x83\x99\x9c\x68\x33\x1a\x8a\x4d\xbc\xdc\xee\x03\x49\x90\xda\x6f\xdc\xfa\x12\xb1\xad\x55\x5b\xb0\x07\xbf\x77\x5f\x2c\x90\x99\x3d\x18\xbf\x65\xe8\x40\xd4\xd9\x39\xc0\xd7\x6f\x37\x73\x2b\x75\x9f\x95\xb7\xf5\xf8\x8c\x99\xd9\x9d\x71\xf6\x3f\xb5\x32\xdb\x67\x65\xf6\x0d\x56\xee\xae\x40\x53\xaf\xd6\xad\x82\xb2\x75\x83\xeb\x6d\x1a\x6a\x53\x3f\xaa\x50\x03\xfe\xe9\xc6\x62\x7f\x4f\xeb\xc0\xf6\xeb\x00\xb5\xef\x4c\x2b\x3b\xaf\xc9\x87\xe8\x6f\x13\x47\x15\xb1\x19\x7c\xbc\x88\xa3\xa8\xcb\xfc\xe4\xfa\xa9\x43\x5e\xd4\xa9\xa7\x1d\x11\x3d\x79\xc2\xc8\x1b\x7b\xda\xde\x77\xd2\x52\x0f\xf4\xa7\xd0\xeb\x4b\x3b\xaf\xd1\xb2\x29\x54\x6c\x89\xe9\x9e\x26\xe1\xc8\xfa\xee\x70\x3f\x71\xfb\xa5\x25\x5c\x71\xee\x9a\xa4\x76\x47\x46\x3f\x48\xb1\xdb\x83\x54\xe5\x6f\x47\x0f\xba\x6b\x51\x1a\xf2\xdd\xaf\xcf\x98\x7e\x38\xff\xb3\x5b\x77\x22\x5f\x8a\xc2\x87\x93\x17\x8d\xfe\xbd\xcc\x2d\x68\x74\x7f\x71\xe9\x0f\x67\xf7\x1f\xae\xbd\x7c\x25\xf8\xef\x7f\x7e\xe6\x78\xc3\x91\xb2\xaf\x3d\xdb\x43\xe5\x37\x1e\x73\x28\x7c\xeb\x9c\x03\x4c\x39\xbc\x76\x7d\xbb\x7d\x53\x30\xf8\x7e\xe2\xef\x5e\x7b\x3c\xd9\xe6\xff\xce\x23\x9d\xc8\x02\xa5\x4d\x1f\x55\x63\x48\x20\xa1\x7f\x20\xf9\x92\x74\x19\x7e\xc8\xf0\x41\xd9\xa6\xf3\x68\x1b\xb5\xfe\x3b\x00\x00\xff\xff\x5c\x0e\xe6\x84\xea\x20\x00\x00")

func templatesCmdMainTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesCmdMainTemplate,
		"templates/cmd/main.template",
	)
}

func templatesCmdMainTemplate() (*asset, error) {
	bytes, err := templatesCmdMainTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cmd/main.template", size: 8426, mode: os.FileMode(420), modTime: time.Unix(1490197534, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesConnectionCacheTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x93\x5f\x6f\xdb\x36\x14\xc5\x9f\xad\x4f\x71\xe6\x87\x41\x0e\x54\x19\xd8\x63\x87\x3c\x64\x89\x9b\x18\x75\xed\xa1\x71\x30\x14\x45\x1f\x68\xea\x4a\x22\x4c\x91\x2a\x79\x59\xcd\x0b\xf2\xdd\x07\x52\x4a\xe2\x06\xdb\x1b\xc5\x3f\xe7\xfe\xee\xb9\x47\xbd\x90\x47\xd1\x10\xa4\x35\x86\x24\x2b\x6b\xb2\x6c\xb9\xc4\xcd\x0e\xdb\xdd\x1e\x9f\xae\x3e\xae\x70\x7d\x77\xb5\xbd\x5d\xdd\x63\xbf\xc3\xfe\x6e\x7d\x8f\x0f\xeb\xcd\xaa\xc0\xfe\x6e\xf5\x05\x7f\xad\x37\x1b\xfc\xb1\xc2\x66\x77\xbf\xc7\xfa\x03\xbe\xec\x1e\xf0\x79\x75\xbb\xda\xae\x3e\x5f\xed\x57\xf1\x0e\xfe\xdc\x3c\xdc\xae\xb7\x59\xa6\xba\xde\x3a\x46\x9e\x01\xc0\xbc\xee\x78\x3e\xae\xfc\xc9\xc8\x79\x96\xd6\xbd\xb6\x0d\xe6\x8d\xe2\x36\x1c\x4a\x69\xbb\xe5\xd1\x76\xc2\x54\xcb\x5e\x87\x46\x99\x77\xbe\x3a\xbe\x6b\xec\x6f\x4b\x6d\x9b\x79\xb6\x48\x98\xd7\x42\xb6\x04\xe5\x21\xe0\x55\xd7\x6b\xc2\xe0\x44\xdf\x93\x83\x70\x36\x98\x0a\x02\x9d\xe8\x31\x28\x6e\xe3\x32\x30\xfd\x5d\x80\x2d\x3c\x5b\x77\xde\xb3\x87\x32\x19\x9f\x7a\x9a\x14\x3d\xbb\x20\x19\x8f\x09\x2b\x12\x96\x9f\xe2\xdb\xf4\x59\x09\x4e\xaa\x5f\x3d\x3b\x65\x9a\x6f\x17\xd7\xaf\xd6\x3d\x25\xaa\x2d\x0d\xa3\x8c\x23\x0e\xce\x44\x3a\x43\xc3\x59\x39\xc8\x78\x9c\xd5\xc1\xc8\x97\xcb\xf9\x02\x17\xe3\xab\xc7\x6c\x36\x3e\xc4\xaf\x69\xe3\x31\x9b\xcd\x62\xd1\xf7\xe8\xc4\x91\xf2\xff\x2e\xbd\x28\xb2\xd9\xd3\x54\xff\x96\x18\x83\xd2\x1a\x0d\x31\xac\x83\x32\x8a\xc1\xed\xd8\x70\x89\x35\xe3\xa0\xad\x3c\x7a\x04\xc3\x4a\xbf\x9c\x44\x1f\x1d\x89\xea\x14\x35\xf6\xbb\x9b\x1d\xb8\x55\x7e\x54\x3a\x10\x7e\x90\x3b\x41\x19\xaa\x6b\x25\x15\x19\xc6\x21\x30\x06\x82\x21\x8a\x3e\x0f\xe2\x14\x9d\xd5\xd6\x1e\x43\x7f\x6e\x6d\x54\x53\x06\x02\xdc\x46\x75\x2f\x6a\x42\x27\x8c\x21\x57\x40\x98\x0a\xd6\xe8\x53\x42\x54\x42\xab\x7f\x28\xe2\x74\xb0\x46\x52\x39\x3a\xbf\x33\x92\x30\xd8\xa0\xab\x48\xd1\x58\x5b\x45\xc5\xa9\xb8\xe7\x48\x37\x21\xf4\x5a\x48\x8a\x10\xc9\xde\x73\x86\x22\xaa\x9a\x04\x37\xea\x87\x1e\x87\x13\x04\x8e\x94\xba\x7d\x6d\xd4\xd1\xf7\xa0\x1c\xa1\x0f\xcc\xca\x34\x10\xf8\x48\xa7\x7c\x81\x8e\xb8\xb5\x11\xf6\xc5\xae\x69\x94\xca\x30\xb9\x5a\x48\x2a\x30\xb4\x4a\xb6\x51\x6e\x78\x81\x62\x3b\x85\x20\x26\x34\x0d\x0d\xdc\x0a\x8e\x56\x4b\xdb\xf5\xd6\x53\x05\x5b\x9f\xeb\xa5\x78\xf9\x20\xdb\xf1\xe2\x9a\xa3\xa0\x14\x06\xc1\xa8\xef\x81\xa2\x57\x15\x19\x56\xf5\xe9\x2d\xc9\x40\x18\x84\xe1\xe7\x29\x20\xf4\xe5\x18\xb1\x5c\x4e\xd1\x5a\xc4\x68\xe4\xb2\xc2\xc5\x8d\x60\x51\x40\xe3\x22\xfe\x73\xe5\xc6\x36\x0d\xb9\x05\xf2\xb3\x40\x15\x20\xe7\xac\x5b\xc4\x38\xfe\x10\x0e\x1e\xe7\x41\x4f\x5b\xf6\x88\x83\xb5\x3a\x9b\xc9\x72\x63\xe5\x31\x5f\x64\x33\x55\xc3\x17\xf1\xe0\x12\xb2\x8c\xad\x7c\x95\x55\x99\x1c\xfc\xf6\x7b\xdc\x8e\x59\x96\xe5\x83\xd1\xd3\xfd\xe7\xa4\xfb\x02\x46\xe9\x18\xe1\x99\x2e\xd7\xa6\xb6\xf9\xfc\xda\x91\x98\x46\xb0\xa5\x01\xaf\xc5\xe7\x8b\x6c\xe6\x13\x1e\xde\x5f\x3e\xef\xe7\xb2\x2a\xa0\x47\x82\x78\xf2\xcb\x65\x14\xfc\xdf\x7a\x46\xe9\xa4\x90\x2a\xbe\x25\xc5\x25\x7c\xf6\xd3\xb3\x9f\x29\x9f\xfe\x0d\x00\x00\xff\xff\xba\xe1\x0a\xc8\x35\x05\x00\x00")

func templatesConnectionCacheTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesConnectionCacheTemplate,
		"templates/connection/cache.template",
	)
}

func templatesConnectionCacheTemplate() (*asset, error) {
	bytes, err := templatesConnectionCacheTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/connection/cache.template", size: 1333, mode: os.FileMode(420), modTime: time.Unix(1490194936, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesConnectionConnectTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x94\x4f\x8f\xdb\x36\x10\xc5\xcf\xd5\xa7\x78\xc8\xa1\xb5\x17\x5e\x1b\xcd\xb1\x40\x2f\xdd\x20\x40\xd1\xa4\xce\x21\x28\x10\x14\x3d\x8c\xc9\x91\xc4\x9a\x22\x55\xfe\x89\x56\x35\xf6\xbb\x17\x43\x5a\xfe\xd3\x45\x2e\x86\x25\x0d\xdf\xcc\xfc\xde\x70\x46\x52\x47\xea\x18\xca\x3b\xc7\x2a\x19\xef\x9a\xc6\x0c\xa3\x0f\x09\xab\x06\x00\x46\xeb\x3b\xbc\xe9\x4c\xea\xf3\x61\xab\xfc\xb0\x3b\xfa\x81\x9c\xde\x8d\x36\x77\xc6\x3d\x46\x7d\x7c\xec\xfc\xdb\x9d\xf5\xdd\x9b\x66\xdd\x34\xbb\x1d\x9e\x72\x4c\x7e\xf8\x44\x81\x86\x08\x13\x31\xf5\x1c\x18\xb3\xcf\x48\x3d\x43\xf3\x57\xb6\x7e\xe4\x80\xc9\x58\x8b\x56\x7e\x8c\x03\xb9\x19\xaa\x1c\xc4\x18\xe4\x73\x32\x1c\x37\x98\x7a\xa3\xfa\x72\x76\xf2\xd9\x6a\x38\x66\x2d\x39\x92\x47\x8e\x0c\x1f\x30\xf9\x70\xc4\x64\x52\x2f\x2a\x4f\xb5\x8b\x2d\xf6\x8e\xc1\xcf\x34\x8c\x96\x31\x98\xae\x4f\x38\x70\xcd\x61\x0d\xbb\x04\x6b\x0e\x81\x82\xe1\x28\x12\x31\x8f\xd2\xb0\x71\xdd\x4d\x6e\xb4\x67\x71\xe3\x3a\xc9\x58\x52\x48\x03\xaf\x14\xa4\x3a\xa9\x6b\x83\x43\x4e\xd0\xde\xfd\x90\x30\x91\x4b\x52\xa4\xf5\x91\x61\xda\x12\x13\xb8\x63\xc7\x81\x12\x17\x9d\x0a\xb0\x49\xf3\xc8\xf7\xc8\x62\x0a\x59\x25\x9c\x0a\xfe\xdd\x0e\x5f\x7c\x0e\xaf\xd9\xe0\xc0\xd6\x4f\xcd\x4b\x45\x5e\xfb\x16\xda\xa5\xc4\x1a\xac\xbc\xe6\xd2\xc6\x3d\xf7\xe4\x31\x05\x23\x55\x78\xb4\xd9\xda\x19\xc6\x99\x64\xc8\x9a\x7f\x85\x91\x46\xe0\x94\x83\x03\x89\x72\x60\xd2\xf3\x82\xfb\xe9\x32\x24\xf0\x87\xbf\x05\x74\xd3\x66\xa7\x96\xf7\x2b\xa5\xf1\xf0\x8e\x12\x6d\x20\x43\xf3\x20\xa3\xb3\xfd\xe0\xbb\x8e\xc3\x1a\xab\x87\xeb\xe9\x0d\x38\x04\x1f\xd6\xe7\x1e\x65\xf6\xf0\xd3\xcf\xf8\xfe\x1a\x71\x7a\xb9\xef\x5e\x3a\x91\x31\x5a\xde\x7e\xa6\x63\xa5\x78\x9d\x5b\x68\x4a\x54\xea\x2f\xd5\x9b\x04\xe3\x92\x2f\x41\xaf\xea\xbe\xc8\xf4\xec\x36\xf7\xed\xcf\x88\x89\x12\x6f\x10\xb3\xea\x41\x15\x28\xa9\x94\xc9\x82\x46\x73\x9b\xf0\xac\x9e\x7a\x13\x34\x46\x0a\x69\x5e\x74\xdf\x1b\x47\xd6\xce\x1b\x8c\x14\x23\x0e\xa4\x8e\xff\x2b\x76\x03\x67\x6c\xf1\x26\x66\xa5\x38\xc6\xe5\xe4\x3e\xf5\x1c\x26\x13\xb9\x44\x9c\x41\x95\xc0\x96\x8c\xcd\x81\x9b\x25\xf2\xa3\x20\x88\x39\x14\x1f\xf7\xbf\x7f\xf8\x52\x2c\x12\xe4\xbf\xba\xd6\x17\x10\xcb\x43\x5b\x47\xb1\xbb\xbd\x65\x82\xb4\x6a\x9d\xed\x96\xe2\x4a\xd2\xf3\x4c\xfd\x41\xd6\x68\x19\xd6\x72\x4f\xd9\xd5\x54\xf7\x34\x27\x8a\x50\x81\x29\xb1\x86\xf2\x21\xb0\x4a\x76\xae\x33\xb1\x52\xb8\x71\x7c\x7d\x91\x5b\xad\xf1\xe7\x5f\xb5\xab\xd3\x37\x3c\x6e\xbe\x3b\x97\x74\x2d\xe6\x37\x9e\xa1\xfc\x30\x06\x13\x39\x96\x36\x5a\xc3\x56\xc7\x72\xf1\x58\x4b\x7f\x83\xf0\xc8\x23\x08\xd9\x99\x7f\x32\xe3\x2b\xd9\x5c\xe7\x9f\x49\xf5\x30\xd1\x25\x72\x8a\xe1\x5b\xd0\xed\xbe\x13\xbf\x24\xa8\xae\x8b\x0d\xde\x62\xe0\x18\xa9\xe3\x78\xbd\xf4\x91\x86\x6a\x9f\xf8\x5c\x2e\x69\x5f\xf6\x51\xec\x29\x30\x7e\xbc\x73\x56\xc8\x0b\x33\x11\x96\x8d\x20\xe7\x1d\x3f\xa7\x45\xb6\xaa\x6a\xd3\xb6\x1c\x64\x93\x9c\x15\xeb\x82\x13\x0f\xe9\xe6\xe3\x55\x78\x7b\xe5\x2a\x77\x6c\x2d\x4c\x56\x6b\xd9\x16\xb2\xb8\x2e\x2c\x3f\xef\xdf\xed\x41\x39\xf9\xc7\x85\x17\x7c\xdb\x2e\x61\x95\xda\x05\xf0\xe9\x84\xed\xd5\x24\x91\x15\xd0\x2f\x2f\x67\xea\x9f\x2c\xa9\x65\x39\xdd\xda\xfe\x3e\xbb\xf2\x27\x96\x5e\x3f\x72\xea\xbd\x8e\xf8\x45\x16\xd2\x7f\x01\x00\x00\xff\xff\x9c\x06\xdf\xa5\x50\x06\x00\x00")

func templatesConnectionConnectTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesConnectionConnectTemplate,
		"templates/connection/connect.template",
	)
}

func templatesConnectionConnectTemplate() (*asset, error) {
	bytes, err := templatesConnectionConnectTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/connection/connect.template", size: 1616, mode: os.FileMode(420), modTime: time.Unix(1490194044, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesConnectionConnectionTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\x41\x4f\xdc\x30\x10\x85\xef\xfb\x2b\x9e\x10\xc7\x6d\x38\xf4\x86\xd4\x43\x0a\x01\x22\xb6\xbb\x88\x0d\xaa\xb8\x31\x6b\x0f\x89\xc1\xb1\x23\xdb\xd9\x6d\xb4\xca\x7f\xaf\xec\x2c\x28\x6d\xaf\x3d\x66\x32\x7e\x6f\xe6\x7d\xd3\x91\x78\xa7\x9a\x21\xac\x31\x2c\x82\xb2\x66\xb1\xb8\xb8\xc0\xf5\x06\xeb\x4d\x85\x1f\xf9\x7d\x81\xab\xbb\x7c\x7d\x5b\x6c\x51\x6d\x50\xdd\x95\x5b\xdc\x94\xab\x62\x89\xea\xae\x78\xc6\xcf\x72\xb5\xc2\xf7\x02\xab\xcd\xb6\x42\x79\x83\xe7\xcd\x13\x1e\x8b\xdb\x62\x5d\x3c\xe6\x55\x11\x7b\xf0\xb0\x7a\xba\x2d\xd7\x49\xf4\xea\xd3\x03\xca\x23\x34\x73\x57\xd8\xdd\x1b\x8b\x80\xd0\x50\x48\xbf\x24\xef\x59\xdb\x8e\x1d\x0e\x4a\x6b\x90\x94\x08\x16\x87\x86\x0d\x94\x09\x5c\x3b\x0a\xca\xd4\x20\x84\x46\x39\x89\x8e\x5c\x18\xa2\x49\xfe\x50\x66\xc8\xa5\x04\x99\x01\xef\xca\x48\xd8\x57\x68\x6b\x6a\x68\xb5\x67\x09\xeb\x20\x7a\x1f\x6c\x8b\xaf\x1f\xcf\xfe\x1d\xc3\x47\x0f\x1b\xa5\x3d\x7c\x70\xbd\x08\x59\xd4\x2e\x48\x34\x50\xc6\x07\x32\x82\xa3\xee\xac\x61\xca\x62\xc7\xf0\x0d\x39\x96\xa8\xb5\xdd\x91\xd6\xc3\x12\xde\xa6\x72\xef\x38\x6e\x10\x17\x69\xfb\xc0\xbf\xd8\xc7\x59\x28\xd8\x56\x89\x28\x1e\x77\xa5\x38\x83\x8f\x5b\x3a\x86\x61\x96\x2c\xb3\x45\x18\x3a\x9e\x67\x77\xf2\x3b\x2e\x00\xe0\x2a\xed\xf2\x40\x8e\x5a\x9f\x0a\xc7\xe3\x17\x38\x32\x35\xe3\xdc\x2c\x71\xde\xe1\xf2\x1b\xb2\xd9\xeb\x71\x4c\x6d\x53\x2b\xce\xbb\x6c\x4d\x2d\x63\x1c\x4f\x5f\x55\x34\x1b\x47\xbc\xbc\x79\x6b\x2e\xcf\xa6\xe2\x23\x1d\x4e\x5d\x67\x2f\x9f\x26\x6c\x64\x14\x1b\xa7\x7b\xa1\x40\x1f\x50\x4f\xf3\x25\x92\x8d\xd5\x72\xaa\x3a\x3a\xcc\x73\xee\xd2\xc4\x78\x75\xb6\x4d\xbf\x95\x11\xb6\x8d\x40\x5b\xf6\x9e\x6a\x8e\xa2\x55\x4c\x37\xd1\xdf\x31\x42\xef\x0c\xcb\x89\x0b\xc1\x31\xe9\xb9\xdc\x6e\x48\x2a\xdb\xeb\x7b\xb8\xde\x04\xd5\x72\x86\x67\xdb\xc3\x37\xb6\xd7\x12\x86\xf7\xec\x20\x95\x63\x11\x74\x3a\x93\x18\x6e\xc4\xd1\x7b\x9e\x28\x4e\xe0\x97\xb0\x46\x4f\x5a\x8e\xeb\x5e\x93\x9b\xb9\x64\xc8\x3d\x7c\x2f\x9a\x25\x68\x6f\x95\x8c\x2c\xd3\x0d\x9a\x01\x9d\x8b\xfc\x82\x62\x1f\x55\x55\x38\x61\x4b\xb9\xfc\x01\x6c\xc6\xe7\x6f\x36\xff\x1d\xcd\xef\x00\x00\x00\xff\xff\x6b\x29\x21\x24\xdd\x03\x00\x00")

func templatesConnectionConnectionTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesConnectionConnectionTemplate,
		"templates/connection/connection.template",
	)
}

func templatesConnectionConnectionTemplate() (*asset, error) {
	bytes, err := templatesConnectionConnectionTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/connection/connection.template", size: 989, mode: os.FileMode(420), modTime: time.Unix(1490194044, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServerHttpHandler_xTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x55\x5d\x6f\xdb\xb8\x12\x7d\x96\x7e\xc5\x5c\x03\xb7\x57\x2e\x5c\x09\xb7\x8f\xb9\x08\x2e\xd2\xc4\x4d\x8c\x4d\xed\x20\x76\x37\xe8\xd3\x82\xa6\xc6\x12\xd7\x14\x47\x4b\x8e\xa2\x35\x02\xff\xf7\x05\x49\xd9\x09\x0a\xf7\xf3\xa5\x7e\xb2\xc8\xe1\x9c\x33\xc3\x73\x86\xad\x90\x5b\x51\x21\xd4\xcc\x6d\x9a\x16\x05\x5c\x2d\x60\xbe\x58\xc1\x87\x8b\xdf\xa6\x70\x79\x73\x31\xbf\x9e\x2e\x61\xb5\x80\xd5\xcd\x6c\x09\xef\x67\xb7\xd3\x09\xac\x6e\xa6\x9f\xe0\x61\x76\x7b\x0b\xef\xa6\x70\xbb\x58\xae\x60\xf6\x1e\x3e\x2d\x3e\xc2\xfd\xf4\x7a\x3a\x9f\xde\x5f\xac\xa6\x3e\x06\xee\x6e\x3f\x5e\xcf\xe6\x69\xaa\x9a\x96\x2c\x43\x96\x26\xa3\x4d\xc3\xa3\x34\x19\xa1\x91\x54\x2a\x53\x15\x7f\x3a\x32\xa3\x14\x00\x60\xa4\xa8\x50\xd4\xb1\xd2\xc3\xb7\x41\x2e\x3c\xa9\x51\x1a\xbf\x9f\x9e\x20\xbf\x8b\x64\xef\x89\x18\xf6\xfb\x42\x48\x56\x64\xdc\xe8\x8b\x01\x92\x8c\xc1\x10\x14\x63\x5a\x4d\x15\x8c\x2a\xc5\x75\xb7\xce\x25\x35\xc5\x96\x1a\x61\xca\xa2\xd5\x5d\xa5\xcc\x1b\x57\x6e\xdf\x54\xf4\xb6\xd0\x54\x0d\x39\xbf\x19\xda\xa0\x73\xa2\xc2\x51\x3a\x0e\xcd\xf3\x1c\xe6\xa2\x41\xd8\xef\x6f\x84\x29\x35\x5a\x50\x0e\x04\xd4\xf1\x23\xe5\x5d\x8b\xa7\x82\x1c\xdb\x4e\x32\x3c\xa5\x89\x84\xd7\xcf\xac\xf3\x4b\x21\x6b\x4c\xf7\x21\xf7\x1c\xfb\x13\x27\x2d\x72\x67\x8d\xc7\x30\xd8\x9f\x48\x9d\x6e\x3a\x23\x4f\x9f\xcd\x4e\x60\x8d\xe1\xf5\x09\x90\xa7\x34\x89\x38\xf0\xea\xb0\x7b\xdc\x7c\x4a\x93\x44\x9e\x81\x9c\xa4\xc9\x7e\x60\xba\x44\xfb\x88\x37\xab\xd5\xdd\x50\xb7\x03\xae\x11\x2c\xfe\xd5\xa1\x63\x17\x19\x65\xf5\x29\xa4\xf1\xf3\xd9\xac\x0f\x9a\xcc\xef\xd1\xb5\x64\x1c\x3e\x58\xc5\x68\x27\x60\xe1\xf5\xb0\x1e\xd2\x8d\x23\xb9\x18\x03\x67\xe7\x30\xdc\xc8\xf1\x9c\xe7\xb7\x64\xc1\x9d\x3b\x83\x11\x6d\x47\x81\x67\xb2\x9e\x00\x5a\xeb\xe3\xa3\xe8\xf2\x7b\x14\xe5\x85\xd6\x99\xcd\xdf\x51\xb9\x1b\xa7\x49\x51\xc0\x6a\x71\xb5\x80\xce\x21\x08\xd0\xaa\x51\x0c\x16\x45\x89\x16\x98\xa0\xb5\xf8\x88\xc6\xaf\x38\xea\xac\x44\x10\xcc\x42\x6e\xdd\xff\xd3\x44\x6d\x42\xea\x7f\x9d\x83\x51\xda\xb3\x4b\xfa\x3c\x90\xbf\x09\xa7\xb3\xc0\x3e\x32\x9a\x19\x46\x6b\x84\x0e\x45\xdb\xa9\xb5\x64\xc7\x69\x92\x58\x6c\xf5\xee\x41\x71\x1d\x56\xb2\x43\x75\x13\xe8\x03\xeb\x18\xe2\xaf\x23\x94\x12\x19\xe7\x97\x9a\x1c\x66\xe3\x80\x6f\xf3\x0f\xc8\x35\x95\x9e\xc4\xe8\x6e\xb1\x5c\x8d\xbe\xce\x23\x46\xcf\x89\x2f\xb4\xa6\x1e\xcb\x6f\x91\xd8\x34\x9c\x87\xe5\x4d\x36\x6a\x22\xd2\xbf\x9d\x57\x7a\x67\x5c\xd7\x7a\xb7\x63\x09\x1b\xb2\x10\xdd\x02\x07\xa3\x4e\x8e\xcc\xc6\x9f\x15\xd1\xf8\xab\x78\x75\xb8\xbb\xdf\xff\xfb\xb4\x3f\x36\xf2\xec\x1c\xfc\x98\xc8\x3f\x9a\x46\x58\x57\x0b\x9d\xad\x27\xd0\x8c\xff\xf7\xdd\x5d\x7e\x27\xca\x83\x58\x7e\xb8\xb9\x45\x01\x47\xdc\xa0\xe2\x35\x95\x3b\x50\x86\x29\x6a\x5a\x55\x35\x0f\xee\x0d\xc1\x0f\x08\x92\x3a\x5d\x82\x78\x24\x55\x86\x98\xb7\x80\x7f\x4b\x74\x2e\x54\x01\x87\x5c\x52\x68\xed\x40\x19\xa8\xd1\x22\xf4\x8a\x6b\xaf\x32\x62\xa0\x0d\xb8\x5e\xb1\xac\xdf\x48\xe1\x94\xa9\x80\x0c\xf8\xb1\xe1\x42\xfe\x75\xc7\xfe\x10\xd7\xca\x81\x14\x9e\xb6\x87\x68\xd1\x6e\xc8\x36\xc2\x48\x84\x4a\x28\xe3\xaf\xc2\x10\x03\xd7\x82\xa1\xb2\x28\x78\x02\xc2\x94\xa0\xf8\x3f\x0e\xb4\xe7\x52\xa1\x41\x2b\x98\x2c\x48\x2a\xd1\x2b\xba\x11\xca\xb0\x50\x26\xc0\x30\x41\x49\xa0\x38\x02\xf5\x62\x97\x3f\x1b\x42\x6d\xa0\x47\x70\x9d\x6b\x51\x0e\x01\x61\xc6\xad\x89\x59\xa3\x41\xb9\x9d\x40\x6b\x69\xa3\x34\xfa\x0c\x1e\xd7\xf5\xa2\x85\xb5\x90\x5b\x18\xfa\xf6\x5c\x21\x82\x68\x5b\x4b\x42\xd6\x69\xa2\x4c\xdb\x71\x10\xc2\x20\x98\xfc\xc5\x84\x98\xf9\xcd\xaf\xca\xa2\x89\x46\x08\x81\x13\x08\xc9\x7e\x40\x25\x3f\xeb\x45\x18\x7e\x2f\x44\x23\xcb\x50\xc4\x8b\xd9\x7a\x25\x58\x7c\x0f\xf7\xcb\xe3\x91\x09\xc8\xf2\xd7\xb0\xd7\x9e\x9e\x7f\x29\xf3\x39\xf6\xb7\x54\x55\x68\xb3\x18\xe8\x0b\x3a\xce\xcd\x3a\x97\xf9\x35\x72\x26\xcb\x09\xe8\xb8\xff\xf9\xe4\x3b\x24\xff\x71\xd6\x91\x66\x7e\x4b\x15\x9c\x83\xce\x97\x6c\x95\xa9\xb2\x9f\xa9\xc8\xff\x8d\x3e\x9e\x0a\x59\x1f\x1e\x21\x30\x88\xe5\xe1\xd1\xd4\xa1\x46\x2f\x4d\x29\x5a\xee\x2c\x46\x9f\x50\xc7\x6d\xc7\xcf\xba\x6f\xe8\x11\xa3\xdc\x99\x40\x80\xdb\x19\x99\xdf\x11\xe9\xa0\xf0\xca\x8a\x35\x90\x41\xd8\x58\x6a\xbc\xc4\x2d\x02\x7a\x40\x56\x4d\xb0\x97\x13\x8f\xe8\xad\x2c\xb4\x26\xe9\x9f\x89\xa2\xf0\x16\x0d\x7b\xc2\xec\xfc\x51\xff\xba\x78\xc3\x7b\x8c\x33\xb8\xa2\x60\xe1\x8a\x40\x94\x61\x59\x99\x17\x98\x7e\x60\x50\xc7\xd0\x99\x12\xad\x63\x61\x42\x48\x4d\xbd\xc7\xde\x85\xec\x3d\xd9\x6d\xe0\x16\x56\xe9\xe8\x49\x4f\x06\xd1\x5f\xd6\x90\xd8\x63\xf7\x4a\x6b\x3f\xa6\x3b\xa1\xf5\x0e\x1a\xb1\xf5\x8f\x5e\xa9\x36\x1b\xb4\xe8\xa7\xca\xd9\x18\x66\xbe\x29\x6c\x95\xdc\xee\x40\x29\x2b\x87\x91\x50\x0b\x76\xd0\xd7\xbb\x17\x93\x20\xb4\xcb\x23\xfb\x02\xe2\xe7\x7c\x9a\x26\xd1\xd4\x5e\x3b\x27\xec\x7d\x11\x96\xbc\x47\x62\xdf\x8f\x3a\x8b\xb1\xf9\x7d\x67\xb2\xa8\x3f\x15\xfd\xad\xc7\xbf\xe0\xa9\xfd\xb2\x30\x8f\x5b\x8b\x40\x1f\xce\x8f\xfa\x59\x4f\xe0\x0f\x18\x0c\xff\x61\xb0\xfb\x21\x7a\x0c\xa1\x85\x5e\x2d\x71\x64\xd7\xfe\x42\x7a\x04\x29\x4c\x98\xc0\x9b\xd8\x56\xb4\xd6\x6b\x66\xa8\x2e\x5b\x8f\xd3\xfd\x3f\x01\x00\x00\xff\xff\x33\x46\x39\x29\xb9\x0b\x00\x00")

func templatesServerHttpHandler_xTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerHttpHandler_xTemplate,
		"templates/server/http/handler_x.template",
	)
}

func templatesServerHttpHandler_xTemplate() (*asset, error) {
	bytes, err := templatesServerHttpHandler_xTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/http/handler_x.template", size: 3001, mode: os.FileMode(420), modTime: time.Unix(1490197038, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServerHttpServerTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\x4d\x6f\xe3\x36\x10\x3d\x8b\xbf\xe2\x41\x08\x0a\x29\x50\xa5\xb6\xc7\x60\x83\xc2\xbb\xd1\xc6\x46\x1d\xdb\xb0\xb5\x08\xf6\x54\xd0\xd2\xd8\xe2\xae\x44\xaa\x24\x55\x39\x30\xf4\xdf\x0b\x52\x89\xed\x6b\x7d\xb2\xe6\xcd\x7b\xc3\xf9\x78\x1d\x2f\x7f\xf2\x23\xa1\xb6\xb6\x63\x2c\xcb\xf0\xb4\xc6\x6a\x5d\xe0\x65\xf6\x57\x8e\x2f\xf3\xd9\xea\x39\xdf\xa1\x58\xa3\x98\x2f\x76\xf8\xba\x58\xe6\x09\x8a\x79\xfe\x1d\xaf\x8b\xe5\x12\x9f\x73\x2c\xd7\xbb\x02\x8b\xaf\xf8\xbe\xfe\x86\x6d\xfe\x9c\xaf\xf2\xed\xac\xc8\x5d\x0e\x36\xcb\x6f\xcf\x8b\x15\x63\xa2\xed\x94\xb6\x88\x58\x10\x4a\xb2\x99\xab\x14\xb2\x20\xb4\xa2\xa5\x90\xb1\x20\x3c\x9f\x91\x6e\xa6\x67\x6c\x95\xb2\x18\xc7\xac\x54\x52\x52\x69\x85\x92\x21\x8b\xfd\xb3\x56\x34\xec\x48\xff\x4b\x1a\x9a\x6c\xaf\xa5\x01\x87\xa4\xc1\xbf\x1b\xc6\x23\xec\xd0\xcb\xf2\x9a\x18\x95\xb8\xbf\xea\xa4\x5f\x78\x59\x53\x8c\xe8\xde\x31\xd2\x29\x25\x01\x69\xad\x74\x8c\x33\x0b\xb2\x0c\xc5\xfa\x69\x0d\xe2\x65\x8d\xae\xe9\x8f\x42\x42\x12\x55\xae\x50\x2f\xc5\x3f\x3d\xc1\xb7\x61\x15\xe8\xd4\x29\x43\x9e\xb2\xef\x2d\x84\xb4\xa4\x25\x6f\x9a\xb7\x04\x25\x97\xe0\x4d\x83\xde\x10\x38\x4a\xd5\xb6\x4a\x7a\x1e\x0b\x78\x55\x69\x3c\x3c\x22\x7c\x70\x0d\xcf\x8b\x62\x93\x6e\x9c\xe0\x38\x86\xd7\xea\x2d\xff\x49\xb0\x35\x19\x42\xa9\xe4\x41\x1c\x7b\xcd\xf7\x0d\xc1\xa8\x96\x6a\x35\xb0\x40\x13\xaf\x0a\xd1\x92\xea\xad\x13\x73\x43\x4c\x77\x54\x2a\x59\xe1\x7e\xfa\x7a\xea\x35\x77\x1d\x47\x97\x32\xdb\x2b\x67\x1c\x63\x16\x0c\x5a\x58\xfa\xbf\x22\xaf\x37\x24\xa7\xc2\x82\xb6\x3f\x39\xb6\x9f\xe7\xc7\xd4\x5f\xfa\x53\x14\x33\x00\xc8\x32\x28\x49\x38\x28\x3d\x8d\x94\xfb\x35\x78\xe8\x7c\xfe\x15\x9a\xcb\x23\xe1\x4e\x26\xb8\xeb\x9c\x4a\x3a\xf3\xb8\xc1\x38\xfa\x9c\xb6\x3f\xa5\x73\x2e\xab\x86\xa2\x30\x9b\xb8\x26\x3b\x9f\x71\xd7\xa5\x5b\x3e\xac\x78\x4b\x6e\x70\x89\x5b\xf7\x14\x75\xa1\x71\x9c\x28\x3a\x2a\xe3\xf8\x52\x8a\x64\xe5\x54\x59\x60\x5c\xa1\x5f\x6e\xf6\x7f\x66\x41\x30\xab\x2a\xfd\x80\xeb\xcf\xad\x29\x61\x41\xf0\xae\x74\x81\xda\xfe\xe4\xc2\x37\xb3\xf4\xd0\xcd\x3e\x1c\x7c\x3b\x25\x87\xdf\x8e\xda\xe1\x2f\xfc\x34\x27\x5e\x91\xfe\xfc\x66\xc9\x3c\xe0\x77\x7c\xfa\x84\x3f\x7e\x4b\x58\x30\xba\xdd\xba\xcb\x86\x49\x20\x45\xc3\x46\x7f\xf7\x4b\x71\xac\x2d\x06\xcd\xbb\x8e\x34\xb8\x56\xbd\xac\xde\x2d\x20\xe4\x11\x5c\x4e\x27\x8c\x41\xd8\xda\x1d\x0e\x34\x99\x4e\x49\x43\x50\xfb\x1f\x54\x5a\x28\xe7\x19\xef\x6e\x6f\x0f\x4d\x5d\xf3\xf6\x2a\x6c\x9d\x3b\x5a\x74\xc9\x6e\xc9\x18\x7e\xa4\x74\xfb\x1e\x48\x30\x79\xeb\x12\xf0\x9d\x4d\x8e\xb9\x71\xcd\x07\x3f\xf5\x72\x78\x74\xd0\xf4\x3f\x8a\x6f\xd0\x9d\xe5\xb6\x37\x78\x44\xe8\xa9\x21\x0b\xf6\x09\xfe\x76\xeb\xf8\x61\x94\x4c\x5f\xb8\x36\x35\x6f\x2e\xaf\x89\xdd\xf5\x14\x35\x69\x82\x30\x90\xca\xd6\xae\xd7\x81\xbc\xbd\x2a\x05\x71\x80\xad\x85\xc1\x81\x8b\xc6\xfc\xc9\x82\x61\xba\xce\x68\x1f\xb3\xf1\xbf\x00\x00\x00\xff\xff\x69\x4d\x46\x4e\xd1\x04\x00\x00")

func templatesServerHttpServerTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerHttpServerTemplate,
		"templates/server/http/server.template",
	)
}

func templatesServerHttpServerTemplate() (*asset, error) {
	bytes, err := templatesServerHttpServerTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/http/server.template", size: 1233, mode: os.FileMode(420), modTime: time.Unix(1490197055, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTriggersTrigger_xTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\xdf\x6f\xdb\x36\x10\x7e\xb6\xfe\x8a\x6f\x46\x56\xc8\x85\x2c\x63\x7b\xf4\x9a\x87\x6e\x75\x1b\x63\x9e\x5d\x38\xee\x86\xbe\x95\x96\x4e\x32\x6b\x89\xd4\x48\x2a\x5e\x66\xe8\x7f\x1f\x28\x52\xfe\xd1\x38\x49\x11\x60\x79\xa2\xee\x8e\x77\xdf\xf7\xdd\xf1\x9c\x8a\x25\x5b\x96\x13\x8c\xe2\x79\x4e\x4a\x07\xc1\x68\x84\x77\x0b\xcc\x17\x2b\xfc\xf1\xf6\xf7\x09\x7e\xbb\x79\x3b\xff\x30\xb9\xc5\x6a\x81\xd5\xcd\xf4\x16\xef\xa7\xb3\x49\x84\xd5\xcd\xe4\x33\xfe\x9a\xce\x66\xf8\x75\x82\xd9\xe2\x76\x85\xe9\x7b\x7c\x5e\x7c\xc2\x72\xf2\x61\x32\x9f\x2c\xdf\xae\x26\x36\x06\x1f\x67\x9f\x3e\x4c\xe7\x41\xc0\xcb\x4a\x2a\x83\x30\x00\x80\x7e\x21\xf3\x7e\xe0\x8e\x39\x37\x9b\x7a\x1d\x27\xb2\x1c\x6d\x65\xc9\x44\x3a\xaa\x8a\x3a\xe7\x62\xa8\xd3\xed\x30\x97\x3f\x8f\x52\xae\x2b\x66\x92\x0d\xa9\x7e\x30\x08\x82\xfd\x1e\x57\x82\x95\x84\xf1\x35\xe2\xb9\x3d\x34\x4d\xb0\xdf\x0f\xa1\x98\xc8\x09\x57\x22\xc2\x55\xd5\x3a\xa7\xa2\xaa\x4d\xe7\xe5\x19\xae\xaa\x78\x22\xea\x72\xc6\x0d\x29\x56\x58\xc7\x68\x04\x17\x64\xed\xfa\x34\x0b\x8f\x70\xd5\x96\xb8\x78\xe9\x80\xa1\x69\x56\x4e\xb6\x36\x8d\x35\x53\x87\x09\x5c\x83\x09\x90\xa8\x4b\x52\xcc\x50\x8a\x3b\x56\xd4\x14\x24\x52\x68\x73\xc8\xf0\x54\x82\x6b\xb8\x6f\x5f\xfb\x4f\x7b\xbd\xa3\x43\x22\x7d\xfa\xf8\x40\x8d\x45\x6d\xbe\x43\x0e\x1f\xf5\x42\x3d\x0e\x6c\x5c\x9a\x17\xe8\x81\x27\x53\xbc\x58\x11\x0f\xb2\x4d\x74\x2e\x39\x52\xca\xb8\x20\x0d\xb3\x21\xf0\xd6\x92\x49\xd5\x7e\x75\x17\x8e\x98\x02\x73\x5f\x5d\xb2\xbb\x4c\xda\xa8\x3a\x31\xd8\xb7\x73\x7d\xda\x03\x9c\x8f\x64\xd3\xf8\x08\x2b\x66\x47\xcd\x7d\xad\x6c\xfe\xa6\xc1\x97\xaf\x5a\x8a\x71\xdf\x19\x97\x6c\xe7\xa3\xfa\x5f\x0e\xb9\x3d\xb1\x47\xa8\xf9\x36\x9e\x72\x93\xce\xf4\x2d\xb9\x67\xb9\xf9\x54\xdf\x41\xee\x38\x61\xff\x13\xbd\x23\x28\xb0\x6e\x5f\x3d\x06\xfb\x1c\xf0\xdf\x35\xd5\x84\x64\xc3\x04\x5e\x3f\x46\xb1\x0d\x3c\x2e\x9b\x93\x63\xfc\xee\x70\xf4\x88\xe6\xb4\xbb\x50\x52\x91\xa9\x95\xd0\x60\x10\xb4\xc3\x7e\xff\xad\xbf\x52\xb2\x22\x55\xdc\x83\x0b\x6e\x38\x2b\xf8\xbf\x94\x82\x89\x14\x8a\x58\x7a\x0f\x23\xa1\x6a\x11\x07\x59\x2d\x92\xcb\x15\xc2\xf4\x32\xaa\xc1\x25\x56\x9e\xba\x03\x85\x57\x0f\x03\x9c\xff\x20\xcf\x18\x25\xdb\x52\xf8\xb4\x48\x11\x7e\x1a\x44\x87\x7b\x47\x30\x63\xa4\xce\xdc\xf5\xec\xd6\x76\x70\xc7\x8b\x02\xba\x5e\x97\xdc\x80\x3d\x3e\x5b\x52\x18\xe9\xdf\x9f\x21\x25\x58\xe1\x00\x45\xd8\x6d\x78\xb2\xb1\x1e\x81\x75\x9d\x65\xa4\x34\x7c\x24\xfd\x73\x1a\xe9\x24\x0b\xcd\x25\xdc\x83\x16\x4a\x28\x5d\xf2\x8c\x25\xb4\x6f\x06\x5e\x1b\x13\xbb\xc1\x78\x33\x84\x8c\xc3\xd7\x8f\x3c\xa3\x81\xa7\xb4\x24\xe6\x29\x55\xb2\xb2\xbb\x8c\x1b\x2a\x21\xb3\xec\x22\x76\x23\xb1\x26\x6c\x98\x48\x29\x7d\x09\x6a\x5b\x2d\xbc\xd8\x58\xaf\xda\x59\x7b\xdf\x0c\x3d\x97\x4e\x7e\x23\x2b\x87\x35\x29\xa4\xa6\x27\xd4\x75\x84\x14\xdd\x91\x30\xed\xdc\x7e\x95\x6b\x8d\x4c\xc9\x12\x64\x2f\x70\x91\xc7\xcf\xe8\x6b\x64\x15\x76\x92\xb6\xe5\x42\x0f\x66\x70\x40\xc3\x94\xb1\x84\x66\xb2\x83\xb5\x2e\x64\xb2\x8d\xda\xc9\xe7\x22\x47\x2d\x0c\x2f\xec\xc3\xe1\x05\x4a\xd2\xda\xfe\x47\xc2\x35\x14\x25\xc4\xef\x28\x8d\x50\x12\x13\x36\xf0\x21\x11\xec\x98\x76\x65\xd3\xe7\x70\x9e\xa0\x08\x07\x20\xa5\x64\xf7\x4a\xb2\xf6\xd4\xb3\x47\xbf\x28\xc7\xd7\x30\xb1\x6b\xc2\x61\xde\x79\xd6\x79\xaf\xaf\x5b\xa8\xc7\x27\x64\xff\x46\x23\xac\x36\x6e\xcd\x08\x2a\x4e\x70\x45\xd8\x11\x72\x69\xda\x1f\xc0\xb2\x32\xf7\x43\x67\x1f\x5a\xfa\x11\xb4\xb4\xfe\x35\xe3\x85\x4d\x8f\x1d\x37\x1b\x08\x09\xae\x75\x4d\xfa\xac\x82\xef\xb6\xe0\xc5\xc1\xdc\x04\x47\xa7\xae\xa4\xd0\xed\xcf\xf4\x2b\x2f\x62\xbc\xf4\xc6\x73\xa4\xb7\x86\x99\x5a\x8f\xd1\x97\xdb\x7e\x74\xe6\x71\xc3\x35\xf6\x3c\xa3\x93\x32\xbd\x1e\xcf\xac\x66\x4e\x99\x93\x3d\xd4\xbe\xaf\xae\xf8\xe0\x97\x36\xe6\x87\x4e\x9f\x5e\xaf\x57\xc8\x3c\xfe\xa8\xb8\x30\x59\xd8\x5f\xda\x86\xd2\x1d\xa5\x5e\x7d\x4d\xa2\xed\xbf\xdf\xe6\x5d\xef\xc7\xf8\x51\xf7\x23\x1b\x33\xb0\x19\x3c\x6d\x52\x2a\xe8\xf5\x9a\xa0\xd7\x04\xcd\x7f\x01\x00\x00\xff\xff\xd0\xd2\x38\x62\xb7\x0a\x00\x00")

func templatesTriggersTrigger_xTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesTriggersTrigger_xTemplate,
		"templates/triggers/trigger_x.template",
	)
}

func templatesTriggersTrigger_xTemplate() (*asset, error) {
	bytes, err := templatesTriggersTrigger_xTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/triggers/trigger_x.template", size: 2743, mode: os.FileMode(420), modTime: time.Unix(1490196909, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTriggersTrigger_x_runTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x93\xcf\x6b\xdb\x4e\x10\xc5\xef\xfb\x57\x3c\x72\xf8\x22\x05\x7f\xad\x9c\x03\x29\x84\x9c\x7a\x69\x4b\x08\x85\x52\x7a\xd8\x48\x63\x79\xf1\x6a\x46\xec\x8f\x14\x63\xf4\xbf\x97\x5d\xad\x5c\x37\x71\xd2\x43\x0f\x85\xfa\x60\xa4\x9d\xd9\x7d\x4f\x9f\x37\x3b\xea\x76\xa7\x7b\x42\x70\xa6\xef\xc9\x79\xa5\xcc\x30\x8a\x0b\xa8\x14\x00\x5c\x1c\x0e\x58\x7f\x9a\x7b\xee\x45\x02\xa6\xa9\x69\x85\x99\xda\x60\x84\x2f\x54\xad\x54\xd3\xe0\xb3\xb6\xa6\xd3\x81\xf0\xdd\x58\x8b\xa7\xe5\x2d\x6c\x09\x86\xc7\x18\x60\x3c\x46\x27\x23\x39\xbb\x87\xa7\x10\xc7\xb5\xda\x44\x6e\x51\x19\x5c\x26\x85\x0f\x7a\x20\x4c\xd3\xc3\x6c\xe2\x7d\xda\x53\x1f\x4f\xad\x6a\x7c\xfd\x46\xce\x89\xc3\x21\x9b\xca\xcf\x1e\xd7\x37\x18\xf4\x8e\xaa\x52\x5c\xe1\xaa\xce\xe5\xfc\xd7\x34\xb8\x8b\x3e\xc8\xb0\xd8\x31\xc2\x68\xa5\x23\x6c\xc9\xd1\xd2\x72\x3b\x8e\xc4\xdd\x72\xa0\xf6\x60\xa2\x8e\x3a\xb5\xd4\x1d\x85\xe8\x38\xbf\x99\x0d\x2c\x71\x35\xb7\xd6\x78\x87\xab\xe2\x26\xfd\xe6\xbe\x72\x4e\x5e\x9d\xd4\xc9\x3a\x1b\xab\xa6\xdf\x91\x92\x18\xde\x44\x25\xe7\x50\x7d\xcc\x9b\xfe\x4d\x56\xf7\x91\xe1\x22\xfb\x4c\xa7\xcc\x27\x34\x77\x78\xb4\xd2\xee\x3c\x22\x07\x63\x7f\x29\x8e\x62\xad\xe1\x3e\x31\x6c\x65\x18\x2d\x05\x82\xb8\x45\x6a\xc6\x18\xce\x61\xac\x93\x58\x95\x06\x1b\x97\x3f\xc7\x7b\x7d\x77\x7c\x5c\x95\x41\x3e\xee\x7d\x3e\xac\xa7\xcc\x9b\x06\xa5\xe8\xd1\x09\x58\x02\xb6\xfa\x69\x4e\xd9\x27\x5d\x2b\x7d\x9f\x7c\xb6\xc2\x2d\x39\x4e\x30\x6f\xb3\x8c\xc7\xff\xd8\x4b\xc4\xa0\xf7\xa9\x09\xd1\xa7\x36\x1f\x34\x77\xda\x75\xd8\x0c\x21\x03\x48\xa5\x72\x71\x67\x82\x9b\xa3\x76\xd1\xff\x22\xd1\x3d\x8b\x70\x52\xe7\x31\x3f\x90\x0f\x2f\x38\xaf\xf0\x18\x03\x3a\x21\x9f\xed\x67\xe2\x59\x5a\xd8\xee\x5f\xa6\xb2\x80\x17\x26\x04\x33\xd0\xdb\xac\x93\xe2\x1f\xc1\xae\x5e\xbd\x09\xab\x39\x88\xfa\xaf\x25\x51\x6e\xf1\xf5\x0d\xfe\x7b\xcd\xe3\x61\x52\xe7\x53\x3a\xcd\x47\xca\xe7\xe4\x9c\x7e\x04\x00\x00\xff\xff\xa2\x00\xd3\xf1\xa5\x05\x00\x00")

func templatesTriggersTrigger_x_runTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesTriggersTrigger_x_runTemplate,
		"templates/triggers/trigger_x_run.template",
	)
}

func templatesTriggersTrigger_x_runTemplate() (*asset, error) {
	bytes, err := templatesTriggersTrigger_x_runTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/triggers/trigger_x_run.template", size: 1445, mode: os.FileMode(420), modTime: time.Unix(1490194044, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTypesType_xTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x51\xcb\x8e\x9b\x30\x14\xdd\xfb\x2b\x8e\x22\x56\x55\x1a\xf6\x91\xb2\x48\x5b\x27\x41\xa5\x50\x05\xd2\x2a\xbb\x38\x70\x49\x69\x8d\x41\xd8\x74\x34\x42\xfc\xfb\xc8\xc4\x79\x4c\x34\xb3\x99\xdd\x7d\x9c\xc7\xf5\x71\x23\xb2\x7f\xe2\x44\x30\xcf\x0d\x69\xc6\x7c\x1f\xdf\x62\x44\x71\x8a\x1f\xcb\xef\x1c\x5f\x37\xcb\x68\xcd\x13\xa4\x31\xd2\x4d\x90\x60\x15\x84\x7c\x8a\x74\xc3\xf7\xf8\x1d\x84\x21\xbe\x70\x84\x71\x92\x22\x58\x61\x1f\xef\xb0\xe5\x6b\x1e\xf1\xed\x32\xe5\x16\x83\x9f\xe1\x6e\x1d\x44\x8c\xf5\x3d\xbc\x48\x54\x84\xf9\x02\xb3\xb1\x18\x06\xd6\xf7\x9f\xd1\x0a\x75\x22\x78\x6a\x0a\xaf\x19\x97\xab\x92\x64\xae\x1f\xd6\xe5\x14\xde\xc8\xf5\x9a\x19\x57\x5d\x15\x96\x86\x5a\x21\x2d\xca\xf7\x71\x15\x1f\x06\x5b\xd2\xc5\x00\xa5\x86\x50\x20\xd5\x55\xd4\x0a\x43\x39\xfe\x0b\xd9\x11\xcb\x6a\xa5\xcd\xfb\xac\x05\xce\xbd\x33\xf9\x65\x39\x97\x7b\x48\xe5\xb7\xca\x0e\x9d\xff\x2b\x4b\x64\x9d\x36\x75\x35\x06\x8a\x13\x29\x67\x5e\x17\x05\xea\x02\xe6\x0f\x41\x37\x94\xb1\x71\x7d\xcf\xd5\xa6\xed\x32\x83\x9e\x01\xc0\x9b\xe1\x24\x75\x6b\x28\xbf\x45\x74\x01\x96\xc5\x98\x4c\x75\xa4\xfc\x36\x76\xd3\xa8\x93\x52\x1c\xa5\x75\xf8\xd4\xf7\xee\x6e\xfb\xc2\x66\x96\xda\x1f\x0f\x94\xa1\x56\x09\x69\x9b\x3b\x32\x49\x7d\xdf\x5a\x21\x77\xe6\x47\x95\x71\xf8\xab\x6b\x35\x9f\x9c\x11\x5b\xf1\xe4\x04\x27\x87\xeb\x3b\x5c\xa8\x0f\xed\xf0\x12\x00\x00\xff\xff\x9b\x9b\x4a\x47\xa2\x02\x00\x00")

func templatesTypesType_xTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesTypesType_xTemplate,
		"templates/types/type_x.template",
	)
}

func templatesTypesType_xTemplate() (*asset, error) {
	bytes, err := templatesTypesType_xTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/types/type_x.template", size: 674, mode: os.FileMode(420), modTime: time.Unix(1490194044, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesVendorGitkeep = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func templatesVendorGitkeepBytes() ([]byte, error) {
	return bindataRead(
		_templatesVendorGitkeep,
		"templates/vendor/.gitkeep",
	)
}

func templatesVendorGitkeep() (*asset, error) {
	bytes, err := templatesVendorGitkeepBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/vendor/.gitkeep", size: 0, mode: os.FileMode(420), modTime: time.Unix(1490194044, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/Dockerfile.template": templatesDockerfileTemplate,
	"templates/Makefile.template": templatesMakefileTemplate,
	"templates/actions/action_x.template": templatesActionsAction_xTemplate,
	"templates/actions/action_x_run.template": templatesActionsAction_x_runTemplate,
	"templates/cmd/main.template": templatesCmdMainTemplate,
	"templates/connection/cache.template": templatesConnectionCacheTemplate,
	"templates/connection/connect.template": templatesConnectionConnectTemplate,
	"templates/connection/connection.template": templatesConnectionConnectionTemplate,
	"templates/server/http/handler_x.template": templatesServerHttpHandler_xTemplate,
	"templates/server/http/server.template": templatesServerHttpServerTemplate,
	"templates/triggers/trigger_x.template": templatesTriggersTrigger_xTemplate,
	"templates/triggers/trigger_x_run.template": templatesTriggersTrigger_x_runTemplate,
	"templates/types/type_x.template": templatesTypesType_xTemplate,
	"templates/vendor/.gitkeep": templatesVendorGitkeep,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"Dockerfile.template": &bintree{templatesDockerfileTemplate, map[string]*bintree{}},
		"Makefile.template": &bintree{templatesMakefileTemplate, map[string]*bintree{}},
		"actions": &bintree{nil, map[string]*bintree{
			"action_x.template": &bintree{templatesActionsAction_xTemplate, map[string]*bintree{}},
			"action_x_run.template": &bintree{templatesActionsAction_x_runTemplate, map[string]*bintree{}},
		}},
		"cmd": &bintree{nil, map[string]*bintree{
			"main.template": &bintree{templatesCmdMainTemplate, map[string]*bintree{}},
		}},
		"connection": &bintree{nil, map[string]*bintree{
			"cache.template": &bintree{templatesConnectionCacheTemplate, map[string]*bintree{}},
			"connect.template": &bintree{templatesConnectionConnectTemplate, map[string]*bintree{}},
			"connection.template": &bintree{templatesConnectionConnectionTemplate, map[string]*bintree{}},
		}},
		"server": &bintree{nil, map[string]*bintree{
			"http": &bintree{nil, map[string]*bintree{
				"handler_x.template": &bintree{templatesServerHttpHandler_xTemplate, map[string]*bintree{}},
				"server.template": &bintree{templatesServerHttpServerTemplate, map[string]*bintree{}},
			}},
		}},
		"triggers": &bintree{nil, map[string]*bintree{
			"trigger_x.template": &bintree{templatesTriggersTrigger_xTemplate, map[string]*bintree{}},
			"trigger_x_run.template": &bintree{templatesTriggersTrigger_x_runTemplate, map[string]*bintree{}},
		}},
		"types": &bintree{nil, map[string]*bintree{
			"type_x.template": &bintree{templatesTypesType_xTemplate, map[string]*bintree{}},
		}},
		"vendor": &bintree{nil, map[string]*bintree{
			".gitkeep": &bintree{templatesVendorGitkeep, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

