// Code generated by go-bindata.
// sources:
// templates/Dockerfile.template
// templates/Makefile.template
// templates/actions/action_x.template
// templates/actions/action_x_custom.template
// templates/cmd/main.template
// templates/connection/cache.template
// templates/connection/connection.template
// templates/connection/connection_custom.template
// templates/server/http/handler_x.template
// templates/server/http/server.template
// templates/triggers/trigger_x.template
// templates/triggers/trigger_x_custom.template
// templates/types/sdk_file.template
// templates/types/type_x.template
// templates/vendor/.gitkeep
// DO NOT EDIT!

package sdk

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesDockerfileTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\x4f\x4f\xc3\x20\x18\xc6\xef\x7c\x8a\x37\xbb\x17\x9c\x89\x17\x93\x1e\x66\x8a\xa6\x71\x83\x86\xd4\xa9\x31\x1e\xb0\x45\x42\x18\xd0\xd0\x7a\x98\x0d\xdf\xdd\x2c\xa5\x27\xf5\xc8\xc3\xf3\xe7\xf7\xde\x0b\x7e\x00\x1b\x9c\xf4\x3d\xd1\xa1\x18\x4e\x5f\xda\xf8\xdb\x2b\x7c\x0d\x68\xbf\xbb\xa3\x7b\x08\x51\x4b\x6f\xbe\xe5\x64\x82\x2f\x17\x63\xfe\x19\x7b\x5b\xea\x90\x1f\xd3\x79\x50\xe5\x92\x46\x88\xb2\x23\x3c\xf0\xed\xcd\x91\xb2\x8a\x0b\xfa\xd2\x50\x51\x1f\x28\x6b\xcb\x2d\x42\xe2\x89\x81\xb3\xbd\x89\x50\x0c\x40\xf2\xf2\x12\x1c\xc9\x87\xf1\x68\x57\x55\x80\x81\xe8\x40\xc6\xd8\x91\x79\x06\xdc\xc8\xce\x4a\xad\x44\x08\x13\xa4\x84\x9e\xb9\x78\xac\x6a\xf1\x9f\x25\x25\xb4\x74\xe4\x56\x3c\x0e\xaa\xc3\x67\xe9\x4e\xf0\x4b\xc9\x38\xd2\x2a\x58\xd9\x2f\x42\x74\x50\xc4\xcf\x75\xe0\x72\x4f\x2b\x5e\x1b\x5e\xb3\x16\xde\x36\x7f\x30\x93\x79\xc6\x4c\x3a\x95\xd2\xe6\x1d\xfd\x04\x00\x00\xff\xff\xc4\x7a\x21\x4f\x52\x01\x00\x00")

func templatesDockerfileTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesDockerfileTemplate,
		"templates/Dockerfile.template",
	)
}

func templatesDockerfileTemplate() (*asset, error) {
	bytes, err := templatesDockerfileTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/Dockerfile.template", size: 338, mode: os.FileMode(420), modTime: time.Unix(1490194044, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesMakefileTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x6d\x6f\xdb\x36\x10\xfe\x2c\xfe\x8a\xab\x67\xd8\x56\x50\x92\x71\xb0\x6e\x80\xb6\xb4\x29\x92\x2c\x2d\x8a\xd9\x41\xd2\x17\x0c\xd3\x5a\x30\x12\x2d\x11\x96\x48\x81\xa4\x9c\xa5\x75\xff\xfb\x40\x4a\xf2\x4b\x9c\xb8\xf9\xb2\x2f\x41\x7c\x77\xbc\x7b\x9e\xbb\x87\x27\x7e\x3c\xbf\xba\x7e\x3b\x9d\xbc\x3a\xee\x8f\x4c\xce\x8b\x02\x32\xcd\x2b\x18\x7e\x5e\x70\x6d\x84\x92\x11\x0c\xa1\x2a\xea\x4c\x48\x62\x2a\x9e\x90\x3b\x56\x16\xb0\x04\xc3\x53\x18\x1a\xba\x0a\xa2\x74\x18\xa2\xc9\xeb\x3f\xcf\x77\xf2\x48\x56\xf2\xfd\x49\x9a\x08\x9f\xe1\x7c\x72\x3a\x3d\x7b\x3b\xb9\x88\x56\x59\x6e\x98\xe1\xbf\xfc\x0c\x22\x51\x92\x54\x32\x83\xa3\x97\x34\xe5\x0b\x2a\xeb\x62\x9d\x61\x49\x97\x71\x4c\x97\xd9\x10\x96\x60\x35\xe0\x14\x86\xb1\x1c\x86\xe8\xe3\xf9\xe4\x6c\x7a\xf5\x00\x33\x99\x2a\xfd\x23\x62\x4d\x8c\x47\x75\xfa\xe9\xec\xd5\x16\x20\x87\x18\xfa\xa3\xcb\x4f\x67\x61\x88\xbe\x6c\xd3\xe6\x49\xae\xa0\x3f\x72\xc6\x10\x96\xc0\x6e\xe7\x30\xfc\x06\x95\x16\xd2\x82\x55\x75\x55\x71\x3d\x32\xf5\x8d\xb1\x7a\xd4\xef\x1f\x3e\x1f\x3f\x1f\x87\x21\x58\x55\xa8\xdb\x6d\xc7\x51\x18\xc2\xf7\x61\x88\xd0\xe5\xbb\x8b\xe3\xfe\xa8\xe1\x12\xe2\x36\x33\x76\x16\x3f\xb8\x90\x58\xa6\x49\xf6\x15\xa1\xb3\xeb\xf7\xaf\x8e\xe9\x5c\x95\x4c\xa6\xb4\xa1\x66\xe8\x8d\x90\x08\x5d\x9d\x5f\x4e\x8f\xbf\x7d\x03\x72\xc9\x92\x39\xcb\xf8\x95\x52\x16\xbe\x7f\x47\x62\x26\x53\x3e\x03\xe7\x46\x81\x0f\x6a\xd3\x23\x2e\x53\x31\x43\x88\x15\x45\xe4\x7b\x0f\xa2\x64\x19\x87\xaa\x39\x0f\xba\x96\x92\x6b\x84\x9a\x2a\x11\x08\x69\x2c\x2b\x0a\x84\x6e\x6a\x51\xa4\x11\x0a\x4e\x7c\x1b\x7a\x1f\x8c\x90\x19\x68\x5e\xb9\x96\xb8\x02\x61\x0f\x05\x96\x1b\xeb\x86\xd4\x1f\x5d\x4c\x2f\x5f\xbf\x7f\x13\x52\xa3\x13\xda\xfa\x61\xb9\x84\x42\x02\x36\x6d\x7f\x1f\x89\x42\x41\x39\x4f\x85\x06\x5c\x81\x63\x18\x64\x0a\x7c\x69\xc0\xca\x19\x68\x37\x80\x07\x4f\xd3\xa4\x4c\x69\xc9\x84\x24\x99\x42\xa8\xc5\x1e\x35\x09\x50\x90\x54\x80\xf5\xbd\x24\x67\xd7\xef\x43\x84\x5c\x23\x1c\xb7\x86\xc0\x6c\x2d\xca\xc1\x00\x62\x14\x38\xe9\x60\x41\x6e\x6a\xe8\xd1\xcf\xce\x47\x0d\x8d\x47\xfe\x10\xc4\x21\x39\xa0\xf1\x38\xee\xa5\xcc\xb2\xc8\x37\x33\xa6\x95\xcc\x7e\x6b\xf4\xfd\xbc\x3f\xea\xa4\x1f\xc6\x3d\xda\x7b\x40\x99\x4e\xda\x35\x47\xc1\x89\x2e\x5d\xed\x03\x57\xa7\x33\xa2\x76\x2e\x11\x0a\x9c\x57\xcf\x5c\xf3\xde\x5d\x84\x28\xb0\x4c\x03\x4e\x16\x5f\x3b\x0b\x60\xcc\xff\x4d\x8a\x3a\xe5\xc7\xad\xe1\x00\x21\x0f\x27\x42\x41\xaa\x92\x39\xd7\x5d\x23\x71\xe5\xee\x18\xb6\xb0\x12\x5f\xd7\x90\x68\x2d\x3e\x20\xab\x63\x96\x65\xfb\x43\x77\x9d\x05\x73\xad\x44\x48\xf3\x8c\x4b\xae\x99\xe5\x2b\xe9\x5c\x34\x06\x27\x1f\xc9\x6f\xdb\x7e\x80\x99\xf3\x82\x5b\x25\x57\x43\x48\x81\x90\xd5\x9c\x96\x4b\x28\x17\xae\x39\xde\x76\xea\xd4\xb3\xf6\xa2\xe0\xe4\x36\x17\x49\x0e\xcd\x05\x81\xf1\xc6\x22\x19\x0c\x3a\x6b\x5b\xa7\x83\x03\x99\xda\x1d\x05\xc6\x15\xb3\x5d\x1e\x5b\x56\x1b\xb3\xf1\xd0\xa7\x0b\xae\x0b\x76\xe7\xa0\xdf\x83\x0d\x56\x81\xcd\x39\x24\xb5\xd6\x5c\x5a\x48\x85\xe6\x89\x55\xfa\x6e\x83\xcf\x3a\xed\x60\x00\xa9\x98\xcd\x00\xd7\x13\xbd\x49\x73\x15\x41\xe1\x65\xb7\x69\x88\x8f\x5c\x03\xe9\x24\xba\xe5\x1e\x0c\xa0\x62\x36\xc9\xdd\xed\xc2\xd5\x18\x7e\x7f\xec\x74\x27\x31\xa5\x45\x06\x07\x8d\xf7\x80\x64\x5f\x77\x0a\xdc\x83\xdb\x8a\x6f\xb7\x33\xa8\x59\x18\x51\x57\x10\xeb\x5a\x76\x46\x9c\x5b\x5b\x6d\x79\xbc\x05\xa1\x0d\x8b\x93\x85\x5f\xa1\x33\xe8\xfd\xf4\xcc\x2d\x35\x6a\xf2\x58\xb6\xca\xd3\xb5\x04\x8c\x5d\x71\xb1\x5f\x81\x71\xbf\x7f\xd2\x83\x97\xb0\xea\xa5\xc7\x11\x9c\x24\x79\xa9\x52\xf8\xf5\xc5\x8b\x1d\x4f\xb3\xc6\xfe\xc6\xff\xc0\x07\xc3\xb7\xbd\x80\x71\xce\x8b\xca\xcd\xd4\xfd\x72\x73\x6d\xa5\xd2\xdb\xc2\xde\xf0\x7b\x22\x81\x0a\xc6\x87\x87\x87\x63\x7c\xe4\xfe\x46\xfe\xff\x1f\xb2\x72\xf9\x77\x58\x35\x3d\x7c\x94\x5a\xe7\xde\xc3\xcf\x87\xec\x25\xe9\x3c\x9b\xfb\x90\x10\x6a\x95\x2a\x0c\x75\x0e\x52\xdd\xb9\xf1\x37\x05\x4e\x73\x9e\xcc\xc1\x5d\x21\x70\x11\x20\x95\x05\x21\xfd\x1e\x4a\x41\x48\x48\x6a\x63\x55\xc9\x75\xf7\x21\x31\xcf\x7a\xfb\xf2\x3a\x21\xdf\xd9\x5c\xc9\xa3\x5d\x1f\xa1\xf7\x2f\x2c\x42\x0b\x56\x88\xb4\xdd\x2e\x3b\x49\x13\x87\xed\x8b\x8f\xfe\x1f\x20\x6f\x67\x7f\x08\xf8\x76\xc4\x43\xf0\x53\x5e\x99\xc8\x7f\xe3\x32\x6e\x01\xd7\x90\x2b\x29\xf9\x8c\x24\x8a\x66\xaa\xcb\x52\xa6\x34\x53\x46\x94\x55\xc1\x9f\x10\x6a\x2c\xb3\x22\xf1\xa5\x9f\x10\x5d\xcb\xda\xf0\x74\x33\x30\x13\x36\xaf\x6f\x48\xa2\x4a\xfa\x87\x28\xd4\xb5\xb2\x56\x14\x9c\x66\x0b\x8b\x90\xcf\x1a\xa1\x60\xa3\x06\xf4\xfb\xa3\x4c\x41\x21\x8c\x05\x42\x09\x21\xb0\x6c\x5e\x63\x78\x01\xed\x5b\x8b\x86\x2e\x7f\x43\xe0\x89\xe1\x0d\xac\xa7\x05\x23\x72\xf9\x66\x3a\xf9\x2b\x02\xe6\xde\x70\xfe\x0b\xd7\x3d\x66\xda\xa7\x4d\xb3\xaa\xd7\x9f\x22\x70\x6d\x87\xa6\x45\xff\x05\x00\x00\xff\xff\x07\xec\x72\x77\x25\x0b\x00\x00")

func templatesMakefileTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesMakefileTemplate,
		"templates/Makefile.template",
	)
}

func templatesMakefileTemplate() (*asset, error) {
	bytes, err := templatesMakefileTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/Makefile.template", size: 2853, mode: os.FileMode(420), modTime: time.Unix(1490910698, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesActionsAction_xTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x53\x51\x6b\xf2\x30\x14\x7d\xcf\xaf\x38\x48\x1f\xfd\xec\xbb\xe0\xc3\xc7\xa7\x88\xf8\xa1\xb0\xc9\x9e\xcd\xda\x6b\x97\x69\x6f\x4a\x9b\x6e\x48\xc9\x7f\x1f\x4d\x52\xe9\x56\x41\x11\xf6\x96\x9b\x7b\xce\xcd\x39\x27\x49\x21\x93\xa3\xcc\x08\x32\x31\x4a\x73\x25\x44\x1c\xe3\x9f\x4e\x09\x19\x31\x95\xd2\x50\x8a\xd7\x33\xcc\x1b\x61\xad\x73\xc9\x29\x96\x1a\xcf\xf3\x35\x96\xbe\xad\xcb\x09\xe6\x5b\x6c\xb6\x3b\x2c\xe6\xab\x9d\x10\x4d\x83\x88\x65\x4e\x98\xce\x30\xd9\xb4\x0b\x6b\x45\xd3\xfc\x41\x29\x39\x23\x44\x3c\x46\x54\xb8\xe6\x8a\x8b\xda\x74\x5d\x75\x40\x54\x4c\x16\x5c\xe7\xff\x95\xa1\x52\x9e\xda\x46\x1c\xc3\x83\xda\xfd\xaa\x3f\x45\x8d\x11\xb9\x23\xae\x92\x2e\x1a\xac\x75\xfc\xb6\xa6\x4e\x0c\x54\x05\xc9\x20\xae\xf3\xe0\xef\x43\x9e\x6a\x12\x89\xe6\xca\xdc\xa0\xce\xe0\xeb\x70\xdc\x4b\x4b\xec\x1c\x10\xa7\xbd\xe5\x70\x73\xe0\x7f\x5b\x9b\x3b\x02\x08\xa8\xc7\x13\xf0\x03\x1e\x8b\xe0\x1a\xf7\xfe\x0c\x7e\x2c\x83\xae\x6e\x90\xbf\x59\x55\xb9\xb7\xa5\x5c\x71\xd0\x65\x1f\x21\xcc\xb9\xa0\x21\xa5\x32\x65\x9d\x18\x34\x02\x00\xfa\xc9\xe2\xfb\xd3\xb2\x36\x20\xda\x88\x3a\xf5\xbe\xda\xb5\x83\xad\xc5\xfe\xbd\xd2\x3c\x1d\xf9\xcd\x27\xf9\x19\x50\xa3\xfd\x65\x76\xd0\x3e\x50\x1f\xae\x25\xc8\xd7\xbe\xba\xa5\x3f\x90\xee\x30\xe0\x91\xbf\xea\xe0\xaf\xfb\xf0\xe1\x29\xf8\xdf\xef\xbc\x14\xa7\x3a\x53\x8c\x44\x32\x8c\x3c\xd2\xc0\x44\xe0\x75\x26\xec\x57\x00\x00\x00\xff\xff\x17\x16\x94\x79\x41\x04\x00\x00")

func templatesActionsAction_xTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesActionsAction_xTemplate,
		"templates/actions/action_x.template",
	)
}

func templatesActionsAction_xTemplate() (*asset, error) {
	bytes, err := templatesActionsAction_xTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/actions/action_x.template", size: 1089, mode: os.FileMode(420), modTime: time.Unix(1490844495, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesActionsAction_x_customTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x55\x5d\xab\xdc\x36\x10\x7d\xf7\xaf\x38\xdc\x87\xb2\x1b\x9c\x75\xe8\x63\x20\x85\x4b\xa0\x10\x5a\x92\x10\xda\x42\x28\x85\x68\xad\x59\x5b\x59\x59\x63\x34\xd2\x5d\x96\xcb\xfe\xf7\x32\xb2\xbd\x1f\xf7\x42\x5b\xda\xa7\x96\xee\xc3\x62\x4b\xa3\x99\x33\x67\x8e\x8e\x47\xd3\xee\x4d\x47\x30\x6d\x72\x1c\xa4\xaa\xdc\x30\x72\x4c\x58\x55\x00\x70\xf7\xf8\x88\xcd\xc7\x29\xe4\x13\x73\xc2\xe9\xd4\xb4\x1c\x02\x95\xe8\xbb\x12\x33\x7a\xee\x70\xd7\xb9\xd4\xe7\xed\xa6\xe5\xa1\xd9\xf3\x60\x82\x6d\x46\x9f\x3b\x17\x5e\x8a\xdd\xbf\xec\xf8\xdb\xc6\x73\x77\x57\xad\xab\xaa\x69\xf0\x8b\xf1\xce\x9a\x44\x38\x38\xef\xf1\xb0\xbc\xa5\x9e\xe0\xc2\x98\x13\x9c\x60\x8c\x3c\x52\xf4\x47\x08\xa5\x3c\xe2\xe0\x52\x8f\x43\x6f\x12\x3d\x50\x44\xcc\x9e\x04\x47\xce\x28\xd1\x41\x93\x7e\xe6\x8c\xd6\x04\x18\x2f\x8c\x2c\x9a\xce\x09\x12\x63\x8c\xf4\x52\x28\xc1\x84\xa3\xd6\xca\x24\xd8\xd2\x8e\x63\x29\x78\x84\x89\x84\x98\x03\xb6\xc7\x02\xe0\x53\x0e\x18\x28\xf5\x6c\x37\x9a\xf5\x3d\x17\x60\x26\x61\xc7\x11\xf7\x13\x49\x75\x89\xc4\xbb\x82\x75\x20\x11\x25\xd0\x09\x5c\x90\x91\xda\x44\x16\x8a\xf2\x88\xe4\x06\x2a\x7f\x35\xbe\x66\x49\x4b\x59\x97\x34\xb3\x13\xf4\x26\x58\xb2\x8a\xf1\x49\x65\xfc\x40\x34\x4e\x0d\xb8\x80\xc1\x05\x8b\x43\x4f\x41\xb9\x48\x2e\x74\xa5\x95\x89\xa0\xe4\x48\xc0\xa1\x24\x98\xf0\xb8\x6b\x32\x22\xa5\x1c\x03\x8c\x9e\x04\xef\x40\x31\x72\x94\xd2\x8b\xe6\x88\x64\x44\x0f\x33\x76\xc6\xf9\x92\x44\x12\x8d\xa5\xf3\x0f\xa9\xa7\x78\x70\x42\xf5\x92\x25\x38\x5f\x4e\x4a\x6e\x5b\x12\xa9\x76\x39\xb4\x58\x39\xbc\x50\x91\xbc\x37\x03\xe1\x74\x2a\x18\xd6\xe7\x09\xaf\xd6\xf8\xf5\xb7\x52\x14\x8f\x45\x2c\x14\xa3\xe0\xf5\x1b\x0c\x66\x4f\xab\x79\xab\xc6\xab\x75\xd9\x2c\x7f\x4d\x83\xb7\x59\x12\x0f\x8b\x30\x1c\x07\xb4\x6c\x09\x3d\x45\x5a\x42\xee\xc7\x91\x82\x5d\xfa\x31\x82\x40\x64\xc9\x56\xcb\xfe\x04\xb9\xbc\xb9\x1d\x3c\x85\x95\x56\x5e\xe3\x3b\xbc\x9a\x91\xe8\x6f\x6e\x4c\xb7\xca\xda\xa9\xba\x5a\x0d\xce\x57\xa7\x3f\xd3\x2b\xe7\xf4\x4f\x05\xeb\xc9\x3c\xcc\x6a\xdd\x7a\x13\xf6\x0a\x58\x23\x0f\x26\x24\x24\xae\xb1\xd5\x23\xd3\x9a\x76\xa9\xe3\xa2\xb0\xe3\xd8\x12\x22\x49\x8a\x6e\xbe\xba\x4d\x53\x28\x52\x30\x87\xf2\x70\x7c\xaa\x82\x90\x87\x2d\xc5\x8b\x10\x36\x7f\x79\xca\x7c\x33\xe5\x0f\xa5\xeb\xff\xda\x98\xf5\x02\x96\x09\xab\x1d\xe8\x70\x27\x4f\x9c\x46\xa9\xef\x9d\x7b\xa0\x30\x5b\x14\xeb\x58\x2f\x8b\x17\x53\x9c\x09\x33\x37\x84\x4d\xc6\xb1\xd6\x12\x2b\x0d\xc5\x8b\xcb\x81\xcd\xdb\xf3\x63\x3d\x27\x7f\x76\xa3\x6a\xa8\xc9\xaa\xd3\x6e\x7e\xe4\xae\xa3\xb8\xc6\xea\xf9\x40\xea\x89\xa8\xf5\xdc\xfa\xac\xcd\xd7\x6f\xf0\xcd\xb3\xd0\xc7\xd3\x42\xe1\x67\xce\xf1\x8a\xf8\x65\xf9\x67\x99\x04\xfe\xc5\x73\xf7\x05\xbc\xfd\x4a\x6d\xc2\x68\x44\xc8\xc2\x85\xd9\xb2\x66\xe4\xb3\x6d\xc1\x04\x5b\x6c\xc5\x73\xd7\xa9\x4d\x39\x55\xe9\x50\x46\xbb\xa4\x2d\xfc\x6e\x69\x26\x9f\xec\x85\xdc\xb3\x8f\x4e\xdc\x6b\xbf\x3b\x47\xde\xde\x68\xd4\xa5\x73\x06\xeb\xa4\x35\xd1\x92\xdd\x3c\x51\xc3\xd2\xb7\xa2\x09\x3c\x51\x72\xa3\xe8\xdb\x68\xd5\xbb\x59\x34\x56\xe2\xd4\x0b\xf3\x42\xc5\x4d\xce\xfa\x4a\x2d\x3f\x91\xcc\x60\x92\x3e\xfd\x6d\xbd\x14\xb3\xfd\x9e\x63\x71\x80\xba\xdc\x59\xe9\x39\x7b\x0b\x4b\xe2\xba\x70\x6d\x33\x91\x24\x7b\x35\x05\x25\x20\xcb\x35\x7d\x0a\x42\x16\xf2\xf4\xa5\x81\x75\x91\xda\xc4\xf1\xb8\x59\xec\xc6\x32\x02\xa7\xb3\x8b\x34\x4b\xa5\xeb\x45\x17\x1e\x78\x4f\x4b\x3f\xd9\x78\xdc\x7f\x7c\x57\xcf\x1f\x23\x99\x3e\x64\xca\x92\xd6\x70\xa1\xdb\xfc\xa1\xde\x95\xa4\xff\x05\xff\xaf\x17\xfc\xef\x01\x00\x00\xff\xff\x34\x7d\x38\x31\x25\x0a\x00\x00")

func templatesActionsAction_x_customTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesActionsAction_x_customTemplate,
		"templates/actions/action_x_custom.template",
	)
}

func templatesActionsAction_x_customTemplate() (*asset, error) {
	bytes, err := templatesActionsAction_x_customTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/actions/action_x_custom.template", size: 2597, mode: os.FileMode(420), modTime: time.Unix(1490911840, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCmdMainTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x5a\xef\x92\xdb\x36\x92\xff\x4c\x3e\x45\x1f\x2b\x5e\x53\x59\x9a\x8a\x73\xdf\xb4\xd1\x6d\xc5\x33\x4e\x32\x15\x7b\xec\x9a\x99\xcd\xd6\x95\xed\xca\x42\x24\x24\x62\x05\x02\x2c\x00\x1c\x59\x3b\xa5\xaa\x3c\x44\x3e\xde\x03\xdc\x73\xe5\x49\xae\xba\x01\xfe\xd3\x68\xc6\x49\x2e\x77\x49\x95\x6d\x01\x8d\x46\xa3\xff\xfe\x1a\x60\xc3\x8a\x2d\xdb\x70\xa8\x99\x50\x71\x3c\x9f\xc3\x99\x2e\x39\x6c\xb8\xe2\x86\x39\x5e\xc2\x6a\x0f\xae\xe2\xf0\xbd\xae\x99\x2a\xe1\x5b\x0d\xd7\xe7\xdf\xc3\xb7\x7e\x5a\x9b\x1c\xce\xdf\xc0\xe5\x9b\x1b\x78\x79\x7e\x71\x13\xc7\xa2\x6e\xb4\x71\x90\xc6\x51\xc2\x55\xa1\x4b\xa1\x36\xf3\x7f\x5a\xad\x92\x38\x4a\xd6\xb5\xc3\xbf\xa4\xde\xe0\x5f\xda\xe2\x9f\x4e\xd4\x3c\x89\xe3\x88\x29\x2b\x20\xd9\x08\x57\xb5\xab\xbc\xd0\xf5\xbc\xde\xb4\xee\x5f\x73\x1c\xc6\xe9\xf1\xcc\x96\x04\x99\x37\xb2\xdd\x08\xf5\xcc\x96\xdb\x67\x1b\xfd\xe5\xbc\x14\xb6\x61\xae\xa8\xb8\x49\x62\x00\x80\x46\xea\x0d\x7c\x7a\x59\x10\xe6\x93\x74\x35\xb7\x96\x6d\x48\xd4\xbb\xbb\x67\x20\xd6\x90\x7f\x5d\x38\xa1\x95\x85\xc3\x21\x8e\x92\xbb\x3b\xc8\xdf\x7a\x45\x5e\x69\xed\xe0\x70\x98\x33\x3f\x9f\xf8\x15\x5c\x95\x0f\x52\x16\x5a\x29\x4e\xd4\xc9\x69\x02\xcb\xcd\x2d\x37\xf3\xca\xb9\x26\x19\x04\xb8\x31\x62\xb3\xe1\xe6\x61\x09\x5c\x20\x98\x8a\x30\x8b\xe3\x5b\x66\xd0\x44\xf3\x39\x5c\xb2\x9a\x83\x3f\x2b\x28\x56\xf3\x38\xa2\x91\x25\x10\x3f\xfa\xf7\xe1\x90\x10\xe9\x0f\x5c\x95\xda\x74\xc4\xb7\xf4\x2b\x8e\xc2\x68\x58\x10\x7e\x0d\x4b\x8c\x15\x5a\x0d\x6b\xe8\x27\xd9\xa7\x9b\xea\x17\xfa\x9f\xdd\xca\x73\x6e\x0b\x23\x1a\x37\x5a\x5d\x0e\x43\xc4\x61\x4c\x12\xb8\x8c\x87\x90\xd3\x8c\xfc\xf9\xa6\xe2\x96\x43\xc9\xd7\x42\x71\xb8\x65\x46\xe8\xd6\x42\xa1\xa5\x36\x50\x68\x65\x1d\x53\xce\x42\xa7\x13\x29\x6a\x0e\xb0\x04\xf4\xbc\xfc\x0c\x89\x30\x1c\xd2\x64\x63\x38\x57\x7f\xae\x16\x2b\xc9\x8a\x6d\x32\x8b\x23\xc3\x4b\x38\x45\x68\x78\x89\xd3\x44\xff\x10\x1f\xbf\xde\x72\x77\x72\xbd\xe5\x2e\x99\xa1\xec\x6e\xdf\x70\x28\xa4\xf8\xda\x6c\x2c\x58\x67\xda\xc2\xc1\x5d\x1c\x9d\xe9\x9a\x42\x11\xff\xb3\xce\x08\xb5\x89\xa3\xeb\x76\x15\x86\x2d\xbc\xfb\x10\x46\x0f\x71\xbc\x6e\x55\x01\x1b\xee\x90\xc5\x37\x46\xd7\x67\xaf\x2e\xd2\x19\xa4\x9f\x07\xae\x19\x70\x63\xb4\x99\x21\x5b\xb1\x06\xc9\x55\xaa\x6d\x8e\x33\x33\xf8\x6a\x09\xcf\x71\x3c\x32\xdc\xb5\x46\x81\x12\x32\x90\xdb\xfc\x92\xef\xd2\x64\xaf\x5b\xa8\x5b\xeb\xc0\x36\xbc\x10\xeb\x3d\x14\x41\x30\xa7\x41\xa8\x5b\xbd\xe5\xc0\x82\xf1\xf0\xc0\x87\x38\x62\x78\x90\xc5\x12\xfe\x14\xb6\x47\xee\x41\xec\x05\x1d\x27\x6c\xfe\xee\xf9\x87\x2c\x8e\xc6\x87\x5a\xf4\x53\x5f\x2e\x70\xee\x10\x77\x62\x31\x3a\x86\x12\x72\x7c\xdc\xd7\x3e\x5c\xf1\xc4\xd7\xae\x14\x8a\xce\x1c\x62\x38\xff\xe1\x79\x06\xfd\x8f\x17\xba\xdc\xe3\xc0\xa0\x87\x15\x49\x38\x9d\xbf\x3b\xc4\x51\x3d\x19\xff\xe1\x39\x0a\x8f\xb3\x0b\x80\x55\x36\x9f\xc3\x35\xe7\x25\x08\x07\x3b\xe1\x2a\x60\x40\xc6\xb3\x1a\x6a\x66\x6c\xc5\xa4\x14\x6a\x03\x3b\x6d\xb6\x96\x84\x2f\x79\x81\xec\x30\x35\xa2\x32\xcf\x79\xa1\x4b\x6e\x50\xf9\x24\xef\x8c\xcc\xc1\x8d\x41\xa2\x92\x17\xb9\x27\x48\xeb\xd9\x5f\x68\xf4\xdf\x96\x78\x62\xb2\x0e\x3a\xb8\xd9\xc3\xda\xe8\xba\xd7\xd1\xbf\x7f\x80\x5d\x25\x8a\x0a\x84\x85\x5d\xc5\x0d\xa7\x0c\xde\x8a\x60\x8d\xdc\x71\xb4\x1a\xe7\xb5\x45\x5b\x59\x4c\x0c\xae\xe2\xb5\xe7\xc6\x2c\xec\xb8\x94\xf8\x77\x97\x40\xfe\x0a\x37\x95\x50\x1b\xeb\x77\x41\x5e\x5c\x6d\x30\x9a\x4a\xad\x9e\x7a\x4e\xc8\x88\xc9\x1d\xdb\x5b\x68\x2d\x07\x8b\xa7\x88\xa3\xd1\x29\xe8\xa8\x7f\x53\x41\x1d\xe9\xbb\x0f\xab\xbd\xe3\xe9\x20\xf1\x2c\x3b\x71\xb8\x89\xef\x75\x0e\x18\x47\xa8\xc1\xc1\x03\xea\x0c\x56\x53\x0f\x68\xb4\x94\xd7\x62\xa3\x98\xb4\x69\xc1\x54\xc1\x25\x46\xba\xe3\x1f\x5d\x7e\x46\x3f\xbf\x69\x55\x91\x41\x01\x45\xc5\x14\x6a\xcd\x13\x93\xf9\xa3\xaf\x9e\x15\x71\x14\xf9\x65\xe9\xcc\xeb\xe4\x35\xfb\xa7\x36\x50\xb1\x62\x0b\xcf\x60\xc7\xc1\x56\xba\x95\x25\xac\x38\xac\xa4\x2e\xb6\x68\x5b\xad\x80\x11\x3f\xc5\x25\x68\x03\x96\x1b\xc1\x2d\xe8\x75\x37\x68\xc1\x55\xcc\x81\x65\x7b\xcf\xd3\x55\xc2\x42\xc3\x8c\x43\x1a\xd4\xa9\x69\x15\x96\x43\xa8\x98\x05\x5b\xb5\x0e\x4a\xbd\x53\x19\x08\xf7\xd4\x82\xde\xa2\x82\x1b\xa3\x0b\xce\xcb\x0c\xc9\x15\xf0\x8f\xc2\xc5\x51\x84\x6b\xf2\x6b\xc9\x79\x93\x3e\x87\xcf\xc1\xff\xe4\x85\x56\x25\x0a\xaf\x6d\xfe\xf2\xa3\x70\xe9\x17\xb3\x5e\x3b\x58\xe8\x53\x3a\x2b\xeb\x52\x00\x1a\xe8\x38\x4b\xf4\x2e\x38\xb2\x87\xd4\x9b\xfc\x1b\xe6\x98\x4c\xb9\x31\x3e\xa6\xc9\xff\x58\x43\x27\x10\xca\x71\x63\xda\xc6\xd9\x38\xb2\x4e\x37\x67\xa8\xde\xc5\x12\x6a\xb6\xe5\xe9\x54\xd7\x19\x3c\x9f\xc5\x91\xa5\x7f\xe7\x97\xda\x89\xf5\x3e\xed\x96\x64\x60\xf7\xb6\x60\x52\xe6\xd7\x17\xdf\xde\xbc\xbc\x7a\x3d\x19\xb8\xb8\xbc\x99\xd1\xb6\x67\x86\x33\x87\x39\x26\xd8\x36\x0b\x4e\xbf\x13\x52\xa2\x69\x5a\xcb\x29\x17\x05\x0f\x70\xde\x85\xa5\xd8\xf2\xde\xb1\x41\x28\xef\xce\xb7\x5c\x91\x1d\x18\x78\x91\xe2\xa8\x70\x1f\xb3\x6e\xe9\x62\xd9\xfb\xcf\xdf\x85\xab\xbc\x0f\xa5\xdd\xd0\x0b\x56\x6c\x37\x46\xb7\xaa\x4c\x67\x5e\xb2\xef\x45\xb1\x05\xbd\x46\x76\x1b\x6d\x74\xeb\x30\x56\x9c\x86\x8a\xa9\x52\xfa\x60\xf4\xdb\x58\x60\x3e\xf6\xc2\x4e\x92\x51\x79\x8b\x36\xfa\x84\x0f\x67\xd0\x29\xc8\xef\x72\xe1\x73\x2c\xad\xf6\x69\x32\x8e\xec\x4e\xb8\xa2\xa2\xa4\x98\x77\x75\xe2\x2e\x8e\x0a\x66\x39\x24\xa1\xfe\x26\x8b\x38\x8a\x1a\x23\x94\x0b\x55\x17\x6d\xed\x29\x2a\x2e\x9b\x61\xfa\x3b\x2e\x9b\x61\x4e\xa8\xb5\x1e\xe6\x46\xa5\x76\x20\xb1\xac\x6e\x24\x27\xa2\x50\x4d\x48\x90\x51\x1e\x9f\xc1\x72\x09\x5f\xf8\xd8\x1e\x9c\x29\xf9\xcf\xae\x94\x34\x46\xdf\x8a\x92\x03\x53\xe0\xf1\x13\x86\x52\xb0\x16\x6a\xb0\x83\xa5\xe0\xb7\x02\xa1\x9a\xd6\xbd\x57\x2f\x3f\x2e\xba\x91\x7a\xff\xa3\x5f\x89\x35\x07\x1d\xd4\xcb\x7b\x4d\xb3\x17\x48\x7e\x4f\xa8\x77\x5f\x7c\x18\x34\x80\x18\x6b\x01\x08\x41\x18\xaf\xb5\x12\xff\xe2\x98\x09\x71\x38\x8e\xa2\x21\x5a\x70\x00\x33\xf7\x35\x41\xb3\x74\x80\x70\x38\x78\xc6\x8a\x8a\x93\x33\x9c\x88\xa1\x7b\x41\x44\x42\xae\x6b\x97\xbf\x45\x41\xa5\x4a\x93\xb7\x1e\xf1\x8c\x20\x18\xac\xb4\x76\x98\x66\xbe\xbb\xb9\x79\x1b\x44\xcb\xf3\x3c\x09\xf9\xe9\x06\x73\x89\xf7\x7b\xcc\x47\x80\x99\x44\x7a\x3f\x23\xf9\x28\x9f\x58\x4a\x28\x93\xa4\x6c\xf3\x57\xc2\x3a\xae\xbe\x56\x25\x1d\x24\x3d\x91\x82\x4f\x89\xeb\x75\x65\x5a\xef\x4b\x6b\x26\xa5\xab\x8c\x6e\x37\x15\x56\xb6\x35\x6b\xa5\x5b\x78\xc1\xfe\xce\x9f\x1a\xca\x6c\x0a\x85\xe7\xc2\x55\xdc\x0c\xc6\xcd\xd0\xba\xac\xb3\x6f\x1c\x45\x3e\x95\x0f\x09\xe9\x7e\x1d\xff\x84\x4a\xd7\x23\x58\xd2\xfb\x12\x84\xa2\x0d\x2b\x5d\xee\xe1\x56\x30\xb8\xbe\x39\xbf\xb8\x44\x7f\x32\xad\x3a\xe9\x6b\x0b\x78\x62\x13\x92\x24\x7f\x89\xc8\xc0\x1b\x13\x0d\x15\x22\xac\xce\x6f\xb0\xc0\xdf\x51\xa9\x40\x65\x78\x16\x3f\x5a\xc7\x8c\x23\xad\x8c\xd4\x6c\x5a\xf5\x46\xf1\x37\xeb\xb5\xef\x19\xd2\x71\x78\x66\xb0\x3a\x52\x3a\x50\x0f\xe6\x63\x77\x28\x34\xa6\xf5\xea\xc2\xda\x8d\xdc\xef\xdb\x85\xc4\xf3\xc2\x84\x53\x8c\xa5\x79\xd4\x4b\xba\x08\x9b\xb8\xc9\xf4\x00\xa1\xdb\xf0\xae\x97\x52\x76\xfc\x3f\x3c\xc6\xc8\x8b\x26\xc6\x6d\xd5\x56\xe9\x9d\xea\x2d\x4a\x28\x8b\x4c\xe5\x0d\x32\xeb\xc0\x41\x57\xec\x8e\x55\x5f\x63\x73\xeb\xf1\x71\x06\xab\x63\x1c\x38\xf3\x38\x10\xcd\x7a\xaa\xcd\x2b\x4a\x8f\x5e\x87\x60\x3f\x67\x8e\x21\x38\xa4\x1a\x81\x3d\x27\x86\xff\x8b\x76\xbd\xe6\x86\x97\xaf\x34\x6a\x0c\x7d\xb6\xec\x9d\x7a\xe8\x53\xd1\xa9\xaf\xd8\x2e\x5d\xe5\xe7\xfd\xd8\xc9\xa2\x1b\x60\x0e\x21\x1f\x82\x8e\x6b\x6e\x40\xe6\xdf\xc8\xd6\x56\x01\x31\x7a\xd5\x19\x6e\x1b\xad\x2c\x9f\x00\xd5\xab\x30\x88\x9c\x5e\x73\xc7\x16\x10\xa0\xd7\x3f\xee\x0e\xff\x98\x11\xcc\x76\xcc\xb5\x76\x01\x89\xde\x26\x1e\x5a\x3f\x88\xda\x56\xf9\x59\x7f\xf6\x0c\x8a\xf2\x7e\xba\x38\x12\x16\x55\xd5\x9f\x7d\xa4\xb7\xc0\x26\x2d\xca\x0c\xe4\xaf\x39\xf5\x7c\x0e\xbd\x18\xe4\xb2\x14\xcb\x42\x39\xed\xb1\x93\xd8\x54\x2e\xf4\x48\xb1\x4f\x3c\x50\x90\xcf\xb1\x5b\x2d\x7c\x89\xfd\x12\xf8\xc7\x82\x5b\x4b\x87\xea\x70\x39\x20\xac\x20\x1c\x40\x38\x39\x80\x77\xa9\x09\x0d\xf8\x58\x7f\x56\x30\x1b\x10\x1e\xba\x9b\x25\xfe\xab\xd6\x79\xf0\x20\x2c\x60\xcc\x11\x26\x83\x86\x9b\xb5\x36\x35\x96\x6b\xd8\x30\xa1\x10\x80\x2b\xed\x3c\xf2\xdb\x20\x5e\xc9\xa8\xe2\x13\xa6\x93\x28\xcb\xa6\xbb\x48\x01\x04\xf8\x98\x92\x10\x9e\x39\x86\xe8\x19\x41\xa2\x86\x52\x63\x57\x41\x1b\xed\xd8\x3e\xf7\x88\xeb\xcd\xf9\x1b\xf4\x4e\x84\xa2\x2d\xb6\x5f\x81\x40\x58\x60\xb0\xd2\xce\x49\xae\x78\xb1\xcd\x30\x07\xae\x05\xd6\x49\x47\xfb\xda\x1d\x6b\x60\x85\x30\x36\xe8\x6d\x38\x21\x07\xd6\x34\x46\xb3\xa2\xea\x51\xc4\x2a\x38\x7f\x17\x0e\x86\xa9\x0d\x87\xcf\x54\x06\x9f\x35\x68\xcf\x69\x6c\x50\xe2\xb9\xbb\x83\xcf\x9a\xfc\x8a\xed\xba\xab\x03\xc2\x02\x58\x75\xc9\x29\xc3\x9d\x48\xee\xc9\x02\x0d\x15\x65\x0c\xa2\xc7\xfc\x8e\x88\x32\x5f\xef\x1f\xee\x13\xfa\xee\x20\xc2\x76\x1e\x89\x28\x9e\x63\x88\xa2\xb5\x36\xf0\xa3\x77\xc5\x65\x38\x09\x31\xcb\x7f\x60\x52\x94\xcc\x71\x82\xc4\x10\xfe\xa3\xa4\xd3\xd5\x63\xac\xcd\xd7\x84\x22\xd6\x69\x42\xe5\x00\x91\xa6\xe4\x70\xeb\x97\xa2\x73\x74\xb5\xfa\x70\x08\x89\x92\x04\x3e\x51\x46\x66\xb8\x07\xca\x48\x7f\x1d\xfb\x7d\xb7\x7d\x77\x20\xdc\x9a\x56\xfe\xd6\x9d\x73\x38\xab\x78\xb1\x05\xa9\xb1\x6d\xd3\x06\x4a\xee\x98\x90\x36\xe9\xf7\x8f\x22\xf6\xb0\x4d\xbc\x65\xc9\x28\xa6\x55\xaf\xb9\xab\x34\xe5\x3e\x96\x5f\xb5\x01\x42\x50\x26\x5d\x2e\x21\xc1\x54\x9e\x04\x33\xf4\xb4\x48\x7a\xe3\x73\x3c\x31\x09\x59\x28\x7f\xd3\x3a\x32\x64\xb0\x43\x47\x9f\xfa\x44\x21\xbc\x95\x31\x23\x0c\x4b\x5e\xe9\x0d\x2c\x41\xe6\xd7\x94\xb5\x1f\x82\x00\x3d\xb9\x4f\x67\xb0\x84\x84\x6c\x9f\x4c\x26\xbd\x0e\x97\x63\x8b\x04\x09\xe7\xf3\x3e\x37\xfb\x8c\xc2\x6d\x2b\x51\xfc\x9d\x61\x4d\xc3\xcd\x89\xee\x3f\xb4\xff\x1d\x73\xcc\xa5\x11\x16\xa1\x45\x8f\x06\xa8\xaf\x48\x68\x22\x60\xed\x05\x24\xb7\xcf\x69\x84\xca\x5c\x7e\xcd\x55\x99\x86\x2d\x66\xd3\xab\xc2\x51\x0d\x3c\xe1\x0d\x5d\x25\x0c\xd0\x85\xfc\xac\x0b\x58\xdf\x99\x05\x5e\x87\xa1\x53\x1e\xf7\xc8\xa7\x4a\xfa\xd0\x25\x77\x1d\xd5\x6f\x2e\x97\x93\x4b\x49\xea\x9c\xe9\x1a\x48\x6a\x8f\xf0\x26\x75\xf2\x12\x53\xa5\x1c\xaa\x24\x5d\xa2\x18\xc1\x24\x82\x6e\xdf\xd6\x74\x05\x03\x4a\xe6\xd8\x28\xdd\xb3\x5d\x9f\xec\x1f\x2e\xca\x7f\x5c\x19\x9b\xcf\xe1\x52\xef\x32\xe0\xd6\xb1\x95\x14\x16\x6b\x04\x85\xe0\x48\xc4\x3f\xb6\xd8\x7d\xcb\x1d\x9d\x74\xc0\x0b\xf0\xcc\x63\xb7\xee\xba\xa6\xc3\x40\x16\x61\x95\xa5\xfe\x95\x90\xbe\x2b\x75\xeb\x10\x62\x35\xda\x3a\x5e\xfa\x51\xdf\xbf\xfc\x91\x30\xe4\x9e\xb1\x6a\xee\x98\x37\x13\x5b\xa1\x04\x63\x5c\xd9\x1b\x8e\x88\x3a\xcb\xd1\x8f\xc5\xb2\x3b\x48\xe7\x3b\x2f\x31\x68\x10\xaa\x7c\xc2\x86\x48\x92\x61\x4c\x3a\xf6\x49\x03\xf6\x15\x2d\xec\xf1\x60\x49\x9b\xf8\xef\x23\x35\xad\x73\x6d\x7f\xed\x81\xf5\x8d\xea\x6b\xaf\x11\xe1\x86\x43\x77\xe7\x1d\x15\xc2\xee\x02\x22\x1f\xf5\x78\xe3\xf4\xfd\x47\x97\xc3\xf9\x1c\x5e\xb4\x42\x96\x63\xab\xc4\x51\x44\xc2\xf4\xb2\x5c\xf2\xdd\xa4\x08\x04\x81\xd2\x32\x23\xbb\xcd\x4e\xe7\x7d\xc4\xf9\x98\xe9\x69\x22\xa3\xdb\x3f\xda\x84\x86\x28\xb9\x87\xf6\xe3\x5a\x20\x2c\x3a\x9a\x83\x52\x73\xab\x9e\x3a\x50\x9c\x97\xc0\xa8\x21\xd3\x06\x0c\x67\x25\x48\xad\x9b\xb0\x76\xc7\x11\x07\x79\xdc\x67\xba\xab\x54\x84\x68\xfe\xf5\x0a\x47\x86\xa4\x4d\x50\x2e\x2c\x1c\x5d\x92\xe0\xae\x19\x34\xcc\xda\x11\xad\x85\xde\x33\x7d\x47\x51\x71\x89\xd9\x1e\x73\x64\x60\x41\x97\x6d\x61\x19\x73\x3d\x61\x6f\xde\x21\x96\x70\x81\xee\x63\xcc\x51\x01\x3c\x51\xd9\xba\xb4\x8f\x02\x5d\x91\x14\xa1\xcf\x4d\x65\x06\x7e\x3d\xb5\x9b\xe3\xb4\xdd\x9b\xf1\x1a\x5b\xba\x70\x80\x41\x47\x1b\x0d\x2e\xbf\xe2\xac\x7c\xa5\x75\xe3\xbb\x33\x19\xee\x06\xae\x5a\x75\xbf\xe9\x13\x0e\x0a\x5d\x37\x92\x3b\x6e\x61\xee\xfb\xbe\xd0\xf6\x85\x4d\x1d\x56\xfa\x81\xdb\xbd\x53\xfc\xf6\x4a\xd5\x25\x83\xc7\x4b\x55\x28\x24\x88\x9a\xa7\xc1\x38\x56\xc6\x40\xdf\x95\xb3\x13\xba\xd4\x1b\xf8\x9c\x4a\x8d\xaf\x30\x19\x68\x7f\x41\xb9\x66\x05\xbf\x3b\x64\x03\x3c\x9c\xc1\xe8\x6d\x00\x03\xe8\x77\x36\x52\x1e\xdb\x2c\x40\x9f\xe8\xaa\xa2\x57\x7a\xb3\xc0\x32\xd8\xc3\x98\xbe\xd5\xba\x9f\xba\x1e\x05\x2b\x8f\x00\x9d\x43\xfc\x08\x5a\xb9\x0f\x56\x02\x56\xe9\x2e\x0b\x06\xb0\x72\x8c\x55\x06\xed\x07\xf6\xa8\xf6\xee\x42\x41\x58\x68\x0c\x77\x6e\x4f\xf7\xe3\xfb\x8c\x4c\x67\x5b\xc3\xd1\x8c\x8e\xba\x2a\xdf\x96\x70\xe7\xb8\xc1\x1e\x86\x9a\xa7\xa3\xa7\x84\x0c\x5d\xb2\xcb\x05\x52\xeb\x2d\xf2\xa7\xbb\xda\x1d\xf7\x25\x8f\xa9\x3d\x6c\x85\x2a\x31\xea\x13\x6c\xc4\x12\x58\x4b\xb6\xf1\x2d\xdb\x34\x0e\xf3\x3c\x47\x76\xc8\x26\x5c\xf8\xee\x30\x72\x7d\x12\x11\x16\x82\xbf\xc6\xbe\xc1\x62\x50\x70\x83\x1d\x17\xb5\x77\xbe\x41\x33\xbc\x91\xac\xa0\x34\xae\x95\xc4\x46\xb3\x27\xaa\x98\x29\xb1\x57\x2b\x41\xd0\xe3\x61\xc1\x6d\x0e\xd7\xda\x37\x80\x1a\x3b\xce\xd0\x47\xf9\x63\x37\xd8\xca\xcd\xe7\xfd\x45\xaf\xe2\xbb\x13\x14\x39\x5c\x3c\xad\xa9\x17\xf5\xa9\x8c\x26\x24\x73\xdc\x60\x8b\x5a\x51\x95\x62\x0e\x56\x98\x38\x7d\x04\x37\x46\xdf\x72\x05\x1a\x35\xbc\x13\x96\xfb\x30\xb8\x5f\xd7\xa9\x22\x53\xfd\xb8\x62\xbb\x10\x1b\x33\x48\x47\xca\x1a\xea\xfe\xf8\x19\xac\xee\x2f\xee\x6b\xd6\xbc\xf3\x10\xf0\xc3\x28\x7e\x66\x8f\xd4\x66\xdc\x13\x2b\xf3\x27\xcb\xb2\x58\x43\x6b\x30\xe9\x6d\x69\xb7\x77\x49\x6b\x64\xf2\xe1\x2f\xf8\x9b\xea\xca\x4b\xff\xcc\xc4\x0a\xd7\x32\x29\xf7\xe4\x08\x16\xbe\x44\xec\xd5\x72\x9b\x91\x23\xed\xb8\x37\x91\x2f\x3c\xc2\x82\x56\xfc\xaf\xc3\x56\xa3\x83\x5e\xf2\xdd\x77\x37\x37\x6f\xd3\xd6\xc8\x3c\xf5\x27\x9a\xcd\xc6\xde\x3d\xa5\xbd\x26\x24\x95\x0e\x0f\x27\xf7\x2f\xbe\xf1\x4c\x04\xd6\x14\x19\xea\x42\xad\x35\xcc\xe1\x3b\xce\x4a\x2c\x06\xa1\x1a\x2d\x96\x90\xbc\x57\x49\xff\xfb\xcf\x4b\x98\x74\x94\x58\x6d\x17\x5d\xe3\xf9\xc4\xe2\xff\xbf\xfc\xd7\x7f\xbf\x57\x49\x06\xf4\x5a\x9c\xd1\x2b\x7d\x06\xf4\x32\x3c\x7b\x90\x8d\x7f\x7b\x5f\x3c\xc2\xc6\x53\xfc\x0a\x46\x21\xfa\x1f\x61\x44\x14\x9f\xe4\x34\xd2\xd5\xe2\x34\xa7\x11\x45\xcf\xed\x81\x66\x02\xa1\x09\xa6\xaa\x42\xb7\x8a\x94\x9a\x4a\xae\x06\x9a\x59\xd7\x71\x74\x08\x0f\x8d\xf1\xa0\x64\xef\xbb\x37\xf8\x53\x93\xfd\xb6\xe9\x13\xfb\xa4\x7c\x62\x67\x0b\x18\xcb\x8c\xd2\x8d\x24\x39\x1c\x06\x3d\x8c\x20\xa5\xc8\xe0\x33\x77\x1f\x52\x3e\xb0\xe5\x2f\x3f\xff\xfc\xcb\xcf\x3f\xfd\xf2\xf3\x4f\x41\x4d\xb4\xb5\x9d\x8d\xb7\x4d\xfc\xbe\xfd\x47\x19\x61\xd7\x61\xe2\xe8\xeb\x87\xa9\x54\x5d\xa9\x1e\xfd\xfb\xf4\x1d\x27\xaa\xd9\xf7\x94\x47\x8a\x0e\x44\xbd\x9e\xc3\xdd\xd0\xef\x57\x73\xb7\xeb\x43\x5a\x9e\xca\xf1\x88\x9a\xd9\xbd\xcb\xa8\xff\xad\x96\xd9\x43\x5a\x66\xbf\x43\xcb\xfd\xd3\x4e\xea\xc5\x3a\x4a\x28\x93\x97\x29\xaf\xd3\x90\x9b\x86\xee\x1a\xd1\xd7\x8b\xbd\xe3\xc3\xfb\x13\x65\xdc\xd7\x21\xdf\xde\xeb\x7d\x7f\x4d\x03\x77\xf2\x3b\x87\x38\x8a\xbc\x1e\x17\xdd\x13\x0d\x7d\xa2\xd1\xb1\x5f\xc0\x20\xc9\x83\x30\x68\xa8\x27\xf7\xe6\xba\xcf\x28\xa6\xc8\xe4\xde\xd5\x88\x87\x2a\xab\x6c\xdc\xba\xb1\x53\x57\x91\xa7\xad\x3f\xb4\x6d\xec\xb8\x6d\x0b\xcf\x36\xcb\xa3\x1b\x9a\x38\x8a\xfc\xef\x47\x94\x3c\xbe\x27\x63\x47\x77\x97\x0f\xde\x49\x1d\xb5\x61\xa1\x71\x83\x25\x8c\xb6\xbb\x07\x7f\x1f\xcf\x20\xc3\xe9\xdc\xc3\xa7\x9b\x62\x3a\xec\xf4\xfc\xc0\x23\xe7\x1b\xb7\xa4\x43\x9a\x99\x36\xa5\xbf\xfd\x9c\xe3\x7d\x27\x07\x1d\xf5\x0c\xe3\x07\x9e\xbf\x4d\xaf\xb5\x46\xaf\xbf\xd4\x36\xb0\xa1\x69\xe8\xa2\xfc\xe4\x69\x2e\x54\xc9\x95\x4b\xff\x54\x67\x90\x40\x82\x7f\x40\xf2\x6b\x82\x62\xfc\x0c\xeb\xa3\xb0\x0b\xda\xd9\xc9\x5b\xb4\xe9\x33\x3a\x72\x1c\x73\x08\x13\x47\x01\xef\x9f\xd5\x27\xb4\x69\x32\xdc\xe2\x02\xce\x2f\xde\x2b\x9f\x3b\x47\x24\xfd\xb7\x50\x27\xe6\xaa\xb0\xc6\x5d\x57\x7a\x67\x3d\x0e\xaa\xb9\x6a\x4f\x90\x86\xaf\x00\x88\x1a\x43\x55\xb2\x7d\xf7\x65\x1e\x08\xb5\xd6\x27\x96\xe0\xf0\x84\x1e\x07\x4c\x4d\x1f\x2b\x8c\x6e\x7b\xd8\x2d\x13\x92\xad\x24\x0f\x66\x0a\x5f\x37\x04\xbf\xca\xc6\x5f\x16\x6d\x02\x62\x0a\xdf\xf6\xd5\xdc\x31\x04\x8d\x27\xf6\x0e\xcf\xfa\x5f\x75\x6e\xa0\x4d\xe7\x1b\x8a\xd5\xfc\x3f\x26\x62\xb1\xc9\x67\x01\x7d\xa7\xbe\x46\x2f\xaa\xba\x4f\x00\x7b\x89\x06\x56\x27\xb6\xc5\x7e\x92\x78\x63\xfb\x7c\x7c\x67\xc1\xac\xd5\x85\xa0\xaf\x63\xfb\xee\x23\xbc\x36\x9f\xe0\x1e\xbe\x8f\x13\xbc\xa4\xb7\x67\xa6\x8e\xc4\xeb\xae\xed\xc4\x29\x39\x4c\xab\x26\x62\x98\x56\xfd\x3f\x49\x71\xf8\x9f\x00\x00\x00\xff\xff\x80\x07\x1b\x6e\x19\x2c\x00\x00")

func templatesCmdMainTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesCmdMainTemplate,
		"templates/cmd/main.template",
	)
}

func templatesCmdMainTemplate() (*asset, error) {
	bytes, err := templatesCmdMainTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cmd/main.template", size: 11289, mode: os.FileMode(420), modTime: time.Unix(1491008838, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesConnectionCacheTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x93\x41\x6f\xe3\x36\x10\x85\xcf\xd6\xaf\x78\xf5\xa1\x90\x03\xad\x02\xf4\xb8\x45\x4e\x71\x11\x04\xd9\xc6\x05\x9a\x9e\x16\x7b\xa0\xa9\xb1\x44\x98\x1a\x6a\xc9\xe1\xaa\x6e\x90\xff\x5e\x0c\xe5\x24\xde\x45\x7b\xa3\x38\xe4\x9b\x8f\x6f\x9e\x26\x63\x8f\xa6\x27\xd8\xc0\x4c\x56\x5c\xe0\xaa\xba\xbe\xc6\x6d\xe8\x08\x3d\x31\x45\x23\xd4\x61\x7f\x82\x0c\x84\x87\x30\x1a\xee\x70\x17\xf0\xe7\xf6\x01\x77\x4b\x39\xc4\x16\xdb\x1d\x1e\x77\x4f\xf8\x6d\x7b\xff\x54\x55\x6e\x9c\x42\x14\xd4\x15\x00\xac\x0f\xa3\xac\x97\x55\x3a\xb1\x5d\x57\x65\x3d\xf9\xd0\x63\xdd\x3b\x19\xf2\xbe\xb5\x61\xbc\x3e\x16\xe5\xeb\xc9\xe7\xde\xf1\x87\xd4\x1d\x3f\xf4\xe1\x97\x6b\x1f\xfa\x75\xb5\x59\x80\x8c\x1d\x08\x2e\xc1\x20\xb9\x71\xf2\x84\x39\x9a\x69\xa2\x08\x13\x43\xe6\x0e\x06\xa3\x99\x30\x3b\x19\x74\x99\x85\xfe\x6e\x20\x01\x49\x42\xbc\x7c\x5d\x82\xe3\x4a\x4e\x13\x9d\x15\x93\xc4\x6c\x05\xcf\x05\x4b\x09\xdb\xdf\xf5\x6e\xf9\xec\x8c\x14\xd5\xcf\x49\xa2\xe3\xfe\xcb\xd5\xed\xbb\x49\x2f\x85\xea\x91\xe6\x45\x26\x92\xe4\xc8\x4a\xc7\x34\x5f\xb4\x83\xd5\x72\x75\xc8\x6c\xdf\x0e\xd7\x1b\x5c\x2d\xb7\x9e\xab\xd5\x72\x11\x3f\x97\x8d\xe7\x6a\xb5\xd2\xa6\x1f\x31\x9a\x23\xd5\xff\xdd\x7a\xd3\x54\xab\x97\x73\xff\x3b\x12\xcc\xce\x7b\xf4\x24\x08\x11\x8e\x9d\x94\x49\x29\x41\x8b\x7b\xc1\xde\x07\x7b\x4c\xc8\x2c\xce\xbf\x55\xd4\xc7\x48\xa6\x3b\xa9\xc6\xd3\x6e\xbb\x83\x0c\x2e\x2d\x4a\x7b\xc2\x37\x8a\x27\x38\xa6\xc3\xc1\x59\x47\x2c\xd8\x67\xc1\x4c\x60\x22\xf5\x79\x36\x27\x75\xd6\x87\x70\xcc\xd3\xa5\xb5\xaa\xe6\x18\x06\x32\xa8\x7a\x32\x07\xc2\x68\x98\x29\x36\xd0\xdc\x04\xf6\xa7\x82\xe8\x8c\x77\xff\x90\xe2\x8c\x08\x6c\xa9\x5d\x9c\xdf\xb1\x25\xcc\x21\xfb\x4e\x29\xfa\x10\x3a\x55\x3c\x37\x4f\xa2\x74\x67\x84\xc9\x1b\x4b\x0a\x51\xec\xbd\x64\x68\x54\x95\x0b\xdc\xa2\x9f\x27\x4d\xaf\xc1\x91\xca\x6b\xdf\x1f\x1a\xe9\x6b\x76\x91\x30\x65\x11\xc7\x3d\x0c\x1e\xe8\x54\x6f\x30\x92\x0c\x41\x61\xdf\xec\x3a\x8f\xd2\xb1\x50\x3c\x18\x4b\x0d\xe6\xc1\xd9\x41\xe5\xe6\x37\x28\x09\xe7\x10\x68\x42\xcb\xd0\x20\x83\x11\xb5\xda\x86\x71\x0a\x89\x3a\x84\xc3\xa5\x5e\x89\x57\xca\x76\x58\x0e\xde\x8b\x0a\x5a\xc3\xc8\xec\xbe\x66\x52\xaf\x3a\x62\x71\x87\xd3\x8f\x24\x33\x61\x36\x2c\xaf\x53\x40\x9e\xda\x25\x62\xb5\x3d\x47\x6b\xa3\xd1\xa8\x6d\x87\xab\xad\x11\xd3\xc0\x97\x5f\xae\xfd\x14\xfa\x9e\xe2\x06\xf5\x45\x9e\x1a\x50\x8c\x21\x6e\x34\x8d\xdf\x4c\x44\xc2\x65\xce\xcb\x56\x38\x62\x1f\x82\xaf\x56\xb6\xfd\x14\xec\xb1\xde\x54\x2b\x77\x40\x6a\xb4\x70\x03\xdb\xea\x4b\x3e\xdb\xae\x2d\x06\x7e\xf9\x55\xb7\x35\xca\xb6\xfd\x8b\xfd\xf9\xfc\x6b\xd0\x53\x03\x76\x5e\x13\xbc\xf2\xed\x1f\xd1\xb1\x78\xae\xd7\xb7\x91\xcc\x79\x08\x8f\x34\xe3\xbd\xff\x7a\x53\xad\x52\x21\xc4\xc7\x9b\xd7\xfd\xda\x76\x0d\xfc\x02\xa1\x95\x9f\x6e\x54\xf3\x7f\x5b\xb2\xf3\x45\xa1\x34\xfd\x11\x16\x37\x48\xd5\x77\xd7\xbe\x07\x7d\xf9\x37\x00\x00\xff\xff\x18\x6c\xbe\x80\x21\x05\x00\x00")

func templatesConnectionCacheTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesConnectionCacheTemplate,
		"templates/connection/cache.template",
	)
}

func templatesConnectionCacheTemplate() (*asset, error) {
	bytes, err := templatesConnectionCacheTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/connection/cache.template", size: 1313, mode: os.FileMode(420), modTime: time.Unix(1490288320, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesConnectionConnectionTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\x41\x4f\xdc\x4e\x0c\xc5\xef\xfb\x29\x9e\x10\xc7\xfd\x87\xc3\xff\x86\xd4\x03\x62\x11\x42\x20\x40\xed\x4a\x55\x6f\x78\x33\x26\x19\x98\xd8\xd1\x8c\xb3\xdb\x15\xca\x77\xaf\x66\x92\x6d\xd3\xf6\xda\xe3\x78\xec\xf7\x6c\xff\xdc\x53\xfd\x4e\x0d\xa3\x56\x11\xae\xcd\xab\xac\x56\x17\x17\xb8\x56\xc7\x68\x58\x38\x92\xb1\xc3\xee\x08\x6b\x19\xf7\xda\x91\x38\xdc\x2a\xbe\x6c\xee\x71\x3b\x7d\x6b\xac\xb0\x79\xc2\xe3\xd3\x16\x37\x9b\xbb\xed\x5c\x7e\x52\x83\x4f\xa5\xf4\x97\x3e\x74\xf7\xc6\xb5\xc1\x5a\xb2\xf2\xe5\x78\xcf\x41\x7b\x8e\x38\xf8\x10\x40\xce\xc1\x14\x87\x96\x05\x5e\x8c\x9b\x48\xe6\xa5\x01\xc1\x5a\x1f\x1d\x7a\x8a\x76\xcc\x26\x57\xcf\x77\x15\xae\x9c\x03\xc9\x11\xef\x5e\x1c\xf4\x15\x41\xa5\x41\xf0\x7b\x76\xd0\x88\x7a\x48\xa6\x1d\xfe\x3f\x95\xfd\xdd\x46\xca\x1e\x9a\xa5\x13\x92\xc5\xa1\xb6\x2a\x6b\xdf\x50\xdd\xc2\x4b\x32\x92\x9a\xb3\xee\x22\x01\x5f\xef\x1e\x1e\xb0\x63\xa4\x96\x22\x3b\x34\x41\x77\x14\xc2\x71\x8d\xa4\x25\x3c\x44\xce\x13\xe4\x41\xba\xc1\xf8\x3b\xa7\xdc\x0b\x99\x76\xbe\xce\xe2\x79\x56\xca\x3d\xa4\x3c\x65\x64\x08\xb3\x63\x57\xad\xec\xd8\xf3\x72\x77\xb3\xdf\xc7\x0a\x00\xae\xcb\x2c\xcf\x14\xa9\x4b\x25\xf0\xf1\xf1\x1f\x22\x49\xc3\x38\x97\x35\xce\x7b\x5c\x7e\x42\xb5\xa8\x1e\xc7\x92\x36\xa5\xe2\xbc\xaf\x1e\xa9\x63\x8c\xe3\xfc\xda\x66\xb3\x71\xc4\xcb\x5b\x52\xb9\x3c\x9b\x82\x9f\xe9\x30\x67\x9d\xbd\xfc\x34\x61\x71\x59\x6c\x2c\x68\x37\x64\x74\x82\x3a\xf7\x57\x48\xb6\x1a\xdc\x14\x8d\x74\x58\xee\xb9\x2f\x1d\xe3\x35\x6a\x57\xbe\xbd\xd4\xda\x65\xa0\x1d\xa7\x44\x0d\x67\xd1\x6d\xde\x6e\xa1\xbf\x63\xd8\x10\x85\xdd\xc4\x85\x10\x99\xc2\x52\x6e\x3e\xc5\x7c\x80\x71\x10\xf3\x1d\x57\xf8\xa6\x03\x52\xab\x43\x70\x10\xde\x73\x84\xf3\x91\x6b\x0b\xe5\x4c\xf2\x72\x33\x8e\x21\xf1\x44\x71\x02\xbf\x86\x4a\x98\xb4\x22\x37\x43\xa0\xb8\x70\xa9\x70\x95\x90\x86\xba\x5d\x83\xf6\xea\x5d\x66\x59\x6e\x50\x8e\xe8\x63\xe6\x67\x9e\x53\x56\xf5\x36\x63\x2b\x7b\xf9\x0d\xd8\x82\xcf\x9f\x6c\xfe\x39\x9a\x1f\x01\x00\x00\xff\xff\x86\xbf\x40\xa5\xc7\x03\x00\x00")

func templatesConnectionConnectionTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesConnectionConnectionTemplate,
		"templates/connection/connection.template",
	)
}

func templatesConnectionConnectionTemplate() (*asset, error) {
	bytes, err := templatesConnectionConnectionTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/connection/connection.template", size: 967, mode: os.FileMode(420), modTime: time.Unix(1490288327, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesConnectionConnection_customTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x55\x4d\x8f\xdb\x36\x10\x3d\x57\xbf\x62\x90\x43\x6b\x07\x8e\x8d\xe6\x58\xa0\x97\x6e\x90\x4b\x5b\x6c\x0e\x69\x81\xa2\x28\x90\x31\x39\x92\xa6\xa6\x48\x95\x1c\xae\xa2\x1a\xfb\xdf\x8b\x21\x25\x7f\xec\xa2\x17\x03\x96\x86\x8f\xf3\xde\xbc\x37\x1a\xd1\x9c\xb0\x23\x30\xc1\x7b\x32\xc2\xc1\x37\x0d\x0f\x63\x88\x02\x9b\x06\x00\x60\x74\xa1\x83\x37\x1d\x4b\x9f\x8f\x7b\x13\x86\xc3\x29\x0c\xe8\xed\x61\x74\xb9\x63\xff\x2e\xd9\xd3\xbb\x2e\xbc\x3f\xb8\xd0\xbd\x69\xb6\x4d\x73\x38\xc0\x43\x4e\x12\x86\x4f\x18\x71\x48\xc0\x09\xa6\x9e\x22\xc1\x1c\x32\x48\x4f\x60\xe9\x89\x5c\x18\x29\xc2\xc4\xce\x41\xab\x3f\xec\x01\xfd\x0c\xa6\x1c\x84\x31\xea\x6b\x61\x4a\x3b\x98\x7a\x36\x7d\x39\x3b\x85\xec\x2c\x78\x22\xab\x77\x48\x80\x9c\x08\x42\x84\x29\xc4\x13\x4c\x2c\xbd\xa2\x3c\x54\x16\x7b\x78\xf4\x04\xf4\x15\x87\xd1\x11\x0c\xdc\xf5\x02\x47\xaa\x77\x38\x26\x2f\xe0\xf8\x18\x31\x32\x25\x85\x48\x79\x54\xc2\xec\xbb\x9b\xbb\xa1\x5d\xc0\xd9\x77\x7a\x63\xb9\x42\x09\xbc\x42\xd0\xee\xb4\xaf\x1d\x1c\xb3\x80\x0d\xfe\x3b\x81\x09\xbd\x68\x93\x2e\x24\x02\x6e\x4b\x4d\xa4\x8e\x3c\x45\x14\x2a\x38\x55\xc0\x46\xe6\x91\xee\x25\x4b\x12\xb3\x11\x38\x17\xf9\x0f\x07\xf8\x23\xe4\xf8\x5a\x1b\x38\x92\x0b\x53\xf3\x5c\x25\xaf\xbc\x55\xed\xd2\x62\x2d\x36\xc1\x52\xa1\x71\xaf\xbb\x04\x98\x22\x6b\x17\x01\xda\xec\xdc\x0c\xec\x59\x18\x1d\xff\xab\x1a\x59\x88\x24\x39\x7a\x40\x45\x8e\x84\x76\x5e\xe5\x7e\xb8\x98\x04\xc2\xf1\x6f\x15\xba\x69\xb3\x37\xeb\xf3\x8d\xb1\xf0\xf6\x03\x0a\xee\x40\x4d\xa3\xce\xd9\xff\x12\xba\x8e\xe2\x16\x36\x6f\xaf\x87\x77\x40\x31\x86\xb8\x5d\x28\xaa\xf5\xe0\x87\x1f\xe1\xdb\x6b\xc5\xf9\xf9\x9e\xbc\x12\x51\x17\xad\x4f\x3f\xe3\xa9\x8a\x78\xb5\x2d\x58\x14\x2c\xed\x97\xe6\x59\x80\xbd\x84\x52\xf4\xaa\xed\x0b\x4c\x4f\x7e\x77\xcf\x7e\x86\x24\x28\xb4\x83\x94\x4d\x0f\x58\xf5\x44\x23\x19\x1d\xe0\xc8\xb7\x17\x2e\xe8\xd2\x73\xb4\x30\x62\x94\x79\xc5\xfd\xc8\x1e\x9d\x9b\x77\x30\x62\x4a\x70\x44\x73\x7a\xd1\xec\x0e\x3c\xbb\x32\x9a\x94\x8d\xa1\x94\xd6\x93\x8f\xd2\x53\x9c\x38\x51\xa9\x58\x84\x2a\x85\x2d\xb2\xcb\x91\x9a\xb5\xf2\xb7\x54\x15\xf8\xe2\x42\xf7\x65\xe1\x55\xee\x23\xfb\x8a\x39\x0c\x24\x7d\xb0\x45\x1d\xa5\xe8\x42\xd7\xa9\xdb\xd9\xb7\x21\x0e\x58\x52\xbf\xc0\x96\x50\x1e\x69\xf1\x00\xd9\xab\xef\x07\x4a\x49\x37\x05\xfb\xf2\x57\x27\xdc\x32\x39\xbb\xbf\x6d\x9a\xe5\x82\x60\x39\x19\x8c\x96\xec\xbe\xf6\xbc\xb8\x4a\x45\x28\xe4\x16\xeb\xfe\x8e\x8e\xad\x66\xa2\x9c\x7b\x5a\xff\xbd\x18\x2e\xa7\xc5\xfa\x6e\x86\x44\x92\xc7\xda\xd7\xd4\xa3\xd0\x13\x45\x88\xd9\x2d\x49\x1c\xb3\x4e\xbe\xa9\xd6\x01\x83\x1e\x1c\xe1\x53\x19\x53\x82\xa3\x43\x7f\x5a\xf3\xb8\x64\xb4\xc6\x76\x79\xa6\x39\xd6\xc1\x92\x2a\x63\x54\x86\x24\x91\x4b\x0f\x49\x31\xcb\x2a\xbb\xdb\x69\x7a\xc3\x1a\x18\xf0\x79\x38\x52\x84\xd0\xd6\xc1\xa5\x3b\x6d\x96\xaa\x97\x93\x2f\x09\xda\x18\xb8\x09\xc8\xf6\xa2\xca\x66\x0b\x7f\xfe\x55\x4d\x70\xfe\x9f\x48\x34\xdf\x5c\x81\x17\x4d\x7f\xa6\x19\x4c\x18\xc6\xc8\x89\x52\x99\x78\x99\x54\x2a\xf4\x2a\xc1\x41\x13\x94\x47\x40\xc8\x9e\xff\xc9\xa4\xca\xe7\xba\x2d\x08\x4d\x0f\x9c\xbc\xa0\x37\xa4\x5c\xf0\xf6\xeb\xa0\xf6\xd6\xa2\xba\x5c\x77\xf0\x7e\x35\x46\xba\x5a\x25\xe1\x50\xa7\xa7\xb1\x28\x2b\xad\x2f\xdb\x3b\xf5\x18\x09\xbe\xbf\x0b\x82\x7a\x52\x47\xaf\xc0\x3a\x08\x3d\xef\xe9\xab\x5c\xfc\x56\x50\x2d\xb7\x2d\x45\xdd\xbb\x0b\x62\xfd\x1c\xe8\x52\xc2\x9b\x97\x57\xe0\xfd\x55\x57\xdd\x48\x5b\xd5\x64\xb3\xd5\xdd\xaa\xc6\xbf\x68\xf9\xf9\xf1\xc3\x23\x60\x96\xf0\x6e\xd5\x0b\x42\xdb\xae\x65\x55\xb5\x8b\xc0\xe7\x33\xec\xaf\x43\x52\x58\x15\xfa\xf9\x79\x51\xfd\x93\x43\xb3\xae\xf2\xdb\x9d\xf3\x31\xfb\x6a\xa0\xc2\xf5\xd7\x12\xc5\x04\x3f\xe9\xfa\xfe\x2f\x00\x00\xff\xff\x8f\xd1\xfa\xbf\x7e\x07\x00\x00")

func templatesConnectionConnection_customTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesConnectionConnection_customTemplate,
		"templates/connection/connection_custom.template",
	)
}

func templatesConnectionConnection_customTemplate() (*asset, error) {
	bytes, err := templatesConnectionConnection_customTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/connection/connection_custom.template", size: 1918, mode: os.FileMode(420), modTime: time.Unix(1490839005, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServerHttpHandler_xTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x56\x5d\x6f\xdb\xb8\x12\x7d\x96\x7e\xc5\x5c\x01\xed\x95\x0a\x57\x46\xfb\xe8\x8b\xe0\xa2\x4d\x82\x36\x68\x9b\x04\x49\x36\x7d\x58\x2c\x5a\x9a\x1a\x49\x5c\x53\xa4\x96\x1c\x45\x6b\x18\xfe\xef\x8b\x21\x65\x27\x2d\xdc\x4f\x60\x51\x3f\x59\xe4\x70\xe6\xcc\xcc\x99\x43\xf6\x42\xae\x44\x83\xd0\x12\xf5\x69\x3a\x9f\xc3\xb1\xad\x10\x1a\x34\xe8\x04\x61\x05\xcb\x35\x50\x8b\xf0\xc6\x76\xc2\x54\xf0\xca\xc2\xf5\xc9\x1b\x78\x15\xb7\xad\x2b\xe1\xe4\x02\xce\x2f\x6e\xe0\xf4\xe4\xec\x26\x4d\x55\xd7\x5b\x47\x90\xa7\x49\x56\x77\x94\xa5\x49\x86\x46\xda\x4a\x99\x66\xfe\xa7\xb7\x26\x4b\x01\x00\x32\x65\xe7\xca\x0e\xa4\xf4\xf4\x6d\x90\xe6\x1c\x3e\x4b\xe3\xf7\x66\x03\xe5\x65\x84\x75\x65\x2d\xc1\x76\x3b\x17\x92\x94\x35\x3e\xfb\xa2\x81\xb4\xc6\x60\x30\x8a\x36\xbd\xb6\x0d\x64\x8d\xa2\x76\x58\x96\xd2\x76\xf3\x55\x48\x60\xde\xeb\xa1\x51\xe6\xa9\xaf\x56\x4f\x1b\xfb\x7c\xae\x6d\x33\xf9\xfc\xa6\x69\x87\xde\x8b\x06\xb3\xb4\x08\x65\x62\x0c\xe7\xa2\x43\xd8\x6e\x5f\x0b\x53\x69\x74\xa0\x3c\x08\x68\xe3\x47\x4a\xeb\x1e\x0f\x19\x79\x72\x83\x24\xd8\xa4\x89\x84\x27\xf7\xa8\xcb\x63\x21\x5b\x4c\xb7\xc1\xf7\x39\x8e\x07\x4e\x3a\xa4\xc1\x19\x8e\x61\x70\x3c\xe0\x3a\xad\x07\x23\x0f\x9f\xcd\x0f\xc4\x2a\xe0\xc9\x81\x20\x9b\x34\x89\x71\xe0\xf1\x6e\x77\xbf\xb9\x49\x93\x44\x2e\x40\xce\xd2\x64\x3b\x21\xbd\x46\x77\x87\xaf\x6f\x6e\x2e\xa7\xbc\x7d\x20\x8b\xc3\xbf\x06\xf4\xe4\x23\xa2\xbc\x3d\x14\xa9\xb8\x3f\x9b\x8f\x81\x7d\xe5\x15\xfa\xde\x1a\x8f\xef\x9d\x22\x74\x33\x70\xf0\x64\x5a\x0f\xee\x8a\x08\x2e\xda\xc0\xe2\x08\x1e\x4f\x2d\xd9\x1f\x64\x80\xef\x90\xc4\x02\x7e\xff\x63\xb9\x26\xcc\x3f\x6e\xb6\x1f\x8b\x59\x9a\x24\xd7\x24\x68\xf0\x0b\xc8\xec\x2a\x0b\xf0\x93\xe5\x0c\xd0\x39\x76\x13\xb9\x58\x5e\xa1\xa8\x5e\x68\x9d\xbb\xf2\xa5\xad\xd6\x45\x9a\xcc\xe7\x70\x73\x71\x72\x01\x83\x47\x10\xa0\x55\xa7\x08\x1c\x8a\x0a\x1d\x90\x85\xde\xe1\x1d\x1a\x5e\xf1\x76\x70\x12\x41\x10\x09\xb9\xf2\xff\x4f\x13\x55\x07\xd7\xff\x39\x02\xa3\x34\x83\x4e\xc6\x32\xe4\xf4\x3a\x9c\xce\x43\x52\x11\xd1\x99\x21\x74\x46\xe8\x50\x0b\x77\xea\x9c\x75\x45\x9a\x24\x0e\x7b\xbd\x7e\xaf\xa8\x0d\x2b\xf9\x2e\xe9\x19\x8c\x01\x75\x34\xe1\x2e\x85\x54\x22\xe2\xf2\x58\x5b\x8f\x79\x11\xe2\xbb\xf2\x1d\x52\x6b\x2b\x06\x91\x5d\x5e\x5c\xdf\x64\x5f\xc7\x11\xad\xcf\x2d\xbd\xd0\xda\x8e\x58\x7d\x0b\x44\xdd\x51\x19\x96\xeb\x3c\xeb\x62\xa4\x47\x9e\x07\x60\x30\x7e\xe8\x59\x04\xb0\x82\xda\x3a\x88\x43\x04\xbb\xf9\x9d\xed\x91\x15\x9f\x25\xb1\xb4\xd5\xfa\x93\xa6\x72\x4e\xb7\xcf\x36\xdb\x34\xe9\x3e\x59\xbf\x7d\xc6\x99\xf0\xee\x02\x1e\xf3\xa9\xd8\xcf\xa9\xe8\x8b\x23\x60\xa5\x29\x7f\x33\x9d\x70\xbe\x15\x3a\x5f\xce\xa0\x2b\xfe\xf7\xdd\x1d\x79\x29\xaa\x1d\xdf\x7e\xb8\x11\xf3\x39\xec\xe3\x86\x41\x08\x49\x29\x43\x36\x8e\x85\x6a\x5a\x9a\x04\x20\x18\xbf\x47\x90\x76\xd0\x15\x88\x3b\xab\xaa\x60\xf3\x1c\xf0\x6f\x89\xde\x87\x2c\x60\xe7\x4b\x0a\xad\x3d\x28\x03\x2d\x3a\x84\x51\x51\xcb\x8c\xb4\x04\xb6\x06\x3f\x2a\x92\xed\x53\x29\xbc\x32\x0d\x58\x03\xac\x3c\x3e\xf8\x5f\x0e\xc4\x87\xa8\x55\x1e\xa4\x60\xd8\x1c\xa2\x47\x57\x5b\xd7\x09\x23\x11\x1a\xa1\x0c\xb7\xcd\x58\x02\x6a\x05\x41\xe3\x50\xd0\x0c\x58\xeb\x15\xfd\xd7\x83\x66\x2c\xcd\x4e\xee\x41\xf2\xe5\x40\x16\x3a\xa1\x0c\x09\x65\x42\x18\xb2\x50\x59\x50\x14\x03\x8d\x62\x5d\xde\x0f\x8f\xaa\x61\x44\xf0\x83\xef\x51\x4e\x06\x41\x26\x97\x96\x48\xa3\x41\xb9\x9a\x41\xef\x6c\xad\x34\xb2\x07\x8e\xeb\x47\xd1\xc3\x52\xc8\x15\x4c\x75\xbb\xcf\x10\x41\xf4\xbd\xb3\x42\xb6\x69\xa2\x4c\x3f\x50\x60\xc6\x44\xae\xf2\x81\xc8\x9c\xf1\xe6\xe6\xab\xb4\xe0\x91\x09\x66\x33\x08\xae\x7e\x80\x23\x3f\x3b\xb5\x30\xfd\x1e\x50\x26\x4d\x34\x83\xe3\xeb\xaa\x3c\xc7\xf1\xe5\x50\xd7\xe8\xb0\x7a\x6b\x9b\x06\x1d\x0f\x33\x0f\xd1\x87\xa8\x55\x47\xe0\x84\x69\x30\xc2\x2d\x6f\x85\x56\x95\x20\xcc\x59\x17\x77\x9e\xd9\xcd\xa5\x53\x86\xb4\xc9\x79\x46\xaf\x7b\xfe\xa8\xf3\x2c\x40\x82\xb1\xe5\x3a\xdf\xc5\x93\x4c\x97\x7b\x8d\x0f\xa5\x58\xc0\x23\x9e\x51\x74\x2e\x4e\x77\x5e\xf0\x98\x6e\xff\x6d\x49\x7b\xa8\x26\xdf\x07\xb4\x84\xe3\x16\xe5\x8a\xf3\xf5\x41\x67\x2a\x24\xa1\xb4\xcf\x8a\x83\x55\x96\x55\x20\xca\x83\x2b\xf0\x44\x90\xf8\x36\x3f\x8e\xf7\x07\x66\x20\xab\x5f\xc2\x90\xb0\xc4\xc0\xf7\xf7\x55\x5b\xca\xf2\x15\x52\x2e\xab\x19\xe8\x78\xe4\xf3\xf6\xec\xdc\xfc\x38\xbe\x08\xa8\x7c\x6b\x1b\x38\x02\x5d\x5e\x93\x53\xa6\xc9\x7f\x06\x3b\xff\x8d\x9a\x78\x2a\x64\xbb\x7b\x13\x80\x41\xac\x76\x6f\x18\x1d\x58\xce\x63\x2e\x45\x4f\x83\xc3\xa8\x39\x76\xa0\x7e\xa0\x7b\x0d\xe9\xec\x1d\x46\xe9\x20\x0b\x02\xfc\xda\xc8\xf2\xd2\x5a\x1d\xd4\xa2\x71\x62\x09\xd6\x20\xd4\xce\x76\x2c\x17\x0e\x01\x39\x20\xa9\x2e\x48\x95\x17\x77\xc8\xb2\x28\xb4\xb6\x92\xaf\xe7\xf9\x9c\xe5\x2e\xec\x09\xb3\xe6\xa3\x7c\xab\x33\xc9\x38\xc6\x02\x4e\x6c\x90\xc3\xc6\x82\xa8\xc2\xb2\x32\x0f\x62\xb2\xf8\xda\x81\x60\x30\x15\x3a\x4f\xc2\x04\x93\xd6\x8e\x1c\x7b\x1d\xbc\x8f\xd6\xad\x02\xb6\xb0\x6a\xf7\xfa\xc6\x60\x10\xb9\x59\x93\x63\x8e\x3d\x2a\xad\xf9\x7a\x1c\x84\xd6\x6b\xe8\xc4\x8a\x1f\x1b\x95\x0a\x32\xc0\x0a\xbd\x28\xe0\x8c\x8b\x42\x4e\xc9\xd5\x1a\x94\x72\x72\x92\xd7\x56\x90\x87\xb1\x5d\x3f\x50\xd5\x50\x2e\x8e\xcc\x09\xc4\xcf\xf3\xd3\x34\x89\x02\xc9\xdc\x39\x20\x95\x2f\xc2\x12\xcf\x42\xac\xfb\x9e\x67\xd1\xb6\xbc\x1a\x4c\x1e\xf9\xa7\xa2\x5a\xea\xe2\x17\x3c\x71\xbe\x4c\xcc\xfd\xd6\x45\x80\x0f\x47\x7b\xfe\x84\x10\x9c\xc9\xa7\x4f\x87\x9b\x75\x8f\x0b\xc8\x62\x7a\x1f\xc2\x2b\x8e\xdf\x84\xc9\x2d\x3a\xaf\xac\x59\x40\x76\xf7\x2c\x2c\xc4\x37\xc6\x1e\xd9\xee\xd9\xf8\x01\x26\xb1\x78\x37\x49\x45\x88\x53\x40\xe8\x09\xd3\x2f\xde\xa7\x2d\x77\x78\x44\x90\xc2\x84\xeb\xb1\x8e\x7d\x42\xe7\x98\x84\x5f\x2c\xd7\xc5\x9b\x62\xbf\x9b\x2f\x8b\x74\xfb\x4f\x00\x00\x00\xff\xff\xda\x94\x53\xb5\xa1\x0d\x00\x00")

func templatesServerHttpHandler_xTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerHttpHandler_xTemplate,
		"templates/server/http/handler_x.template",
	)
}

func templatesServerHttpHandler_xTemplate() (*asset, error) {
	bytes, err := templatesServerHttpHandler_xTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/http/handler_x.template", size: 3489, mode: os.FileMode(420), modTime: time.Unix(1490969798, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServerHttpServerTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\xcb\x6e\xdb\x48\x10\x3c\x73\xbe\xa2\x40\x18\x0b\xd2\x90\xc9\x75\x8e\x42\x8c\x45\x12\x05\xf1\x22\xeb\x07\x6c\x21\x39\x06\x23\xb2\x45\x4e\x4c\xce\x70\xe7\x61\x4a\x10\xf8\xef\x8b\x1e\xda\x92\xae\xeb\x93\xd5\x35\x55\xcd\xae\xee\x1a\x64\xf5\x22\x1b\x42\xeb\xfd\x20\x44\x59\xe2\x8b\xa9\x09\x0d\x69\xb2\xd2\x53\x8d\xcd\x1e\xbe\x25\x7c\x37\xbd\xd4\x35\xbe\x19\x3c\xaf\xbe\xe3\xdb\x0c\x1b\x5b\x60\xf5\x80\xfb\x87\x35\xbe\xae\xfe\x5e\x0b\xa1\xfa\xc1\x58\x8f\x4c\x24\xa9\x26\x5f\xb2\x66\x2a\x92\xd4\xab\x9e\x52\x21\x92\xf4\x70\x40\xf1\x38\x37\x7c\x32\xc6\x63\x9a\xca\xca\x68\x4d\x95\x57\x46\xf3\xcb\x46\xf9\x36\x6c\x8a\xca\xf4\xe5\x4b\xec\x58\x0e\x5d\x68\x94\xbe\x72\xf5\xcb\x55\x63\x3e\x94\x3d\x39\x27\x1b\x4a\x45\x1e\x3f\xf6\x9e\xc6\x67\xb2\xaf\x64\x61\xc9\x07\xab\x1d\x24\x34\x8d\x71\x1a\xb8\x88\x88\x6d\xd0\xd5\xe9\x61\x56\xe1\xf2\xd4\xb3\xf8\x22\xab\x96\x72\x64\x97\xcc\x28\xe6\x27\x0b\x90\xb5\xc6\xe6\x38\x88\xa4\x2c\xb1\x7e\x58\x3d\x80\x64\xd5\x62\xfe\x16\x68\xa2\x9a\x1b\x05\xad\xfe\x0d\x84\x38\xb2\x37\xa0\xdd\x60\x1c\x45\xca\x26\x78\x28\xed\xc9\x6a\xd9\x75\xfb\x05\x2a\xa9\x21\xbb\x0e\xc1\x11\x24\x2a\xd3\xf7\x46\x47\x9e\x48\x64\x5d\x5b\x2c\x6f\x90\x2e\xd9\x9c\xdb\xf5\xfa\xb1\x78\x64\xc1\x69\x4a\x4f\xdd\x7b\xf9\x42\xbc\x06\x47\xa8\x8c\xde\xaa\x26\x58\xb9\xe9\x08\xce\xf4\xd4\x9a\x51\x24\x96\x64\xbd\x56\x3d\x99\xe0\x59\x8c\x0d\x2f\x9e\xa9\x32\xba\xc6\xe5\xfc\x6b\x15\xac\xe4\x89\xb3\x63\x9b\xa7\x13\x67\x9a\x72\x91\x8c\x56\x79\xfa\xbf\x22\x3f\xcf\x48\xac\x22\x92\x3e\xec\x98\x1d\xfd\x7c\x77\xfd\x2e\xec\xb2\x5c\x00\x40\x59\xc2\x68\xc2\xd6\xd8\xd9\x52\x19\xd7\x10\xa1\xc3\xe1\x0a\x56\xea\x86\x70\xa1\x17\xb8\x18\x58\xa5\xf8\x14\x71\x87\x69\x8a\x6f\xfa\xb0\x2b\x6e\xa5\xae\x3b\xca\xd2\x72\xe6\xba\xf2\x70\xc0\xc5\x50\x3c\xc9\xf1\x5e\xf6\xc4\xc6\x2d\x78\xdd\x73\x95\x4b\xd3\x34\x53\x6c\x56\xe5\xf9\xb1\x15\xe9\x9a\x55\x45\xe2\xb8\xd1\x1f\x67\xfb\x3f\x88\x24\xf9\x54\xd7\x76\x89\xd3\x1f\xaf\x69\x21\x92\xe4\x4d\xe9\x08\xf5\x61\xc7\xe5\x33\x2f\x23\x74\xb6\x0f\x86\xcf\x5d\x62\xfc\xdc\x6a\xc6\xef\xe4\xee\x96\x64\x4d\xf6\xf3\xde\x93\x5b\xe2\x1a\x1f\x3f\xe2\xc3\x9f\x0b\x91\x4c\xbc\x5b\xbe\x6c\xb8\x05\xb4\xea\xc4\x14\xef\xfe\x1f\xd5\xb4\x1e\xa3\x95\xc3\x40\x16\xd2\x9a\xa0\xeb\xb7\x08\x28\xdd\x40\xea\xf9\x84\x31\x2a\xdf\xc6\xfc\x5a\x72\x83\xd1\x8e\x60\x36\xbf\xa9\xf2\x30\x9c\x99\x98\xf9\x18\x0f\x4b\x43\xb7\xff\xa9\x7c\xfb\x95\x69\xd9\xf1\xf5\xe5\x5b\xde\x8a\xa7\xb7\xca\x02\x73\xb8\x8e\x85\x38\xda\x1c\x99\xb3\xd8\xbc\x0b\x14\x51\x0f\x37\x0c\xcd\xff\x67\xf9\x19\xfa\xec\xa5\x0f\x0e\x37\x48\x23\x35\x15\x49\x1f\x97\xf1\xde\xf5\xc7\x35\xef\xe2\xb3\xa9\xf7\xcb\xe3\x04\xec\xd7\x7a\x3f\xd0\x12\xe9\x7c\x00\xbf\xe8\x95\xb4\x4f\xb9\xfe\x83\xac\x53\x46\x2f\x91\xbe\x5e\xa7\xb3\x7b\x9b\x05\x7e\xb1\xe6\x6f\x67\x74\x71\x27\xad\x6b\x65\x97\xf5\x39\x1f\xe2\xba\x25\x4b\x50\x0e\xda\xf8\x96\x6d\x1b\x29\x26\xb5\x36\x50\x5b\xf8\x56\x39\x6c\xa5\xea\xdc\x5f\x22\x19\xe7\x43\xcf\x36\xb9\x98\xfe\x0b\x00\x00\xff\xff\xda\x71\x2b\x70\x32\x05\x00\x00")

func templatesServerHttpServerTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerHttpServerTemplate,
		"templates/server/http/server.template",
	)
}

func templatesServerHttpServerTemplate() (*asset, error) {
	bytes, err := templatesServerHttpServerTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/http/server.template", size: 1330, mode: os.FileMode(420), modTime: time.Unix(1490969832, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTriggersTrigger_xTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x58\x5f\x6f\x1b\xb9\x11\x7f\x8e\x3e\xc5\x54\x48\x2f\x52\xb0\x5e\x35\x05\xfa\xa2\xc4\x0f\x97\xd8\x4d\x8d\xf8\x92\x83\x6d\xa4\x28\x50\x20\x47\x2d\x67\x57\x3c\x71\xc9\x0d\xc9\xd5\x46\x15\xf4\xdd\x8b\x19\x72\xf5\xc7\x92\xed\x5c\x80\xf3\x83\x21\x91\xc3\x99\xdf\xfc\x9f\x51\x23\x8a\x85\xa8\x10\x82\x53\x55\x85\xce\x0f\x06\x93\x09\xbc\xb3\x12\xa1\x42\x83\x4e\x04\x94\x30\x5b\x41\x98\x23\x7c\xb0\xb5\x30\x12\xde\x5b\xb8\xbd\xf8\x00\xef\xe3\xb5\x75\x39\x5c\x7c\x82\x8f\x9f\xee\xe0\xf2\xe2\xea\x6e\x30\x50\x75\x63\x5d\x80\xd1\x00\x00\xa0\xd1\xb6\x82\x61\xa5\xc2\xbc\x9d\xe5\x85\xad\x27\x0b\xe6\x31\x69\x74\x5b\x29\x73\xe6\xe5\xe2\xac\xb2\x7f\x9f\x68\x5b\x0d\x99\xfe\x69\x52\xa9\x7c\x23\x42\x31\x47\xf7\xbd\x2f\x6a\xf4\x5e\x54\x38\x1c\x44\xfa\xf5\x1a\xf2\x5f\xa3\xd2\x37\xd6\x06\xd8\x6c\x26\x85\x35\x06\x8b\xa0\xac\x19\x0e\xc6\x83\xc1\x7a\x0d\xcf\x8d\xa8\x11\xa6\xe7\x90\x7f\xa4\x0f\x9b\xcd\x60\xbd\x3e\x03\x27\x4c\x85\xf0\xdc\x64\xf0\xbc\xe1\xcb\x2b\xd3\xb4\xa1\xbf\x55\x25\x3c\x6f\xf2\x4b\xd3\xd6\xd7\x2a\xa0\x13\x9a\x2e\x26\x13\x88\x44\x74\xee\xf7\xb9\xa8\x0c\x9e\xb3\x88\x93\x8f\xb6\x18\x36\x9b\xbb\xe8\x19\x66\x43\xc7\xd8\x63\x02\xe5\x41\x18\x40\xd3\xd6\xc9\x51\x4b\xa1\x5b\x1c\x14\xd6\xf8\xb0\xe5\xf0\x18\x83\x73\x88\xdf\x93\xec\xcf\xf4\xbc\x57\x07\x8d\x7c\xfc\xe3\x91\x35\x3e\xb5\xe1\x3b\xcc\x91\xa8\x7e\xd0\x1e\x5b\x6d\x22\x9b\x1f\xb0\x07\x3c\xca\xe2\x87\x2d\x92\x40\x32\xa3\x43\x93\x83\xc4\x52\x19\xf4\x9c\x43\x8a\x4f\x4a\xeb\xf8\x5b\xff\x60\x87\x69\x10\x56\xcd\xa9\xf3\xc8\xc9\x07\xd7\x16\x01\xd6\x1c\xc9\xfb\x3e\x80\xc3\x90\xdc\x6c\x12\x05\x19\xb3\x57\x2d\x7e\xbb\x23\xfe\x9b\x0d\xfc\xf6\xbb\xb7\x66\x3a\x8c\x87\x37\xa2\x4b\x54\xc3\xdf\xb6\xbc\x93\x62\x0f\xa8\x96\xdc\xb8\xaf\x9b\x8d\x47\xf7\x95\x7b\x52\xb7\xc4\xea\x3b\x94\xdb\x45\xd8\x9f\xa4\xde\x0e\x14\x88\xbe\x24\x3e\x04\xfb\x10\xf0\xd7\x16\x5b\x84\x62\x2e\x0c\xbc\x7c\x48\x45\x26\xdc\x15\xb0\xbd\x8f\xf9\xc5\xf6\x23\x13\xd5\x18\x04\xa4\xc2\x95\x27\x1e\x97\x4b\x34\xe1\x17\x0c\x22\x61\xfe\x88\xdd\x09\x50\x0e\x43\xeb\x8c\x07\x01\x06\x3b\x58\xaf\xef\xdf\x37\xce\x36\xe8\xf4\x0a\x94\x51\x41\x09\xad\xfe\x87\x12\xa8\xac\x3b\x14\x72\x05\xc1\x82\x6b\x4d\x3e\x28\x5b\x53\x9c\x96\x30\x92\xa7\x71\x67\x8f\x83\x1e\x9f\x32\x4b\xb2\x5d\xc4\x0c\x3f\x1d\x13\xc4\xfb\xad\x7d\xa7\x50\x8b\x05\x8e\x1e\xb7\x72\x06\xaf\xc6\xd9\xf6\xdd\x0e\xeb\x14\xe4\xee\x98\xb0\x4e\xf9\x7f\x3c\xeb\x03\xe1\x96\xc2\xa2\x53\x5a\x83\x6f\x67\xb5\x0a\x20\x1e\x0e\x58\x6b\x82\x4d\x49\x1d\xd0\x19\xa1\x23\xc8\x0c\xba\xb9\x2a\xe6\x74\x63\x60\xd6\x96\x25\x3a\x0f\x89\x12\xbf\xed\x53\x46\x2b\x8f\xc2\x29\x5d\xc6\x0c\x65\x64\x23\xf3\x52\x14\xb8\xde\x8c\x93\xbd\x42\x1e\xa3\xed\xcd\x19\xd8\x7c\xf4\xf2\x81\xdc\x1c\xf7\x2a\x05\xdb\x44\x95\x0a\x6d\x3d\x3e\x82\x98\x89\x1a\x87\xe4\x33\x0e\x9f\xdf\xed\xcc\x43\xe9\x6c\x0d\x48\x0f\x94\xa9\xf2\x27\x30\x07\xdb\x8c\x7a\x98\x2c\x6e\x94\xc0\xf6\x68\x6e\x5a\x73\x6d\x6d\x43\x51\x16\xab\x46\xe8\xf3\xcd\x48\x98\x69\x5b\x2c\x3c\xb4\x26\x28\x7d\x70\xd9\x58\xad\x95\xa9\xa8\xc2\x17\xb6\x6e\x34\x06\x04\xeb\x00\x9d\xb3\xce\xe7\x70\x15\x22\x76\x7e\x9f\x93\x98\xbb\x4f\x17\x9f\xe0\x6e\xce\xf4\xad\x96\x30\x43\xb0\x4d\x50\x35\x87\xbb\x27\x67\x88\xc0\x12\x86\xca\xf8\x20\x4c\x80\xa0\x8a\xc5\x10\x94\x54\xb6\x26\x31\xd6\xe8\x15\xb4\x1e\x25\x74\xe4\x47\x06\xa3\x8a\x05\x3a\xba\xa4\x73\x6e\xed\x01\x3a\x66\x1f\xc4\x02\xa1\xb6\x0e\xa1\xb3\x6e\x01\xb3\x36\x80\xea\xef\x66\x08\x22\xd6\x49\x15\x10\x54\xdd\x38\xbb\xc4\x1a\x4d\xc8\xe1\x67\xcd\x50\x94\x07\x69\xd1\x43\x8d\x22\x4a\x2a\x95\xf3\xc4\x81\xda\x98\xb2\x86\x44\xd9\x92\x6f\xb4\xed\x9d\xa9\x2a\x43\xf2\x04\x14\xc2\x14\xa8\x35\x12\x65\x74\x16\x11\x16\xd6\x04\xfc\x16\x32\xc6\xc2\xba\x2a\x0f\x41\xd5\x08\x0a\x44\xcd\x2c\xc8\xa0\xc1\x82\x28\x0a\x6c\x42\xb2\x88\x13\x12\x6d\x59\x92\x44\xaf\x4c\x81\xf1\xdd\x1c\x75\x13\xbd\xc5\x3a\x6a\xb5\x40\xbd\x82\x42\x78\x24\x5c\xdb\xa4\x87\x19\x12\x4f\x6d\x3d\x25\x07\xf8\x56\x4a\x34\xe0\xe7\x6d\x90\xb6\x33\x4f\x84\x4e\x0a\x8c\x51\x11\xbe\xf5\xe0\xf3\x77\xbd\x12\x34\xa1\xc1\xcb\xdd\x9c\x46\x37\xe9\x63\x96\x7a\xea\x71\x1a\x70\x2b\xcc\x80\x46\x50\x9a\x43\xf3\x6b\x1b\x25\x71\xd4\xc4\x18\xa5\x48\x49\x21\xc6\x5c\x92\xdf\x2b\x0c\xe0\x29\x09\x94\x01\x6b\x0a\xcc\xe1\x2d\x96\xec\x5d\x84\x98\x1d\x33\x1b\xa8\x82\x77\x2a\xcc\xa3\x89\xd8\x31\x3e\xb4\x65\x99\x41\x31\xc7\x62\x01\x2a\x24\x09\x6f\x85\xd2\x34\x0e\xa9\xf0\xc2\x83\x32\x4b\xa1\x95\xa4\xab\xa5\xe0\x08\x8e\x78\xe8\x80\x3a\xe7\x97\x8c\xcf\xce\x53\xf7\x63\x54\xf9\x67\x7a\x22\x02\x6e\x53\x8b\xfe\x48\xa5\x5f\x9d\x32\x41\x9b\x51\x59\x87\xfc\xb6\xa1\x2f\xe5\x68\x78\xc9\xfa\x75\x73\xa5\x11\x96\xf1\x25\xb9\xe5\xb4\x7d\xa6\xf0\x57\x3f\x64\x99\x39\xbf\x1b\x8d\xc7\xe3\x01\x17\x44\x00\x02\x4d\x60\xfe\x72\x0e\x46\xe9\x9d\xe8\x54\xaf\x49\x28\xbf\xf9\xa3\x32\x73\x78\xc7\x16\xd2\xb6\xf2\xac\xb4\xc4\x20\x94\xf6\xc3\x9d\x64\x72\x4c\x1f\xb1\x6e\x97\x95\x02\x66\x2a\x80\x95\x12\xce\x28\xc1\x94\x7f\x30\x87\x07\xcf\xd8\xf2\x5e\x15\x42\xeb\x55\x06\x0a\xa4\x35\x2f\xa8\xac\xa1\xa4\xa8\xef\x84\xda\x8d\x2a\xf7\xf2\xad\x4f\xb6\x28\x9c\x88\x54\xa0\x37\xa5\x72\xc8\x7c\xe9\xa9\x72\xe8\x41\xd5\x35\x4a\x25\x02\x92\x08\x2e\xf8\xb8\x44\xb7\x02\xd9\x26\x4e\x14\x25\x28\xca\x80\x2e\xe7\x97\xb7\x88\x53\x98\x87\xd0\xf8\xe9\x64\xd2\x75\x5d\xee\x50\x4a\x15\x78\x7d\x71\x93\xca\x6a\x61\xaa\x49\x61\x6b\xaa\x0f\x7e\xf2\x8f\xea\x6f\x73\xeb\x26\xb1\xf0\x7c\xa1\x60\xfb\x92\x54\xfd\xe2\x83\x70\x61\x22\x85\xfd\xf6\x15\x57\x13\xf6\xcc\x64\x02\xff\xb1\x6d\xac\x0e\x1c\xc6\x1e\xa9\x3e\xa4\xb2\x45\x40\xc8\xa1\xa4\x58\x1f\xf3\x71\x7a\x93\xd1\x88\x57\x54\xe2\x97\x42\x0f\xa1\x54\xa8\x65\x06\x1c\xe2\x9d\xf2\xa9\x08\xb0\xf9\x97\xc2\x28\xad\x05\x19\x65\xed\x51\x63\x11\xd6\x69\x1a\x23\x33\xa5\xb9\x3f\xff\x97\xf0\x3d\x37\x1a\xc6\x08\x01\xcd\x6f\x64\xcf\xfc\x23\x76\x77\x8c\x68\xc4\x5f\x6f\xb1\xb0\x46\xc2\xcb\x78\x79\x91\xec\x36\x8a\x71\xdf\x33\x19\x8f\x5f\xc3\xeb\xdd\xd0\xb6\xcb\x01\x9b\x3a\x3e\x45\x29\x09\xc8\x6f\x5a\x33\xa2\x32\x91\xaa\x02\x67\xff\x78\x4b\xfe\x40\x3c\x1f\xa6\xd3\xbd\x68\x76\xad\x31\x5c\x29\xfb\x3e\x55\xc4\x42\xcb\xea\xde\x2f\x63\x94\x4d\xff\x35\xf7\xf2\xe9\x40\x0c\x95\x36\x65\x5a\xdc\x1e\x6e\xb6\x9f\x42\x1e\x5b\x7e\xec\xde\xe4\xce\x6b\x14\xcb\x64\xfd\xd6\x04\xdb\x16\x73\x94\xa0\x95\xc1\x8c\xdb\xcb\xde\x98\xb2\xdf\x2c\xd3\x1c\x9e\x46\x8e\xb4\xb5\xfb\x95\x0f\x58\xe7\x83\xad\xb4\xe8\xbd\x3d\x23\x70\x39\x7f\x73\x56\x84\x6f\xf9\x85\x35\x38\x1a\x4f\x0f\x80\xa7\xa4\xa7\xeb\x4b\xe7\x46\x3b\xad\x4e\x38\x7d\xb3\xb9\xcf\x95\x63\x20\x7f\x77\xc8\x72\x32\x81\x7f\x53\xce\xa8\x98\xb9\x3e\x8b\x55\x74\x26\x8a\x45\x8f\x3e\xd8\xe6\x71\xf3\xa5\xa8\xd8\x93\x98\xf0\x18\x1b\x1e\xc2\x24\xb1\x14\xad\x0e\x47\x60\xae\x4f\x48\xcf\xb6\xb3\x07\x5b\x91\xad\x1d\xe2\xd7\xd8\x02\x52\xef\xfb\xa3\x28\x37\x07\x63\xe7\x0d\x0a\x79\xbd\x6d\xed\x3c\xc6\x64\x3c\x91\x93\xa4\x38\x0e\x09\x8e\xd9\xbe\xd3\x2a\x0f\x0e\x0b\x54\x4b\x94\x19\xcf\x0d\x1c\xa2\x47\x93\x1d\x74\xc2\xc7\x39\x4c\x3e\xd1\x7d\x13\x80\xd3\xed\x57\x3f\xd8\x40\x63\x1e\x3c\x11\x54\x29\x20\xa7\xe7\xf0\xe6\x2c\x8d\x83\x87\xb6\x57\x65\x4f\x73\x7e\x2a\x35\xa1\x6f\x08\x71\xc1\x32\xa8\xf7\xf4\xca\xa8\x29\x57\x36\xf0\xea\x5f\x37\x61\x75\x16\xcf\xcf\xc8\x7c\x19\xcd\x7a\x1d\xc2\x8c\x5a\xb0\x6d\x43\x6c\xd8\xc6\x82\xf2\xbe\x45\x7f\x24\x25\x05\xb9\x51\xfa\xe0\x6a\x73\x2f\x13\x7c\x63\x8d\xe7\x1f\x2b\x4e\xad\x3b\xc7\xe0\x69\x2b\x9d\xc2\x70\x98\x71\xc8\x23\x48\x25\x39\x3e\x3d\xa6\xcc\xa5\x0d\x53\xc5\xd9\xef\xf6\xe2\x03\xcc\x78\xda\xc8\xa8\x80\xd7\xbc\x3b\x70\x39\x9f\x61\x6c\x58\xe8\x39\x00\xad\x03\x8d\x95\x28\x56\xdc\xd3\x8e\x75\xb9\xba\x78\x4c\xe4\xd5\xc5\xb1\xc0\x23\x16\xef\x9d\x6d\x9b\xc7\xf9\x24\x92\xef\x60\x16\xb7\x92\x69\x5f\xb3\x8f\xee\x7f\xe1\x95\x2c\xe4\xbc\x94\x01\xff\x0a\xd9\xac\x52\x4c\x17\xb6\x26\x95\x79\xc3\x0c\x16\x1a\xe1\x3d\x55\x0d\xa1\x6d\x9c\x61\xd3\xcf\x0f\x95\x8d\x54\xc7\x19\x79\xe8\xc1\x7a\xdf\x75\x9f\x5f\x1d\x3b\xec\x33\x3a\xaf\xac\x99\xc2\x70\xf9\x6a\x78\x0c\x35\xf9\x33\x15\xdc\x2f\x3c\x12\x9e\x20\x7b\x6b\xe5\x6a\x0a\x3f\xf5\xf1\x92\x3d\x82\xa8\x5f\x3d\x79\xc6\x4e\x39\x9e\xf4\x5a\xec\x17\xf0\xc1\xb3\x67\xb0\x6b\x64\xdc\xf2\xf6\xb6\x71\xee\x1f\xf5\xf8\xf5\x61\x97\x7b\x16\xdf\xec\x37\xb8\x1b\xaa\x1d\xb8\x44\x99\x72\xd9\xa3\x91\xfb\x4d\x2e\x41\xd8\x0d\x87\xe3\x9e\x4b\xca\x10\x74\x2e\x41\x39\x2a\xf5\x0f\x35\x90\x18\x3f\x71\x36\xe6\x96\xf6\xf3\x3f\xef\x2e\x6f\x58\xc5\xb4\x85\xce\xb0\x10\x6d\xda\x50\x9b\x76\xa6\x95\x9f\x73\xc7\xe7\x71\xac\x9f\xb1\x39\xd8\xc9\x36\x9e\xf6\xda\x5d\x41\xbe\x2f\x2b\xcc\x95\xa9\xb6\x8b\x77\x52\x2c\x0d\x69\x1d\xf2\x0f\x09\xe0\x5b\x9e\xe9\x5f\x2c\x11\xa4\x13\x69\x14\x12\xa1\xaf\x32\x3b\xea\x42\x18\x96\x97\x9f\xd0\x28\xce\x95\x1d\xcf\x9f\x16\xbe\xb6\x2a\x55\x99\xdd\x5a\xe4\x03\x2f\x6c\x31\x43\x1a\xd5\x60\x06\x1a\x79\xe0\xa4\x9c\xa6\x75\x29\x87\x63\xc6\x2f\x1c\xf3\x26\xbb\x08\xa5\x6d\xfa\xf9\xa8\xff\x7b\xb0\x1d\x6f\x06\xcf\x36\x83\xcd\xff\x03\x00\x00\xff\xff\xce\xe9\x06\x3f\xd7\x17\x00\x00")

func templatesTriggersTrigger_xTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesTriggersTrigger_xTemplate,
		"templates/triggers/trigger_x.template",
	)
}

func templatesTriggersTrigger_xTemplate() (*asset, error) {
	bytes, err := templatesTriggersTrigger_xTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/triggers/trigger_x.template", size: 6103, mode: os.FileMode(420), modTime: time.Unix(1490911296, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTriggersTrigger_x_customTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x55\x4d\x8b\x1c\x37\x10\xbd\xf7\xaf\x28\xf6\x10\x66\x4c\x6f\x8f\xc9\xd1\xe0\x40\xf0\x69\x49\xb0\x83\xe3\x04\x42\x08\x58\x2d\xd5\x74\x2b\xa3\xae\x12\x52\x69\xc7\xc3\x32\xff\x3d\x94\xd4\xb3\xde\x75\xec\xc4\x21\x17\xe3\x3d\xec\xcc\xb4\x54\xaf\x3e\xde\xab\xd7\xd1\xd8\x83\x99\x10\x24\xf9\x69\xc2\x94\xbb\xce\x2f\x91\x93\xc0\xa6\x03\x00\x88\x81\x27\xb8\x9a\xbc\xcc\x65\x1c\x2c\x2f\xbb\x03\x2f\x86\xdc\x2e\x86\x32\x79\xba\xce\xee\x70\x3d\xf1\xb7\xbb\xc0\xd3\x55\xbd\x7f\x75\x77\x07\xc3\x4f\x0d\xf3\x35\xb3\xc0\xf9\xbc\xb3\x4c\x84\x56\x3c\xd3\x55\xb7\xed\xba\xdd\x0e\x7e\x35\xc1\x3b\x23\x08\x47\x1f\x02\xdc\x5e\x7e\xc9\x8c\xe0\x29\x16\x01\x9f\x21\x26\x8e\x98\xc2\x09\x32\x4a\x89\x70\xf4\x32\xc3\x71\x36\x82\xb7\x98\x20\x95\x80\x19\x4e\x5c\xa0\xde\x26\x05\xfd\x8d\x0b\x58\x43\x60\x42\x66\x28\x59\xe1\x7c\x06\x61\x88\x09\xaf\x33\x0a\x18\x3a\x69\xae\x82\x19\x46\xdc\x73\xaa\x09\x4f\x60\x12\x42\x2a\x04\xe3\xa9\x16\xf0\xba\x10\x2c\x28\x33\xbb\x41\x51\x5f\x72\x2d\xcc\x08\xec\x39\xc1\x9b\x75\x4a\xfd\x5a\xab\x17\x6f\x02\xdc\xd4\x9a\x17\xcc\x59\x27\xe9\x33\x30\x85\x13\x78\xca\x11\xad\xa0\x03\x26\x04\xf1\x0b\xf6\x60\x44\x03\x15\x77\x64\x16\x4f\x13\x94\x08\xbc\xaf\x68\x2b\xf6\x00\x3f\x20\xc6\x56\xbc\x27\x58\x3c\x39\x38\xce\x48\x3a\x87\x1a\xa1\x6d\xb4\xe1\x88\x47\xcd\x55\xa3\x5b\x0d\xfe\xe1\x20\x12\x4a\x49\x04\x46\x23\x35\x09\xa6\xc4\x29\xd7\x3e\x14\x23\xa1\xc9\x1a\xcc\xb0\x37\x3e\x54\x90\x2c\x18\x6b\xd7\xaf\x64\xc6\x74\xf4\x19\xfb\x0b\x0a\xf9\x50\x23\x73\xb1\x16\x73\xee\xf6\x85\x2c\x6c\x3c\x3c\x51\xc2\x5f\x9a\x05\xe1\x7c\x5e\x3b\xa8\xa5\x6c\xef\x49\xde\x6c\xe1\xf7\x3f\x6a\x6e\xb8\xab\x1a\x59\xeb\x78\xf6\x1c\x16\x73\xc0\xcd\x7a\xd8\xc3\xd3\x6d\x3d\xae\xff\x76\x3b\x78\x51\xb2\xf0\x72\x51\x87\x67\x02\xcb\x0e\x61\xc6\x84\x97\x2b\xdf\xc7\x88\xe4\x2e\x80\x26\x03\x21\x3a\x74\xdd\xe5\xbc\xd5\x5e\x7f\xf9\x3d\x04\xa4\x4d\xbb\xba\x85\xef\xe0\xe9\x5a\x8d\xfe\xad\x3d\xb6\xc3\xfa\xf4\xdc\x3d\x78\x4e\x3e\x74\xe7\x7f\x13\x2e\x17\xf9\xbf\xca\x0d\x68\x6e\x57\xd9\x8e\xc1\xd0\x41\x8b\xd6\x9b\x47\x43\x02\xc2\x3d\x8c\x1a\xd2\x9e\x69\xa7\xca\x1d\xd2\x9e\x93\x45\x48\x98\x25\xf9\xba\x65\x59\x31\x75\x4c\x5a\xcc\xb1\x7e\x39\x7d\x28\x09\x2a\xcb\x88\xe9\xbd\x2a\x86\xcf\xa6\x9c\x3f\x46\xf9\xab\xda\xfc\xd7\xc9\xb9\x1a\x42\x2a\x94\x2b\xcb\xab\x4d\x36\x2a\x1c\x63\x06\x62\x81\x31\xb0\x3d\x64\x30\xe4\xda\xea\x7f\x78\x1d\x22\x87\xa0\xbb\x7b\x71\x02\xc5\xbd\xa9\x62\xf1\x24\x48\xae\x71\x39\x22\x58\x13\x02\x3a\xd8\x27\x5e\xd4\x40\xbc\x43\xe5\xc8\x40\x60\x8e\x3d\x1c\x67\x6f\x67\x98\x0d\x39\x15\x51\x2e\xe3\xe2\x9b\x27\x68\xae\x84\xb9\x04\xa9\xe4\x6b\x21\x07\xc4\x58\x8f\x92\xb1\x07\x05\xa9\x26\x22\x5c\x53\x34\x91\x5d\x6c\xae\x11\x2b\x1f\x23\x76\xab\xed\x6f\xac\xbc\x03\xcb\x24\xf8\x4e\x86\x17\xed\xb3\xd7\x07\x04\x4f\xde\x9b\xbb\x9e\xac\x5f\xfb\xd5\xc6\xef\x01\x1f\x7b\x43\x0f\xfa\x56\xd1\x57\xcb\xf0\x23\xb7\x2c\x9b\x4f\x8a\xaa\x6f\x14\x6d\x57\xea\xda\xba\xa4\xbf\xeb\xe2\x97\xdc\xf6\xf0\x6d\xe0\xe9\x2d\xf0\xf8\x27\x5a\x81\x68\x72\x46\xa7\x43\xe6\x7a\xb8\x96\xb8\x76\x5e\xe7\xa4\x56\x18\x78\x9a\x74\x56\x5e\x97\x69\xa9\xc2\xbb\xc0\xd6\x45\x1f\x71\x95\x05\xba\xb6\xce\x8a\x75\xef\xf7\xcd\x80\xb5\xa5\xbd\xc7\xe0\x1e\xad\x92\x97\x7b\x04\xe7\xb3\x35\xc9\xa1\x1b\x1e\x49\x5e\xe5\x30\xfc\x1c\x10\xe3\xa6\x0e\x6d\xb8\x21\xc1\x74\x6b\xc2\x56\x4f\x6f\xea\xb6\xa7\x7b\x21\xe9\xf6\xe4\xfa\x76\xab\xb2\xc8\x1a\x57\x35\xa4\x11\x3d\x14\xb2\xbc\x2c\xa8\x76\xa1\x04\x07\x4f\xb8\xaa\xf8\x0d\x66\xf9\x2c\x19\xff\x17\x15\xff\xa3\x70\x34\xe3\x97\xa4\x9c\xd5\xa0\x9f\x3d\x87\x6f\x3e\x15\x71\x77\xfe\x7a\x34\xf6\xd0\xcc\x78\x9d\x47\x35\xb5\xbf\x02\x00\x00\xff\xff\x9b\xf0\xc2\x6c\xf2\x09\x00\x00")

func templatesTriggersTrigger_x_customTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesTriggersTrigger_x_customTemplate,
		"templates/triggers/trigger_x_custom.template",
	)
}

func templatesTriggersTrigger_x_customTemplate() (*asset, error) {
	bytes, err := templatesTriggersTrigger_x_customTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/triggers/trigger_x_custom.template", size: 2546, mode: os.FileMode(420), modTime: time.Unix(1490911664, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTypesSdk_fileTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8e\x4d\x4e\xc3\x30\x10\x85\xf7\x39\xc5\x53\x0e\xd0\xee\xd9\xd6\x50\x45\x91\xda\x45\x8a\x58\x12\xc7\x9e\xa4\xa6\x89\x27\xb2\xa7\x94\x08\x71\x77\x64\x43\xa1\xea\x72\x7e\xde\xf7\xbe\x59\x9b\x93\x1e\x08\xb2\xcc\x14\x8b\x62\xbd\xc6\x86\x2d\x61\x20\x4f\x41\x0b\x59\x74\x0b\xe4\x48\xa8\x79\xd2\xde\x62\xcb\x68\x54\x8d\xed\xcf\x99\xc3\x0a\x6a\x8f\xdd\xfe\x80\x47\x55\x1d\x72\xbc\x51\xf5\x93\x1b\x09\x2e\x42\xa3\xd3\xd1\x19\xf4\x69\x4e\x05\x98\x03\xbf\x3b\xfb\x4f\x6d\x54\xbd\x42\x25\xb0\xd4\xeb\xf3\x28\x11\xc2\xd0\xe8\x1d\x8d\x16\x3d\x87\x9c\xf4\x7a\xa2\x04\x4e\xf5\xb7\xb7\x94\x37\xec\x85\xbc\xc4\x0c\xb9\x70\x38\x45\x58\x17\xc8\xc8\xb8\xe0\xe2\xe4\x78\xab\xfe\x42\x1d\x9e\xab\xbf\x68\x47\x51\x12\x96\x3e\x66\x0a\x8e\xbc\xa1\x22\x2b\x5e\xfd\xa3\x84\xb3\x11\x7c\x16\x00\x90\x36\x3b\x3d\xe5\xad\xf3\x03\xda\xb7\xc8\xfe\xa1\x4c\x7a\xaf\xc9\xaf\x6c\xf3\xdb\xe6\x57\xe7\xee\xed\x6a\x59\xb6\xc5\xd7\x77\x00\x00\x00\xff\xff\xab\x35\x10\x3d\x70\x01\x00\x00")

func templatesTypesSdk_fileTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesTypesSdk_fileTemplate,
		"templates/types/sdk_file.template",
	)
}

func templatesTypesSdk_fileTemplate() (*asset, error) {
	bytes, err := templatesTypesSdk_fileTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/types/sdk_file.template", size: 368, mode: os.FileMode(420), modTime: time.Unix(1490835058, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTypesType_xTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x51\xbb\x6e\xf2\x30\x18\xdd\xfd\x14\x47\x28\xd3\x2f\xfe\x64\x47\x62\x2a\x14\x21\x2a\x90\x0a\xea\x8c\x89\xbf\xd0\xb4\x8e\x1d\xd9\x4e\x2b\x64\xe5\xdd\x2b\x1b\x03\x29\x6a\x97\x6e\xdf\xed\x5c\x7c\xdc\xf2\xf2\x9d\x1f\x09\xee\xd4\x92\x65\xac\x28\xf0\xa0\x05\xe1\x48\x8a\x0c\x77\x24\x70\x38\xc1\xbd\x12\x56\xba\xe1\x4a\x60\xa1\xb1\x9d\xad\xb0\x38\xaf\xb5\xc9\x31\xdb\x60\xbd\xd9\x61\x3e\x5b\xee\x18\xf3\x1e\xd9\x9a\x37\x84\xc9\x14\x79\x2c\xfa\x9e\x79\xff\x1f\x86\xab\x23\x21\x53\x63\x64\x6d\x5c\x3e\xd6\x24\x85\xbd\x5b\xd7\x63\x64\x11\x9b\xb5\xf9\x5c\x75\xcd\x53\xed\xc8\x70\x19\xae\x8a\x02\x57\xf2\xbe\x0f\x25\x5d\x04\x50\x5b\x70\x05\x52\x5d\x93\x3c\x7f\x70\xd9\x11\x2b\xb5\xb2\xee\x77\xd4\x14\xe7\x3e\x89\xbc\x04\xcc\xc5\x0f\x29\x71\xab\xc2\x30\xe9\x7f\x93\x44\xd9\x59\xa7\x9b\x18\xdd\x20\x30\x5d\x55\xd0\x55\x0c\xcd\xb6\x54\xb2\xb8\x1e\x62\xad\x33\x5d\xe9\xe0\x19\x00\xfc\x18\xce\x56\x1b\x47\xe2\x16\xd1\xe5\xb0\xae\x62\x32\xcd\x81\xc4\x6d\x9c\xa6\xeb\x4e\x4a\x7e\x90\x41\xe1\x9f\xf7\xc9\x77\x78\x61\x9b\xef\xc2\xdf\x2e\x95\x23\xa3\xb8\x0c\xcd\x00\x4c\xd2\x0e\xdb\x40\x94\x6c\xfe\x95\x19\xfb\x37\xab\xd5\x64\x74\xbe\x78\xe6\x9f\x89\x70\xb4\xbf\xbe\x23\x85\x7a\xd7\xf6\x5f\x01\x00\x00\xff\xff\x97\x7d\xb6\x0a\x8c\x02\x00\x00")

func templatesTypesType_xTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesTypesType_xTemplate,
		"templates/types/type_x.template",
	)
}

func templatesTypesType_xTemplate() (*asset, error) {
	bytes, err := templatesTypesType_xTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/types/type_x.template", size: 652, mode: os.FileMode(420), modTime: time.Unix(1490288348, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesVendorGitkeep = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func templatesVendorGitkeepBytes() ([]byte, error) {
	return bindataRead(
		_templatesVendorGitkeep,
		"templates/vendor/.gitkeep",
	)
}

func templatesVendorGitkeep() (*asset, error) {
	bytes, err := templatesVendorGitkeepBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/vendor/.gitkeep", size: 0, mode: os.FileMode(420), modTime: time.Unix(1490194044, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/Dockerfile.template": templatesDockerfileTemplate,
	"templates/Makefile.template": templatesMakefileTemplate,
	"templates/actions/action_x.template": templatesActionsAction_xTemplate,
	"templates/actions/action_x_custom.template": templatesActionsAction_x_customTemplate,
	"templates/cmd/main.template": templatesCmdMainTemplate,
	"templates/connection/cache.template": templatesConnectionCacheTemplate,
	"templates/connection/connection.template": templatesConnectionConnectionTemplate,
	"templates/connection/connection_custom.template": templatesConnectionConnection_customTemplate,
	"templates/server/http/handler_x.template": templatesServerHttpHandler_xTemplate,
	"templates/server/http/server.template": templatesServerHttpServerTemplate,
	"templates/triggers/trigger_x.template": templatesTriggersTrigger_xTemplate,
	"templates/triggers/trigger_x_custom.template": templatesTriggersTrigger_x_customTemplate,
	"templates/types/sdk_file.template": templatesTypesSdk_fileTemplate,
	"templates/types/type_x.template": templatesTypesType_xTemplate,
	"templates/vendor/.gitkeep": templatesVendorGitkeep,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"Dockerfile.template": &bintree{templatesDockerfileTemplate, map[string]*bintree{}},
		"Makefile.template": &bintree{templatesMakefileTemplate, map[string]*bintree{}},
		"actions": &bintree{nil, map[string]*bintree{
			"action_x.template": &bintree{templatesActionsAction_xTemplate, map[string]*bintree{}},
			"action_x_custom.template": &bintree{templatesActionsAction_x_customTemplate, map[string]*bintree{}},
		}},
		"cmd": &bintree{nil, map[string]*bintree{
			"main.template": &bintree{templatesCmdMainTemplate, map[string]*bintree{}},
		}},
		"connection": &bintree{nil, map[string]*bintree{
			"cache.template": &bintree{templatesConnectionCacheTemplate, map[string]*bintree{}},
			"connection.template": &bintree{templatesConnectionConnectionTemplate, map[string]*bintree{}},
			"connection_custom.template": &bintree{templatesConnectionConnection_customTemplate, map[string]*bintree{}},
		}},
		"server": &bintree{nil, map[string]*bintree{
			"http": &bintree{nil, map[string]*bintree{
				"handler_x.template": &bintree{templatesServerHttpHandler_xTemplate, map[string]*bintree{}},
				"server.template": &bintree{templatesServerHttpServerTemplate, map[string]*bintree{}},
			}},
		}},
		"triggers": &bintree{nil, map[string]*bintree{
			"trigger_x.template": &bintree{templatesTriggersTrigger_xTemplate, map[string]*bintree{}},
			"trigger_x_custom.template": &bintree{templatesTriggersTrigger_x_customTemplate, map[string]*bintree{}},
		}},
		"types": &bintree{nil, map[string]*bintree{
			"sdk_file.template": &bintree{templatesTypesSdk_fileTemplate, map[string]*bintree{}},
			"type_x.template": &bintree{templatesTypesType_xTemplate, map[string]*bintree{}},
		}},
		"vendor": &bintree{nil, map[string]*bintree{
			".gitkeep": &bintree{templatesVendorGitkeep, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

