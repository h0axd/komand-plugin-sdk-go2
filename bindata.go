// Code generated by go-bindata.
// sources:
// templates/Dockerfile.template
// templates/Makefile.template
// templates/actions/action_x.template
// templates/actions/action_x_run.template
// templates/cmd/main.template
// templates/connection/cache.template
// templates/connection/connect.template
// templates/connection/connection.template
// templates/server/http/handler_x.template
// templates/server/http/server.template
// templates/triggers/trigger_x.template
// templates/triggers/trigger_x_run.template
// templates/types/type_x.template
// templates/vendor/.gitkeep
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesDockerfileTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\x4f\x4f\xc3\x20\x18\xc6\xef\x7c\x8a\x37\xbb\x17\x9c\x89\x17\x93\x1e\x66\x8a\xa6\x71\x83\x86\xd4\xa9\x31\x1e\xb0\x45\x42\x18\xd0\xd0\x7a\x98\x0d\xdf\xdd\x2c\xa5\x27\xf5\xc8\xc3\xf3\xe7\xf7\xde\x0b\x7e\x00\x1b\x9c\xf4\x3d\xd1\xa1\x18\x4e\x5f\xda\xf8\xdb\x2b\x7c\x0d\x68\xbf\xbb\xa3\x7b\x08\x51\x4b\x6f\xbe\xe5\x64\x82\x2f\x17\x63\xfe\x19\x7b\x5b\xea\x90\x1f\xd3\x79\x50\xe5\x92\x46\x88\xb2\x23\x3c\xf0\xed\xcd\x91\xb2\x8a\x0b\xfa\xd2\x50\x51\x1f\x28\x6b\xcb\x2d\x42\xe2\x89\x81\xb3\xbd\x89\x50\x0c\x40\xf2\xf2\x12\x1c\xc9\x87\xf1\x68\x57\x55\x80\x81\xe8\x40\xc6\xd8\x91\x79\x06\xdc\xc8\xce\x4a\xad\x44\x08\x13\xa4\x84\x9e\xb9\x78\xac\x6a\xf1\x9f\x25\x25\xb4\x74\xe4\x56\x3c\x0e\xaa\xc3\x67\xe9\x4e\xf0\x4b\xc9\x38\xd2\x2a\x58\xd9\x2f\x42\x74\x50\xc4\xcf\x75\xe0\x72\x4f\x2b\x5e\x1b\x5e\xb3\x16\xde\x36\x7f\x30\x93\x79\xc6\x4c\x3a\x95\xd2\xe6\x1d\xfd\x04\x00\x00\xff\xff\xc4\x7a\x21\x4f\x52\x01\x00\x00")

func templatesDockerfileTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesDockerfileTemplate,
		"templates/Dockerfile.template",
	)
}

func templatesDockerfileTemplate() (*asset, error) {
	bytes, err := templatesDockerfileTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/Dockerfile.template", size: 338, mode: os.FileMode(420), modTime: time.Unix(1488814111, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesMakefileTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x6d\x6f\xdb\x36\x10\xfe\xac\xfb\x15\x57\xcf\xb0\xad\xa0\x14\xe3\x60\xdd\x00\x6d\x79\x29\xe2\x20\x2d\x8a\xd9\x46\x92\xb6\x18\xa6\xb5\x60\x24\x5a\x22\x2c\x91\x02\x45\x39\x4b\xe2\xfc\xf7\x81\x7a\xf1\x4b\x9c\xb8\xfb\xb2\x2f\x86\x7d\x77\xbc\x7b\x9e\xbb\x87\x47\x7f\xb9\xb8\xba\xfe\x38\x19\x9f\x1e\x77\x07\x45\xc2\xd3\x14\x63\xcd\x73\xec\x7f\x5b\x70\x5d\x08\x25\x7d\xec\x63\x9e\x96\xb1\x90\x5e\x91\xf3\xd0\xbb\x67\x59\x8a\x4b\x2c\x78\x84\xfd\x82\xae\x82\x28\xed\xbb\x30\x7e\xff\xc7\xc5\x4e\x1e\xc9\x32\xbe\x3f\x49\x1d\x51\x65\xb8\x18\x9f\x4f\x46\x1f\xc7\x97\xfe\x2a\xcb\x2d\x2b\xf8\x2f\x3f\xa3\x08\x95\xf4\x72\x19\xe3\xd1\x09\x8d\xf8\x82\xca\x32\x5d\x67\x58\xd2\x65\x10\xd0\x65\xdc\xc7\x25\x1a\x8d\x24\xc2\x7e\x20\xfb\x2e\x7c\xb9\x18\x8f\x26\x57\x2f\x30\x93\x91\xd2\x3f\x22\x56\xc7\x54\xa8\xce\xbf\x8e\x4e\xb7\x00\x59\xc4\xd8\x1d\x4c\xbf\x8e\x5c\x17\xbe\x6f\xd3\xe6\x61\xa2\xb0\x3b\xb0\x46\x17\x97\xc8\xee\xe6\xd8\x7f\xc4\x5c\x0b\x69\xd0\xa8\x32\xcf\xb9\x1e\x14\xe5\x6d\x61\xf4\xa0\xdb\x3d\x7c\x3b\x7c\x3b\x74\x5d\x34\x2a\x55\x77\xdb\x8e\x23\xd7\xc5\xa7\xbe\x0b\x30\xfd\x74\x79\xdc\x1d\xd4\x5c\x5c\xd2\x64\x26\xd6\x52\x0d\xce\xf5\x0c\xd3\x5e\xfc\x00\x30\xba\xbe\x39\x3d\xa6\x73\x95\x31\x19\xd1\x9a\x5a\x41\x6f\x85\x04\xb8\xba\x98\x4e\x8e\x1f\x1f\xd1\x9b\xb2\x70\xce\x62\x7e\xa5\x94\xc1\xa7\x27\x10\x33\x19\xf1\x19\x5a\x37\x38\x55\x50\x93\x1e\xb8\x8c\xc4\x0c\x80\xa5\xa9\x5f\xf5\x1e\x45\xc6\x62\x8e\x79\x7d\x1e\x75\x29\x25\xd7\x00\x75\x15\x1f\x85\x2c\x0c\x4b\x53\x80\xdb\x52\xa4\x91\x0f\xce\x59\xd5\x86\xce\xe7\x42\xc8\x18\x35\xcf\x6d\x4b\x6c\x01\xb7\x03\x8e\xe1\x85\xb1\x43\xea\x0e\x2e\x27\xd3\xf7\x37\x1f\x5c\x5a\xe8\x90\x36\x7e\x5c\x2e\x31\x95\x48\x8a\xa6\xbf\xaf\x44\x81\x93\xcd\x23\xa1\x91\xe4\x68\x19\x3a\xb1\xc2\xaa\x34\x12\x65\x0d\xb4\x1d\xc0\x8b\xa7\x69\x98\x45\x34\x63\x42\x7a\xb1\x02\x68\xb0\xfb\x75\x02\x70\xc2\x1c\x89\x7e\x96\x64\x74\x7d\xe3\x02\xd8\x46\x58\x6e\x35\x81\xd9\x5a\x94\xbd\x1e\x06\xe0\x58\xe9\x10\xe1\xdd\x96\xd8\xa1\xdf\xac\x8f\x16\x34\x18\x54\x87\x30\x70\xbd\x03\x1a\x0c\x83\x4e\xc4\x0c\xf3\xab\x66\x06\x34\x97\xf1\x6f\xb5\xbe\xdf\x76\x07\xad\xf4\xdd\xa0\x43\x3b\x2f\x28\xd3\x4a\xbb\xe4\xe0\x9c\xe9\xcc\xd6\x3e\xb0\x75\x5a\x23\x34\x73\xf1\xc1\xb1\x5e\x3d\xb3\xcd\xfb\x74\xe9\x82\x63\x98\x46\x12\x2e\x1e\x5a\x0b\x12\xc2\xff\x09\xd3\x32\xe2\xc7\x8d\xe1\x00\xa0\x82\xe3\x83\x13\xa9\x70\xce\x75\xdb\x48\x92\xdb\x3b\x46\x0c\xae\xc4\xd7\x36\xc4\x5f\x8b\x0f\xbd\xd5\x31\xc3\xe2\xfd\xa1\xbb\xce\x94\xd9\x56\x02\x68\x1e\x73\xc9\x35\x33\x7c\x25\x9d\xcb\xda\x60\xe5\x23\xf9\x5d\xd3\x0f\x2c\xe6\x3c\xe5\x46\xc9\xd5\x10\x22\xf4\xbc\xd5\x9c\x96\x4b\xcc\x16\xb6\x39\x95\xed\xdc\xaa\x67\xed\x05\xe7\xec\x2e\x11\x61\x82\xf5\x05\xc1\xe1\xc6\x22\xe9\xf5\x5a\x6b\x53\xa7\x85\x83\xb1\xda\x1d\x05\x21\x39\x33\x6d\x1e\x93\xe5\x1b\xb3\xa9\xa0\x4f\x16\x5c\xa7\xec\xde\x42\x7f\x06\x1b\x8d\x42\x93\x70\x0c\x4b\xad\xb9\x34\x18\x09\xcd\x43\xa3\xf4\xfd\x06\x9f\x75\xda\x5e\x0f\x23\x31\x9b\x21\x29\xc7\x7a\x93\xe6\x2a\x82\xe2\x49\xbb\x69\xbc\x2a\x72\x0d\xa4\x95\xe8\x96\xbb\xd7\xc3\x9c\x99\x30\xb1\xb7\x8b\xe4\x43\xfc\xfd\xb5\xd3\xad\xc4\x94\x16\x31\x1e\xd4\xde\x03\x2f\x7e\xd8\x29\xf0\x0c\x6e\x23\xbe\xdd\xce\x40\xbd\x30\xfc\xb6\x20\xd1\xa5\x6c\x8d\x24\x31\x26\xdf\xf2\x54\x16\x80\x0d\x8b\x95\x45\xb5\x42\x67\xd8\xf9\xe9\x8d\x5d\x6a\xb4\x48\x02\xd9\x28\x4f\x97\x12\x09\xb1\xc5\xc5\x7e\x05\x06\xdd\xee\x59\x07\x4f\x70\xd5\xcb\x0a\x87\x73\x16\x26\x99\x8a\xf0\xd7\x77\xef\x76\x3c\xf5\x1a\xfb\x8b\xfc\x8d\x9f\x0b\xbe\xed\x45\x42\x12\x9e\xe6\x76\xa6\xf6\x97\x9d\x6b\x23\x95\xce\x16\xf6\x9a\xdf\x7f\x24\x90\xe3\xf0\xf0\xf0\x70\x48\x8e\xec\xa7\x5f\x7d\xff\x21\x2b\x9b\x7f\x87\x55\xdd\xc3\x57\xa9\xb5\xee\x3d\xfc\xaa\x90\xbd\x24\xad\x67\x73\x1f\x7a\x1e\x35\x4a\xa5\x05\xb5\x0e\x2f\xbf\xb7\xe3\xaf\x0b\x9c\x27\x3c\x9c\xa3\xbd\x42\x68\x23\x50\x2a\x83\x42\x56\x7b\x28\x42\x21\x31\x2c\x0b\xa3\x32\xae\xdb\x87\xa4\x78\xd3\xd9\x97\xd7\x0a\xf9\xde\x24\x4a\x1e\xed\xfa\x3c\xfa\xfc\xc2\x02\x2c\x58\x2a\xa2\x66\xbb\xec\x24\x0d\x2d\xb6\xef\x55\xf4\xff\x00\x79\x3b\xfb\x4b\xc0\xb7\x23\x5e\x82\xef\x4d\x3f\x4c\xc6\x7f\xfa\xc8\xec\xdf\x8f\x6a\x39\xb7\xef\x70\xf3\x2a\xd7\x5b\x66\xbd\x45\xe1\xdf\x00\x00\x00\xff\xff\x1f\x34\x42\x85\xd5\x09\x00\x00")

func templatesMakefileTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesMakefileTemplate,
		"templates/Makefile.template",
	)
}

func templatesMakefileTemplate() (*asset, error) {
	bytes, err := templatesMakefileTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/Makefile.template", size: 2517, mode: os.FileMode(420), modTime: time.Unix(1490117972, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesActionsAction_xTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\x5f\x6f\xba\x30\x14\x7d\xe7\x53\x9c\x18\x1e\xfd\xc9\xbb\x89\x0f\xfc\xb6\xaa\x64\x0c\x16\xc5\x2d\xbe\xd9\x60\x75\x6c\x5a\x08\x2d\x5b\x16\xd2\xef\xbe\x94\x16\xc3\x86\x89\xc6\x64\x6f\xf7\xcf\x39\xb7\xe7\x9e\x36\x2d\x68\xfa\x4e\xf7\x0c\x34\x95\x59\xce\x85\xe3\x78\x1e\xee\x63\x44\x71\x82\x47\xff\x81\xe0\x6e\xee\x47\x33\xb2\x44\x12\x23\x99\x07\x4b\x4c\x83\x90\x0c\x91\xcc\xc9\x1a\x2f\x41\x18\xe2\x3f\x41\x18\x2f\x13\x04\x53\xac\xe3\x15\x16\x64\x46\x22\xb2\xf0\x13\xa2\x31\x78\x0a\x57\xb3\x20\x72\xea\x1a\x2e\xa7\x47\x86\xf1\x04\xa3\x48\x07\x4a\x39\x75\xfd\x0f\x25\xe5\x7b\x06\x97\x0f\xe1\x16\x4d\x33\xe0\x45\x25\xdb\x6e\xb6\x83\x5b\x8c\x08\xaf\x8e\x61\x26\x59\x49\x0f\xba\xe1\x79\x30\x20\x5d\x17\xdd\x29\xd9\x10\x6e\x73\xc4\x59\xd2\x49\x83\x52\x0d\x5f\xe7\xac\x15\x83\x4c\x80\x72\x30\x5e\x1d\x59\x49\x25\xdb\xe2\x83\x1e\x2a\xe6\xa4\x39\x17\xf2\x02\x75\x02\x93\xdb\xe3\x9e\x35\xb1\xdd\x80\xf1\x6d\x27\xec\x17\x7b\xfb\xc7\x95\xbc\xc2\x00\x8b\xba\xdd\x01\x33\xe0\x36\x0b\xce\x71\xaf\xf7\xe0\x57\x68\x75\xb5\x83\xcc\xcd\x66\x02\xf2\x95\x21\x6b\x92\x5d\x5e\x76\x11\x8e\xfc\x2a\x58\x9f\x22\x64\x59\xa5\x12\xb5\x03\x00\x5d\x67\xf1\xf3\x69\x29\x65\x11\xda\xa2\x56\xbd\xc9\x12\x3d\x58\x29\x6c\xde\x44\xce\xc7\x03\x53\x5c\xd0\x4f\x8b\x1a\x6c\x4e\xb3\xad\xf6\x9e\x7a\x7b\x2d\x56\x7e\x6e\xb2\x4b\xfa\x2d\xe9\x8a\x05\x0c\xf2\x4f\x37\xf0\x9b\x5f\xc0\x3e\x05\xf3\x25\xf4\x04\x5b\x4c\x2b\x58\x7d\x07\x00\x00\xff\xff\xe0\x17\x20\xd4\x42\x04\x00\x00")

func templatesActionsAction_xTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesActionsAction_xTemplate,
		"templates/actions/action_x.template",
	)
}

func templatesActionsAction_xTemplate() (*asset, error) {
	bytes, err := templatesActionsAction_xTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/actions/action_x.template", size: 1090, mode: os.FileMode(420), modTime: time.Unix(1490024398, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesActionsAction_x_runTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x52\x4d\x6b\xdb\x40\x10\xbd\xeb\x57\x3c\x7c\x28\x92\x71\xa4\xd0\x63\x20\x85\x90\x53\x20\x4d\x4a\x28\x85\x50\x7a\xd8\x4a\xa3\xf5\xe2\xd5\x8e\xd8\x0f\x87\x60\xf4\xdf\xcb\xae\x24\x7f\xc4\xd0\x9e\x72\x29\xf1\xc1\xec\xcc\xbc\x99\x79\x7a\x6f\x7a\x51\x6f\x84\x24\x88\xda\x2b\x36\x2e\xcb\x54\xd7\xb3\xf5\xc8\x33\x00\x58\xec\x76\x28\xbf\x8d\x90\x27\x66\x8f\x61\xa8\x6a\x36\x86\x12\x7a\x31\x62\xa4\xf2\xeb\xf0\xbb\xac\xb9\xab\x36\xdc\x09\xd3\x54\xbd\x0e\x52\x99\x0b\xd7\x6c\x2e\x24\x7f\xae\x34\xcb\x45\x56\x64\x59\x55\xe1\x87\xd0\xaa\x11\x9e\xf0\xa2\xb4\xc6\x76\x8e\xfc\x9a\xa0\x4c\x1f\x3c\x94\x43\x6f\xb9\x27\xab\x5f\xe1\xc8\x87\xbe\xcc\xda\x60\x6a\xe4\x0a\xcb\x48\xe6\x41\x74\x84\x61\xb8\x8b\xe0\x62\x3f\x2e\x2f\xf0\xf3\x17\x59\xcb\x16\xbb\x44\x8a\xac\x75\xb8\xba\x46\x27\x36\x94\x4f\xa5\x15\x2e\x8b\x54\x4c\x7f\x55\x85\xdb\xe0\x3c\x77\x33\x0b\xc5\x06\x35\x37\x84\x35\x59\x9a\x21\x37\x7d\x4f\xa6\x41\xea\x77\x10\x0e\x86\xa8\xa1\x26\x9b\xeb\x96\x7c\xb0\x26\x45\xaa\x85\x26\x93\xc7\xcd\x05\xbe\xe0\x72\x62\x12\x7f\x23\x2a\x91\x4a\xb9\x21\x3b\xca\x1a\xa5\xb3\xe1\x5f\xe2\x70\xf0\x7f\x55\x87\x4f\xd4\x79\x4c\xe8\xff\x4d\x9e\xa7\x60\x46\x65\x6c\x30\x49\x94\xf1\x66\xf1\xa2\xfc\x3a\xc5\x52\x6d\xc9\x4c\x77\xc4\x5b\xb2\x47\xc9\xc3\xd1\x4e\x82\x89\x13\xc1\x6e\x52\xa9\x88\x2b\xf2\x08\xc5\xf2\xd0\x50\xde\xee\x9f\xab\x69\xf8\xd9\x25\xae\xa0\x59\x62\xa9\x59\x96\xf7\x2c\x25\xd9\x02\xf9\xb9\x21\xab\x51\xa8\x62\xfa\xf4\xc9\xd3\xab\x6b\x7c\x3a\x83\xee\x86\x59\xc2\x67\x0e\xf6\x48\xf8\x39\xfd\x55\x6c\x08\x2e\x58\x82\x67\x3c\x3e\xdc\x3f\x23\x38\x8a\x2c\xca\x3b\xd3\x32\x84\x69\xf6\x41\x1b\x21\x91\x9f\x30\xaf\xa8\x47\x53\xe3\xc0\x37\x2e\xcd\x7c\x62\xab\xe1\x91\x2a\x5a\xb6\x70\xa1\xae\xc9\xb9\x37\x68\xa3\x74\x82\x1e\x70\xad\x50\x3a\xcc\x14\x4f\x66\xae\x8e\x5c\xfc\x4e\xce\x8f\x36\xfa\xf8\x7a\x1f\x1f\xe3\x92\x0f\x23\xdf\xcd\xc8\x3f\x01\x00\x00\xff\xff\x46\xdc\xf3\xd2\x35\x06\x00\x00")

func templatesActionsAction_x_runTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesActionsAction_x_runTemplate,
		"templates/actions/action_x_run.template",
	)
}

func templatesActionsAction_x_runTemplate() (*asset, error) {
	bytes, err := templatesActionsAction_x_runTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/actions/action_x_run.template", size: 1589, mode: os.FileMode(420), modTime: time.Unix(1489759902, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCmdMainTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x59\xef\x6e\xdb\x38\x12\xff\x2c\x3d\xc5\x9c\xd0\x3f\xd2\xae\x2b\x6f\xfb\xd1\x7b\xc1\xa1\x9b\xa4\x6d\x70\x69\x52\xc4\xe9\x2e\x16\x6d\xb1\x60\xa4\xb1\xcc\xb3\x44\x0a\x24\x65\xaf\xd7\x30\xb0\x0f\xd1\x8f\xf7\x00\xf7\x5c\x7d\x92\xc3\x90\xd4\x1f\x27\x76\xd3\xf6\x0e\x07\xdc\x1d\xb0\xb5\xc8\xe1\xcc\x70\xfe\xfc\x66\x86\xa9\x59\xb6\x60\x05\x42\xc5\xb8\x08\xc3\xf1\x18\x4e\x2e\xe1\xe2\xf2\x1a\x5e\x3f\xff\xfb\x29\x1c\xbf\x7a\x7e\xf1\xf2\x74\x0a\xd7\x97\x70\xfd\xea\x6c\x0a\x2f\xce\xce\x4f\x47\x70\xfd\xea\xf4\x57\xf8\xe5\xec\xfc\x1c\x7e\x3a\x85\xf3\xcb\xe9\x35\x9c\xbd\x80\x5f\x2f\xdf\xc2\xd5\xe9\xcb\xd3\x8b\xd3\xab\xe7\xd7\xa7\x44\x03\x6f\xce\xdf\xbe\x3c\xbb\x08\x43\x5e\xd5\x52\x19\x88\xc3\x20\x42\x91\xc9\x9c\x8b\x62\xfc\x0f\x2d\x45\x14\x06\xd1\xac\x32\xf4\x4f\x29\x0b\xfa\x47\xea\x28\x0c\x03\x26\x34\x87\xa8\xe0\x66\xde\xdc\xa4\x99\xac\xc6\x55\xd1\x98\x3f\xc6\xb4\x4c\xdb\xc3\x9d\x85\xac\x98\xc8\xc7\x75\xd9\x14\x5c\x3c\xd1\xf9\xe2\x49\x21\x9f\x8d\x73\xae\x6b\x66\xb2\x39\xaa\x28\x04\x00\xa8\x4b\x59\xc0\xfd\xc7\xbc\x12\xf7\xd2\x55\xa8\x35\x2b\x90\x74\xd9\x6c\x9e\x00\x9f\x41\xfa\x3c\x33\x5c\x0a\x0d\xdb\x6d\x18\x44\x9b\x0d\xa4\x6f\x9c\x59\xaf\xa4\x34\xb0\xdd\x8e\x99\xdb\x8f\xdc\x09\x14\xf9\x41\xca\x4c\x0a\x81\x96\x3a\xda\x4f\xa0\x51\x2d\x51\x8d\xe7\xc6\xd4\x51\xaf\xc0\xb5\xe2\x45\x81\xea\xb0\x06\xc6\x13\xec\xaa\x90\x84\xe1\x92\x29\x72\xcd\x78\x0c\x17\xac\x42\x70\x77\x05\xc1\x2a\x0c\x03\xbb\x72\x04\x96\x9f\xfd\xbd\xdd\x46\x96\xf4\x67\x14\xb9\x54\x2d\xf1\xd2\x7e\x85\x81\x5f\xf5\x07\xfc\x57\x7f\x44\x69\x2e\x45\x7f\xc6\x7e\x5a\xff\xb4\x5b\xdd\x41\xf7\xd9\x9e\x3c\x41\x9d\x29\x5e\x9b\xc1\xe9\xbc\x5f\xb2\x1c\x86\x24\x9e\xcb\x70\x89\x38\x25\x36\xba\xaf\xe7\xa8\x11\x72\x9c\x71\x81\xb0\x64\x8a\xcb\x46\x43\x26\x4b\xa9\x20\x93\x42\x1b\x26\x8c\x86\xd6\x26\x25\xaf\x10\xe0\x08\x28\xf2\xd2\x63\x22\x3a\x96\x39\xc6\x51\xa1\x10\xc5\xf7\xf3\xc9\x4d\xc9\xb2\x45\x94\x84\x81\xc2\x1c\xf6\x11\x2a\xcc\x69\xdb\xd2\x1f\xe2\xe3\xce\x6b\x34\x7b\xcf\x6b\x34\x51\x42\xba\x9b\x75\x8d\x70\x7c\x7e\xf6\x5c\x15\x1a\xb4\x51\x4d\x66\x36\x61\x70\x2c\x2b\x8a\x50\x5a\xe0\xa2\x08\x83\x69\x73\xe3\x97\x34\xbc\xfb\xd0\xae\xbe\x76\x01\x0b\xdf\xf9\xc8\x4d\x7f\x7e\x1a\x6e\xc3\x70\xd6\x88\x0c\x0a\x34\xc4\xf2\x85\x92\xd5\xf1\xf9\x59\x9c\x40\xfc\x9d\x97\x32\x02\x54\x4a\xaa\x04\x36\x61\xc0\x67\x50\xa2\x88\xa5\x4e\x69\x27\x81\xbf\x1e\xc1\x53\x5a\x0f\x14\x9a\x46\x09\x10\xbc\xf4\xe4\x3a\xbd\xc0\x55\x1c\xad\x65\x03\x55\xa3\x0d\xe8\x1a\x33\x3e\x5b\x43\xe6\x35\x35\x12\xb8\x58\xca\x05\x02\xf3\xce\x24\x03\x6c\xc3\x80\xd1\xc5\x26\x47\xf0\xc8\x8b\x27\xee\xfe\x2e\x13\xf0\x82\xdf\x3d\xfd\x30\x0a\x83\xe1\x2d\xfb\xad\x67\x13\xbb\xe7\xef\x3a\x81\x47\xfd\x65\x37\xdb\x91\x15\xa1\x0d\x33\x23\xf8\x8d\xa4\x48\x9d\x4e\x4d\xce\x45\x3a\x35\xcc\xc4\x09\x8c\xc7\x70\xfa\x7b\x5d\xf2\x8c\x9b\x72\x0d\xbc\x10\x92\x7c\x6a\x6f\x64\x6f\x1f\xd3\xd9\xf4\x35\x79\x25\x81\x47\x74\x9c\x7e\x1f\xcf\x99\x3a\xc1\x25\xcf\x30\x81\xa3\x23\xf8\x01\x36\x36\x1a\x03\x1b\x68\x5c\x43\x85\x4c\x68\x30\x73\x54\x08\x5c\x43\xce\x0c\x23\x03\xd4\xbc\x46\xe0\x02\xe4\x12\x15\x68\x52\x63\x04\x5a\x42\x89\xe6\xb1\x86\x5c\x02\x37\x61\x10\xe4\x98\x91\xa2\x04\x94\x64\xd2\x13\xcc\x64\x8e\x2a\x6e\x15\x4f\xc2\x80\xf4\x42\xa5\x88\x2a\xc7\x2c\x75\x14\x31\xd9\x31\xf5\x56\x48\x7e\xb4\x04\x7f\x39\x22\x07\x59\x7f\xdd\x76\x58\x18\x90\x61\xb6\x61\xbb\xce\xac\xe3\x05\x2f\xbb\x00\xa1\xc2\x10\xdb\x20\x60\x6d\x50\x90\xc4\xdb\x71\x13\xb6\xda\x0c\x84\x95\xb2\x48\x5f\x30\xc3\xca\x18\x95\x72\x5e\x9e\x55\x26\x7d\xa3\xb8\x30\x71\xf4\xf0\xfb\xe5\x7b\x11\x8d\xac\xc8\x24\x0c\xf4\x8a\x9b\x6c\x6e\xbf\xd2\x36\xac\x37\x61\x90\x31\x8d\x10\xcd\xb1\xac\xa3\x49\xfb\xc5\xc5\x4c\xd2\x57\x60\x39\x0d\x12\x9d\xd4\x70\x24\x9a\x55\x75\x89\x96\xc8\xc7\xae\x65\x3c\x88\x9c\xce\x63\xc1\x50\xd1\xe8\xd7\x36\x70\x6b\x25\x97\x3c\x47\x60\x02\x1c\x7a\x83\x54\xe0\x51\x94\x9c\x58\xa0\x40\xc5\x0c\x82\x13\x05\x5c\xd4\x8d\x79\x2f\x4e\x7f\x9f\xb4\x2b\xd5\xfa\x37\x77\x92\x22\x9c\x2e\xef\xf4\x9d\xda\xdd\x33\x22\xbf\xa3\xd4\xbb\x1f\x3e\x74\x57\xb0\x08\x3f\xa1\xc8\x3c\x61\x58\x49\xc1\xff\x40\x60\x1a\x68\x39\x0c\x82\xde\x13\xb4\x40\x11\x32\xb5\x85\x21\xee\x0b\x08\x2d\x1e\xb3\x6c\x8e\x71\x32\x88\x96\x61\x30\xdc\x76\x90\x55\xb2\x73\x51\x29\xe2\xe8\x8d\xc3\xdb\x41\x01\x80\x1b\x29\x0d\x17\x05\xbc\xba\xbe\x7e\xe3\x55\x4b\xd3\xd4\xde\xb1\x8d\xfb\x15\x2f\x4b\xb8\x29\x65\xb6\x80\x46\x18\x5e\x52\x0a\x80\x2b\x5c\xa0\xe7\x8d\xa1\x28\x5f\x89\x9d\x08\xd6\xe9\x39\xd7\x06\xc5\x73\x91\xdb\x8b\xc4\x7b\x62\x77\x9f\xba\x39\xce\x58\x53\x9a\x89\x93\xfe\x0b\x3e\x56\x08\xaa\x11\x82\x34\x44\x4e\xa9\xd7\x7b\x70\x44\x2e\x64\xad\x13\x9d\xf8\x61\xba\x50\x44\xec\x11\xd6\x83\x59\x17\x13\xe0\xc1\x05\x6e\x64\xbe\x86\x25\x67\x30\xbd\x3e\x39\xbb\xa0\xb8\x50\x8d\xd8\x1b\x33\x5d\x10\x0c\x03\xdd\x0b\x4e\xaf\x09\xdd\x49\xac\x73\xbd\x0f\x1b\xba\xd4\xc0\x44\xaa\x11\x97\x02\x2f\x67\x33\xd7\x6d\xec\x0b\x9e\x11\xdc\x93\xfe\x77\x6d\x68\x75\x72\x62\x5b\x4d\xad\xdc\xcf\xfa\xb2\xcd\x83\x1d\x67\xee\xaa\xea\x3b\x12\x17\x20\xff\x4d\x5d\x07\x1e\xef\x29\x66\x71\xd4\x88\x85\x90\x2b\xd1\xb9\xc6\x56\xcc\x87\x3a\x1a\xdd\x35\x75\xd2\xc2\x5e\x0b\x72\xb7\x4d\x5b\xc9\x1c\x7d\x51\x1d\x41\x35\x2c\x9c\x89\x2b\x0a\xa4\xe1\xbe\xe6\x2f\xcb\x6d\x0d\x1b\x24\xe1\x71\xf7\xf3\x84\x19\xb6\xd9\x86\x41\x49\x24\xd4\x93\x52\x82\x9e\x4b\xb2\x12\x01\x97\x3d\xd9\xb7\xae\x84\xac\x57\x6c\x15\x57\xe9\x4f\x32\x5f\xa7\x27\xdd\x46\x62\x83\x1e\x15\x94\xe9\x8b\xb2\xd1\x73\x5f\x12\x9c\x89\x3a\x1c\xf5\xc7\x9c\x6e\xad\xb6\x8a\x89\x02\xe1\x81\x18\xc1\x83\x9a\xa4\xed\xaa\x6e\x63\x60\xb3\x81\x07\x75\x7a\xc5\x56\x6d\xbf\xe7\x33\xeb\xad\xa8\x98\xd2\x73\xe6\xfc\x6f\xc3\x9e\x0b\x23\xed\x97\xe2\xc5\xdc\xf8\xa6\xa4\xcd\x43\xc8\x64\x53\xe6\xc0\x96\x92\xe7\x96\xe8\x19\xe0\xef\x19\x6a\x6d\x2b\x1a\xb4\xcc\x32\x56\x96\x9a\x6a\xa1\xad\x91\x2b\x6e\xe6\xc0\xa0\x94\x06\xe4\x0c\xdc\x4d\x9e\x64\x4c\x53\x32\x4b\x61\x3d\xaa\x9d\x80\x9b\xc6\xd0\x29\x43\x11\x4a\x8a\x8f\xac\x8c\x1a\xd5\x4c\xaa\x8a\x89\x0c\xa1\x60\x5c\x50\xd1\x15\xd2\x80\x99\x33\x03\x85\x42\x2a\xff\x54\x57\x38\x15\xda\x92\x94\xf1\x28\x6e\xdb\xbf\x1c\x29\x7f\xa9\xde\x19\x1a\x86\xac\x1c\x23\x5d\x41\x76\x92\x56\x6c\x9d\x7a\x98\xbb\x3c\xb9\x24\xe7\xaf\x10\x74\x43\x3d\x8e\xa7\xe0\x1a\x18\xdc\x48\x63\x4a\x14\x98\x2d\x46\x04\x19\x33\x4e\xe5\xc1\x58\xc9\x7a\xc5\x6a\xb8\x61\xd9\x02\xbc\xed\xfa\x4b\x22\xb0\xba\x56\x92\x65\x73\x42\x26\x2a\x0f\x36\x94\xfc\xe8\x90\x3a\xc7\x78\xaf\xd8\xea\x41\xb1\x34\xc8\x39\xdb\x29\x74\x6e\x6a\xe3\xc6\x52\x8e\x5c\x75\x3a\xdc\x0e\x74\x9d\xc0\xbd\xfc\xfa\x70\x1e\x41\x96\x7f\x09\x47\xca\x85\xae\x58\xdd\x4d\x8c\x38\xcb\x47\x50\x1e\x28\x50\x77\x98\xb1\xc3\x36\x71\xb1\x6c\x8d\xa2\x1a\xf1\x1a\xcd\x5c\xda\x94\x62\xe9\x55\xe3\x6b\x8d\x4d\xeb\xa3\x23\x88\x0c\x6a\x13\x79\x11\x1d\x2d\x91\x5e\xa3\x36\x5e\x94\x1c\x0d\xd0\xcc\x91\xc4\xee\x2e\xdc\xd9\xf4\x8b\x95\x1e\x8f\xbb\xbc\x76\xf9\x82\xba\x29\x6d\x8f\x97\x4e\x51\xe4\xb1\x4c\x76\xe7\xc2\x01\xc2\x79\x5e\x54\x93\x4f\x09\x77\x06\x38\xe7\x2b\x8c\x45\xb8\x9d\x6c\x77\x9d\x96\x67\xb8\xed\x7b\xbb\x61\x57\x77\x07\xa0\xbf\x0a\xf1\x76\xa6\xcd\xff\x09\xe4\x7d\x25\xae\xed\x2a\x78\x18\xd8\xfa\x34\x6b\xe7\xe3\x74\xd0\xea\x78\x2e\xff\x4f\xc9\xe6\xb0\x97\x57\x15\xe6\x9c\x19\x2c\xd7\x30\xa3\x1a\x61\xc3\xae\xf7\x10\x94\xb2\xa0\x89\x83\x1b\xc8\x98\x80\x1b\x04\xac\xb8\x31\x98\xb7\xa8\x44\xb0\x8c\x8a\x40\x98\xbe\x58\x4d\x93\x11\xb3\xd3\xb6\x43\x3f\x5f\xfe\x73\x29\x1e\x1b\x10\x88\x39\x8c\xa1\xd1\x68\xa9\xb9\x30\xa8\x04\x2b\xe1\xa6\x99\xcd\x90\xc6\xa8\xd2\x3a\xbc\x83\xb7\x91\x45\xef\x5e\x1b\x0d\x73\xb6\xb4\xd8\xbb\x92\x6a\xe1\x24\x70\x41\x28\x3a\x87\xba\x64\x19\x6a\x3b\x1e\xad\x68\x6e\x67\xa5\x2b\x12\x0e\x6c\x05\x30\x90\x02\x9f\xc8\xd9\x0c\x66\x4c\xcf\xe9\x6a\x54\x48\xbe\x06\x75\xf6\x55\xd1\x2f\xca\x6a\x1b\x37\x5d\xd8\x5c\xe0\x6a\x07\x8d\xbc\x89\xe2\x3c\x39\x0c\x3d\x3d\xc2\x18\x0b\x3c\x43\x78\x49\x7e\xf4\x1d\xd5\xdd\xb6\x68\x47\x13\xab\x8a\xf5\x89\xf4\xc5\x96\xdc\x41\x05\xd3\x48\xdb\xaa\x43\x53\x7b\xd0\x61\x79\x29\x65\x6d\xcb\xd0\xed\x7e\xae\xed\x99\xa8\x9a\x4a\xa1\x9b\x0a\x73\xcf\x76\x46\x1d\x2c\x6a\x63\x71\x61\xe5\x02\xa5\x8d\x92\x3e\x73\x21\xe7\x0a\x33\x53\xda\xf2\x38\x84\xb5\xe1\xc0\xd9\x87\xe8\xd4\x30\x65\x3a\xad\x80\xd4\x0a\x83\xa0\x90\x60\x52\xbb\x75\x85\x2c\x3f\x97\xb2\x8e\xfd\x50\x71\xd5\x88\xbb\x7d\x28\x05\xaf\xa4\x51\xca\xa0\x86\xb1\x6b\x45\x7d\x27\xea\x65\x1a\x42\xfe\x1d\xa3\x7e\x0b\xce\xb6\xbd\xee\x57\x03\x6d\xdb\x41\x73\x0d\xb5\x42\x63\xd6\x30\x67\xd9\x62\x3d\xb2\x2d\x89\x6e\x14\x12\x96\x76\x8f\x03\x0c\x6e\xd0\x18\x54\xd4\x64\xd8\x04\x99\x29\x59\x59\x1b\xa1\x28\xb8\xc0\x11\x5d\x38\x97\xa8\x29\xe5\x4a\x29\x17\xc4\xbf\xe4\x0b\xb4\x3d\x08\x5d\x89\x89\x35\x2c\xb8\xc8\x29\x6d\x23\xea\x95\x22\x98\x95\xac\x68\x13\x66\xe8\xaf\x34\x4d\x89\x1d\xb1\xd1\x9e\x09\xb5\x48\x94\x62\xd2\xbe\x54\x38\xcb\x84\xae\x03\x62\x90\xa1\xa2\x9e\xc8\x76\x60\xae\x85\x52\x68\x53\x93\xb8\x48\x51\x52\x33\xd8\x11\xcd\x99\xca\xa9\x9b\xca\x81\xdb\x17\xb5\x0c\x75\x0a\x53\xe9\x5a\x34\x49\x4d\xa1\x07\x02\x77\xed\x9a\x9a\xad\xf1\xd8\x72\x25\x0a\x81\xab\x3d\x14\x29\x9c\x3d\xae\x2c\x2e\xd9\xd8\x9e\xdb\x8d\x92\x19\x54\xd4\x45\xce\x6d\x01\x60\x06\x6e\x50\x1b\x1f\x1f\x34\xac\xa1\x00\x49\x16\x5e\x71\x8d\xae\xf0\xdd\xad\x36\xf6\x55\xa6\x62\xf5\x3b\x57\xfd\x3e\x58\xfc\x9a\xb1\x0c\x37\xdb\x64\x68\xb2\xbe\x1c\xf9\x17\xb1\x46\x95\x23\x90\x0b\x5b\xc3\x98\x61\xef\xa2\xb7\x57\xe7\xd1\x87\x1f\x69\x69\x63\x1f\x94\xac\xdf\xa8\x4e\x37\xac\x2c\xd7\xd6\x49\x1a\x9e\xc1\x92\x95\x0d\x61\x1a\x39\x79\x85\xce\x7c\x0e\x3c\xb9\x26\x38\xfb\x5b\x1f\x8f\x03\xf1\x17\xb8\xa2\x89\x3b\x6e\x54\x99\xc6\x4e\xd5\x24\x19\x3e\xdd\xec\xd2\x4e\x4d\x2e\x1b\x13\x27\x5d\xc5\xbf\xfb\x56\x42\xd7\x18\x8f\xe1\xa5\x6d\x81\x4b\x38\x13\x33\x09\x63\x78\x85\x2c\xa7\xe1\xd8\x35\x29\x74\xb9\xe8\xbd\x88\xba\xef\xef\x8f\x6c\x92\x4c\x6b\x62\x37\x8b\x23\x82\xbb\x09\xf8\xff\x3d\xd4\xf4\xff\x4f\xff\xfc\x97\x7d\xd8\xb1\xcf\x9b\x23\xfb\xac\x3c\x02\xfb\x94\x99\x1c\x64\xe3\x1e\x8b\x27\x9f\x61\xe3\x28\xbe\x80\x91\x7d\x3c\x9e\x7c\x8e\x91\xa5\xb8\x97\xd3\xc0\x56\x93\xfd\x9c\x06\x14\x1d\xb7\x03\x4d\x12\xd5\x06\x02\x92\x4c\x36\xc2\x1a\x35\x2e\x51\xf4\x34\x89\x25\x1a\x54\x56\x72\xc6\x41\xcd\xde\xb7\x8f\xc6\xfb\x36\x3b\xb1\xf1\x43\xfd\x30\x7f\xa8\x93\x09\x0c\x75\x26\xed\x06\x9a\x6c\xb7\xbd\x1d\x06\x9d\x14\x1f\xc1\x03\x73\xb7\x93\x3a\x20\xf2\xd3\xc7\x8f\x9f\x3e\xfe\xf9\xe9\xe3\x9f\xde\x4c\x56\xb4\x4e\x86\x62\x23\x27\xb7\xfb\x2b\x82\x97\xda\x6f\xdc\x7a\xae\xdf\xd5\xaa\x05\xec\xc1\xef\xfd\xe3\x37\x99\xd9\xf5\xc5\xb7\x0c\xed\x89\x3a\x3b\xfb\xfe\xf1\xdb\xcd\xdc\x4a\x3d\x64\xe5\x5d\x3d\x3e\x63\x66\x76\x67\x10\xff\x4f\xad\xcc\x0e\x59\x99\x7d\x83\x95\xfb\x07\x5b\xa7\xd6\x2d\x40\xd9\x79\xcc\x74\x36\xf5\xd8\xd4\x4f\x0d\x54\x80\x7f\x5a\x1b\xec\x9f\x2c\x6d\xb7\xfb\xda\xf7\xba\x9f\x19\x1c\xf6\xbe\x2a\x0f\xdb\x9f\x6d\x18\x54\xc4\x70\xf0\xd6\x1f\x06\x41\x87\x01\xd1\xf2\x69\x34\x0a\x83\x80\x6a\xf6\xa4\x23\xa2\x2f\x47\x18\x38\xb3\x4f\xda\xf7\x41\x5a\xea\x75\x98\x40\xaf\x39\xed\xbc\x46\xc3\x26\x50\xb1\x05\xc6\x07\xca\x85\x25\xeb\xeb\xc4\xfd\xc4\xed\x1f\x26\xfc\x93\xe0\xbe\xa1\x66\x7f\x8c\xf4\x33\x0d\xbb\x3d\xd3\x54\xee\x35\xf1\xa8\x7b\x46\xa4\xb1\xd9\xfe\xfa\x8c\x13\x86\x13\x35\xbb\xf5\xca\xf0\xa5\x0d\xf1\x70\x08\xa2\x61\xba\x97\xb9\xd3\x24\xdd\x0f\x33\xfd\xe5\xcc\xe1\xcb\xb5\x8f\x95\xd4\x89\xbb\x9f\x9f\xb9\xde\x70\xba\xeb\x51\x68\x77\xbe\xfb\xc6\x6b\x0e\x85\xef\xdc\x73\xd0\x5d\x0e\x9f\x29\xdf\xee\x8e\xef\x83\x3f\x2a\xb8\xb7\xca\xbe\xb3\x6c\x91\x60\xef\x95\xce\x44\x8e\xc2\xc4\x8f\xaa\x11\x44\x10\xd1\x7f\x20\xfa\x92\x74\x19\xbe\xee\xbb\xa0\x6c\x13\x3b\xd9\xed\x5f\xff\x1d\x00\x00\xff\xff\x89\x94\xa8\x97\x19\x20\x00\x00")

func templatesCmdMainTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesCmdMainTemplate,
		"templates/cmd/main.template",
	)
}

func templatesCmdMainTemplate() (*asset, error) {
	bytes, err := templatesCmdMainTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cmd/main.template", size: 8217, mode: os.FileMode(420), modTime: time.Unix(1490118415, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesConnectionCacheTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x93\x41\x6f\xdb\x38\x10\x85\xcf\xd6\xaf\x78\xeb\xc3\x42\x0e\x54\x19\xd8\x63\x17\x39\x64\x13\x37\x31\xea\xda\x45\xe3\x60\x51\x14\x3d\xd0\xd4\x48\x22\x4c\x0d\x55\x72\x54\xad\x36\xc8\x7f\x5f\x50\x72\x12\xb7\xd8\xde\x64\x72\xe6\xcd\x37\x8f\xcf\xad\xd2\x47\x55\x11\xb4\x63\x26\x2d\xc6\x71\x92\x2c\x97\xb8\xd9\x61\xbb\xdb\xe3\xc3\xd5\xfb\x15\xae\xef\xae\xb6\xb7\xab\x7b\xec\x77\xd8\xdf\xad\xef\xf1\x6e\xbd\x59\x65\xd8\xdf\xad\x3e\xe3\xef\xf5\x66\x83\xbf\x56\xd8\xec\xee\xf7\x58\xbf\xc3\xe7\xdd\x03\x3e\xad\x6e\x57\xdb\xd5\xa7\xab\xfd\x2a\xd6\xe0\xe3\xe6\xe1\x76\xbd\x4d\x12\xd3\xb4\xce\x0b\xd2\x04\x00\xe6\x65\x23\xf3\xe9\x2b\x0c\xac\xe7\xc9\xf8\xdd\x5a\x57\x61\x5e\x19\xa9\xbb\x43\xae\x5d\xb3\x3c\xba\x46\x71\xb1\x6c\x6d\x57\x19\x7e\x13\x8a\xe3\x9b\xca\xfd\xb1\xb4\xae\x9a\x27\x8b\x11\xf3\x5a\xe9\x9a\x60\x02\x14\x82\x69\x5a\x4b\xe8\xbd\x6a\x5b\xf2\x50\xde\x75\x5c\x40\xa1\x51\x2d\x7a\x23\x75\xfc\xec\x84\xfe\xc9\x20\x0e\x41\x9c\x3f\xdf\x39\xc0\x70\x22\x43\x4b\x27\xc5\x20\xbe\xd3\x82\xc7\x11\x2b\x12\xe6\x1f\x62\xef\xf8\xb3\x50\x32\xaa\x7e\x09\xe2\x0d\x57\x5f\x2f\xae\x5f\xad\x7b\x1a\xa9\xb6\xd4\x4f\x32\x9e\xa4\xf3\x1c\xe9\x98\xfa\xb3\x71\xd0\xf1\x3a\x29\x3b\xd6\x2f\xc5\xe9\x02\x17\x53\xd7\x63\x32\x9b\x1a\xf1\xfb\x78\xf0\x98\xcc\x66\x71\xe8\x5b\x34\xea\x48\xe9\xff\x8f\x5e\x64\xc9\xec\xe9\x34\xff\x96\x04\xbd\xb1\x16\x15\x09\x9c\x87\x61\x23\x90\x7a\x5a\x38\xc7\x5a\x70\xb0\x4e\x1f\x03\x3a\x16\x63\x5f\x6e\xa2\x8f\x9e\x54\x31\x44\x8d\xfd\xee\x66\x07\xa9\x4d\x98\x94\x0e\x84\xef\xe4\x07\x18\xa6\xb2\x34\xda\x10\x0b\x0e\x9d\xa0\x27\x30\x51\xf4\xb9\x57\x43\x74\xd6\x3a\x77\xec\xda\x73\x6b\xa3\x9a\x61\x28\x48\x1d\xd5\x83\x2a\x09\x8d\x62\x26\x9f\x41\x71\x01\xc7\x76\x18\x11\x8d\xb2\xe6\x5f\x8a\x38\x0d\x1c\x6b\xca\x27\xe7\x77\xac\x09\xbd\xeb\x6c\x11\x29\x2a\xe7\x8a\xa8\x78\x1a\x1e\x24\xd2\x9d\x10\x5a\xab\x34\x45\x88\xd1\xde\x73\x86\x2c\xaa\xf2\x08\x37\xe9\x77\x2d\x0e\x03\x14\x8e\x34\x6e\xfb\xba\xa8\xa7\x6f\x9d\xf1\x84\xb6\x13\x31\x5c\x41\xe1\x3d\x0d\xe9\x02\x0d\x49\xed\x22\xec\x8b\x5d\xa7\xa7\x34\x2c\xe4\x4b\xa5\x29\x43\x5f\x1b\x5d\x47\xb9\xfe\x05\x4a\xdc\x29\x04\x31\xa1\xe3\xa3\x41\x6a\x25\xd1\x6a\xed\x9a\xd6\x05\x2a\xe0\xca\x73\xbd\x31\x5e\xa1\xd3\xf5\x54\xb8\x96\x28\xa8\x15\xa3\x63\xf3\xad\xa3\xe8\x55\x41\x2c\xa6\x1c\x7e\x26\xe9\x09\xbd\x62\x79\x7e\x05\x74\x6d\x3e\x45\x2c\xd5\xa7\x68\x2d\x62\x34\x52\x5d\xe0\x2c\x38\x37\x4a\x54\x06\x8b\x8b\xf8\xef\xcb\x37\xae\xaa\xc8\x2f\x90\x9e\x55\x64\x20\xef\x9d\x5f\xc4\x60\x7e\x57\x1e\xe1\xbc\x7d\x3a\x72\x47\x1c\x9c\xb3\xc9\x4c\xe7\x1b\xa7\x8f\xe9\x22\x99\x99\x12\x21\x8b\x17\x97\xd0\x79\x5c\xea\x8b\x2e\xf2\xd1\xcb\xaf\x7f\xc6\xe3\x98\x6a\x9d\x3f\xb0\x3d\xd5\x3f\x67\x3e\x64\x60\x63\x63\x98\x67\x65\x23\xf9\x47\x6f\x58\x2c\xa7\xf3\x2d\xf5\x78\x1d\x8b\xbd\x69\x68\xbe\x48\x66\x61\xa4\xc3\xdb\xcb\xe7\xcb\x54\x17\x19\xec\x04\x10\x6f\x7e\xbb\x8c\x7a\xbf\x1c\xc7\xc6\x8e\x0a\xe3\xc0\x9f\x41\x71\x89\x90\xfc\xd0\xf6\x23\xe4\xd3\x7f\x01\x00\x00\xff\xff\x6a\x5c\x8a\x33\x3e\x05\x00\x00")

func templatesConnectionCacheTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesConnectionCacheTemplate,
		"templates/connection/cache.template",
	)
}

func templatesConnectionCacheTemplate() (*asset, error) {
	bytes, err := templatesConnectionCacheTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/connection/cache.template", size: 1342, mode: os.FileMode(420), modTime: time.Unix(1489670705, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesConnectionConnectTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x94\x4f\x8f\xdb\x46\x0c\xc5\xcf\xd5\xa7\x78\xc8\xa1\xb5\x03\xef\x1a\xcd\xb1\x40\x2f\x4d\x10\xa0\x68\x52\xe7\x10\x14\x08\x8a\x1e\xe8\x11\x25\x4d\x3d\x9a\x51\x67\x38\x51\x54\x63\xbf\x7b\xc1\x91\xe4\x3f\xdd\xe4\xb2\x58\x4b\xd4\x23\xf9\x7b\x24\x07\x32\x27\x6a\x19\x26\x78\xcf\x46\x6c\xf0\x55\x65\xfb\x21\x44\xc1\xa6\x02\x80\xc1\x85\x16\x2f\x5a\x2b\x5d\x3e\x3e\x9a\xd0\xef\x4f\xa1\x27\x5f\xef\x07\x97\x5b\xeb\x1f\x52\x7d\x7a\x68\xc3\xab\xbd\x0b\xed\x8b\x6a\x5b\x55\xfb\x3d\x5e\xe7\x24\xa1\x7f\x7d\x11\xfc\x40\x91\xfa\x04\x9b\x30\x76\x1c\x19\x53\xc8\x90\x8e\x51\xf3\x67\x76\x61\xe0\x88\xd1\x3a\x87\x46\xff\x58\x0f\xf2\x13\x4c\x91\xc0\x10\xf5\xb5\x58\x4e\x3b\x8c\x9d\x35\x5d\xf9\x76\x0c\xd9\xd5\xf0\xcc\xb5\x66\x93\x80\x9c\x18\x21\x62\x0c\xf1\x84\xd1\x4a\xa7\x2a\x4b\xfa\x47\x1c\x3c\x83\xbf\x50\x3f\x38\x46\x6f\xdb\x4e\x70\xe4\x39\x87\xb3\xec\x05\xce\x1e\x23\x45\xcb\x49\x25\x52\x1e\xb4\x75\xeb\xdb\x9b\xdc\x68\x16\x71\xeb\x5b\xcd\x58\x52\x68\x03\xcf\x14\xb4\x3a\xad\x6b\x87\x63\x16\xd4\xc1\xff\x20\x18\xc9\x8b\x16\xe9\x42\x62\xd8\xa6\xc4\x44\x6e\xd9\x73\x24\xe1\xa2\x33\xa3\xac\x64\x1a\xf8\x5b\xf0\x92\xc4\x6c\x04\xe7\x62\xc9\x7e\x8f\x4f\x21\xc7\xe7\x94\x70\x64\x17\xc6\xea\x69\xb6\x61\xd6\x50\xee\xa5\xd8\x39\xd8\x84\x9a\x4b\x43\xf7\x0e\x48\xc0\x18\xad\xd6\x13\xd0\x64\xe7\x26\x58\x6f\xc5\x92\xb3\xff\x2a\xad\x1a\x91\x25\x47\x0f\x52\xe5\xc8\x54\x4f\x2b\xf8\x6b\xa9\x08\xc7\xbf\x15\x79\xd5\x64\x6f\xd6\xe7\x1b\x53\xe3\xe5\x35\xe6\x0d\x09\xed\xa0\x23\xf5\x52\x07\xeb\xf1\x5d\x68\x5b\x8e\x5b\x6c\x6e\x62\x76\xe0\x18\x43\xdc\x2e\xdd\xea\x64\xe2\xa7\x9f\xf1\xfd\x35\xe2\xfc\x74\xcf\x41\x7b\xd2\xd1\x5a\x9f\x7e\xa4\xd3\x4c\xf6\x3a\xd5\xa8\x49\xa8\x74\x52\xfa\xb0\x02\xeb\x25\x94\xa0\x67\x1d\x5c\x64\x3a\xf6\xbb\x7b\x10\x13\x92\x90\xf0\x0e\x29\x9b\x0e\x34\xa3\x25\x23\x99\x1c\x68\xb0\xb7\x09\x17\x75\xe9\x6c\xac\x31\x50\x94\x69\xd5\x7d\x6b\x3d\x39\x37\xed\x30\x50\x4a\x38\x92\x39\xfd\xaf\xd8\x1d\xbc\x75\xc5\xa5\x94\x8d\xe1\x94\xd6\x2f\x0f\xd2\x71\x1c\x6d\xe2\x12\xb1\x80\x2a\x81\x0d\x59\x97\x23\x57\x6b\xe4\x7b\x45\x90\x72\x2c\x8e\x1e\x7e\x7f\xf7\xa9\x98\xa5\xc8\x7f\xf5\x4d\x28\x20\xd6\x1f\xcd\x3c\x9e\xed\xed\xe6\x29\xd2\x59\x6b\x31\x5e\x8b\x2b\x49\x97\xe9\xfa\x83\x9c\xad\x75\x80\xcb\xee\xb2\x9f\x53\xdd\xd3\x1c\x29\xc1\x44\x26\xe1\x1a\x26\xc4\xc8\x46\xdc\x34\x4f\xc7\xc6\xdc\x4e\xc5\xf6\x22\xb7\xd9\xe2\xcf\xbf\xe6\xae\xce\xdf\xf0\xb8\xfa\x6e\x29\xe9\x5a\xcc\x6f\x3c\xc1\x84\x7e\x88\x36\x71\x2a\x6d\x34\x96\x5d\x9d\xca\x32\x72\xad\xfd\xf5\xca\x23\x0f\x20\x64\x6f\xff\xc9\x8c\xcf\xe4\xf2\xbc\x09\x4c\xa6\x83\x4d\x5e\xc8\x1b\x46\x68\x40\xb7\xd7\x50\xfd\xd2\xa0\xf9\x84\xec\xf0\x0a\x3d\xa7\x44\x2d\xa7\xeb\x21\x48\xd4\xcf\xf6\xa9\xcf\x65\x5d\xbb\x72\xa3\x52\x47\x91\xf1\xe3\x9d\xb3\x4a\x5e\x99\xa9\xb0\x5e\x09\xfd\xde\xf3\x17\x59\x65\x67\xd5\xda\x36\x0d\x47\xbd\x2e\x8b\xe2\x7c\xf4\xd4\x43\xba\x79\x79\x15\x7e\xfc\x1a\x57\xdd\xb6\xad\xd2\xd9\x6c\xf5\x82\xe8\x59\xbb\x50\xfd\x78\x78\x73\x00\x65\x09\x0f\x2b\x39\x84\xa6\x59\xc3\x66\x7e\x17\xd4\xe7\x33\x1e\xef\x65\x15\xf9\xd3\xd3\xc2\xff\x83\x23\xb3\x9e\xae\xdb\x01\x78\x9b\x7d\xf9\x27\x95\xae\xdf\xb3\x74\xa1\x4e\xf8\x45\x8f\xd4\x7f\x01\x00\x00\xff\xff\x29\x9a\xa1\xee\x78\x06\x00\x00")

func templatesConnectionConnectTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesConnectionConnectTemplate,
		"templates/connection/connect.template",
	)
}

func templatesConnectionConnectTemplate() (*asset, error) {
	bytes, err := templatesConnectionConnectTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/connection/connect.template", size: 1656, mode: os.FileMode(420), modTime: time.Unix(1489670484, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesConnectionConnectionTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\x41\x4f\xe3\x3e\x10\xc5\xef\xfd\x14\x4f\x88\x63\xff\xe1\xf0\xbf\x21\xed\x21\x0b\x01\x22\xba\x2d\xa2\x41\x2b\x6e\x4c\xed\x21\x31\x38\x76\x64\x3b\xed\x46\x28\xdf\x7d\x65\xa7\xb0\x59\xb8\xee\x31\x9e\xc9\x7b\x33\xef\x37\x1d\x89\x57\xaa\x19\xc2\x1a\xc3\x22\x28\x6b\x16\x8b\xb3\x33\x5c\x6e\xb0\xde\x54\xf8\x91\xdf\x16\xb8\xb8\xc9\xd7\xd7\xc5\x16\xd5\x06\xd5\x4d\xb9\xc5\x55\xb9\x2a\x96\xa8\x6e\x8a\x47\xfc\x2c\x57\x2b\x7c\x2f\xb0\xda\x6c\x2b\x94\x57\x78\xdc\x3c\xe0\xbe\xb8\x2e\xd6\xc5\x7d\x5e\x15\xb1\x07\x77\xab\x87\xeb\x72\x9d\x44\x2f\x3e\x3c\xa0\x3c\x42\x33\x77\x85\xdd\xbd\xb0\x08\x08\x0d\x85\x54\x92\xbc\x67\x6d\x3b\x76\x38\x28\xad\x41\x52\x22\x58\x1c\x1a\x36\x50\x26\x70\xed\x28\x28\x53\x83\x10\x1a\xe5\x24\x3a\x72\x61\x88\x26\xf9\x5d\x99\x21\x97\x12\x64\x06\xbc\x2a\x23\x61\x9f\xa1\xad\xa9\xa1\xd5\x9e\x25\xac\x83\xe8\x7d\xb0\x2d\xfe\x7f\xff\xed\xeb\x18\x3e\x7a\xd8\x28\xed\xe1\x83\xeb\x45\xc8\xa2\x76\x41\xa2\x81\x32\x3e\x90\x11\x1c\x75\x67\x0d\x53\x16\x3b\x86\x6f\xc8\xb1\x44\xad\xed\x8e\xb4\x1e\x96\xf0\x36\x3d\xf7\x8e\xe3\x06\x71\x91\xb6\x0f\xfc\x8b\x7d\x9c\x85\x82\x6d\x95\x88\xe2\x71\x57\x8a\x33\xf8\xb8\xa5\x63\x18\x66\xc9\x32\x5b\x84\xa1\xe3\x79\x76\x47\xbf\xb7\x05\x00\x5c\xa4\x5d\xfe\x54\xef\xc8\x51\xeb\x53\xe9\xed\xed\x3f\x38\x32\x35\xe3\xd4\x2c\x71\xda\xe1\xfc\x1b\xb2\x99\xce\x38\xa6\xb6\xa9\x15\xa7\x5d\xb6\xa6\x96\x31\x8e\xc7\xaf\x2a\xda\x8e\x23\x9e\x5e\xbc\x35\xe7\x27\xd3\xe3\x3d\x1d\x8e\x5d\x27\x4f\x1f\x26\x6c\x64\x14\x1b\x3f\x41\xbe\xa4\x40\xef\xa0\x8f\x33\x27\xba\x8d\xd5\x72\x7a\x75\x74\x98\x67\xdf\xa5\xd9\xf1\xec\x6c\x9b\xca\xca\x08\xdb\x46\xc8\x2d\x7b\x4f\x35\x47\xf9\x2a\x26\x9e\x2e\x62\xc7\x08\xbd\x33\x2c\x27\x56\x04\xc7\xa4\xe7\x72\xbb\x21\xa9\x6c\x2f\x6f\xe1\x7a\x13\x54\xcb\x19\x1e\x6d\x0f\xdf\xd8\x5e\x4b\x18\xde\xb3\x83\x54\x8e\x45\xd0\xe9\x74\x62\xe0\x11\x51\xef\x79\x22\x3b\x1d\xc3\x12\xd6\xe8\x49\xcb\x71\xdd\x6b\x72\x33\x97\x0c\xb9\x87\xef\x45\xb3\x04\xed\xad\x92\x91\x6f\xba\x4b\x33\xa0\x73\x91\x69\x50\xec\xa3\xaa\x0a\x5f\x50\xa6\x84\xfe\xc2\x39\x63\xf6\x99\xd7\x3f\xc7\xf5\x3b\x00\x00\xff\xff\x7a\xb3\x59\x30\xfb\x03\x00\x00")

func templatesConnectionConnectionTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesConnectionConnectionTemplate,
		"templates/connection/connection.template",
	)
}

func templatesConnectionConnectionTemplate() (*asset, error) {
	bytes, err := templatesConnectionConnectionTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/connection/connection.template", size: 1019, mode: os.FileMode(420), modTime: time.Unix(1489715230, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServerHttpHandler_xTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x56\xdf\x6f\xdb\x38\x12\x7e\xb6\xfe\x8a\x39\x01\xed\xc9\x85\x2a\xe3\xfa\x98\x43\x71\x48\x1b\x37\x31\x2e\xb5\x83\xd8\xbd\xa2\x38\x1c\xae\x34\x35\x96\x78\xa6\x38\x3a\x72\x14\xad\x11\xf8\x7f\x5f\x90\x94\xe3\xec\xd6\xdb\x4d\x81\xee\x0f\x3f\x99\xe4\x70\xbe\x6f\x86\x33\xdf\xa8\x15\x72\x2b\x2a\x84\x9a\xb9\x4d\x92\xc9\x04\x2e\x16\x30\x5f\xac\xe0\xfd\xf9\x3f\xa7\xf0\xf6\xea\x7c\x7e\x39\x5d\xc2\x6a\x01\xab\xab\xd9\x12\xde\xcd\xae\xa7\x39\xac\xae\xa6\x9f\xe0\xe3\xec\xfa\x1a\xde\x4c\xe1\x7a\xb1\x5c\xc1\xec\x1d\x7c\x5a\x7c\x80\xdb\xe9\xe5\x74\x3e\xbd\x3d\x5f\x4d\xbd\x0d\xdc\x5c\x7f\xb8\x9c\xcd\x93\x44\x35\x2d\x59\x86\x2c\x19\xa5\x9b\x86\xd3\x64\x94\xa2\x91\x54\x2a\x53\x4d\xfe\xe7\xc8\xa4\x09\x00\x40\xaa\x68\xa2\xa8\x63\xa5\x87\xb5\x41\x9e\x78\x52\x69\x12\xd7\xf7\xf7\x50\xdc\x44\xb2\xb7\x44\x0c\xfb\xfd\x44\x48\x56\x64\x5c\xfa\x8b\x06\x92\x8c\xc1\x60\x14\x6d\x5a\x4d\x15\xa4\x95\xe2\xba\x5b\x17\x92\x9a\xc9\x96\x1a\x61\xca\x49\xab\xbb\x4a\x99\x97\xae\xdc\xbe\xac\xe8\xd5\x44\x53\x35\xf8\xfc\x55\xd3\x06\x9d\x13\x15\xa6\xc9\x38\x24\xcf\x73\x98\x8b\x06\x61\xbf\xbf\x12\xa6\xd4\x68\x41\x39\x10\x50\xc7\x45\xc2\xbb\x16\x4f\x19\x39\xb6\x9d\x64\xb8\x4f\x46\x12\x5e\x1c\x59\x17\x6f\x85\xac\x31\xd9\x07\xdf\x73\xec\x4f\xdc\xb4\xc8\x9d\x35\x1e\xc3\x60\x7f\xc2\x75\xb2\xe9\x8c\x3c\x7d\x37\x3b\x81\x35\x86\x17\x27\x40\xee\x93\x51\xc4\x81\xe7\x87\xd3\x87\xc3\xfb\x64\x34\x92\x67\x20\xf3\x64\xb4\x1f\x98\x2e\xd1\xde\xe1\xd5\x6a\x75\x33\xc4\xed\x80\x6b\x04\x8b\xff\xef\xd0\xb1\x8b\x8c\xb2\xfa\x14\xd2\xf8\x78\x37\xeb\x43\x4d\x16\xb7\xe8\x5a\x32\x0e\x3f\x5a\xc5\x68\x73\xb0\xf0\x62\xd8\x0f\xee\xc6\x9e\xdc\x3a\x07\xb4\x16\xce\x5e\x43\x2c\xa1\xe2\x16\x45\x79\xae\x75\x66\x8b\x37\x54\xee\xc6\xc9\x68\x32\x81\xd5\xe2\x62\x01\x9d\x43\x10\xa0\x55\xa3\x18\x2c\x8a\x12\x2d\x30\x41\x6b\xf1\x0e\x8d\xdf\x71\xd4\x59\x89\x20\x98\x85\xdc\xba\x7f\x1c\x2f\xb6\xc2\x39\xd0\x54\x55\xfe\x49\x0d\xd3\xe1\x49\x73\xbf\x09\xd4\xb1\x67\x40\xd6\xc1\x8e\x92\x91\xda\x04\x3e\x7f\x79\x0d\x46\x69\x4f\x70\xd4\x17\x81\xff\x55\x80\xcc\x42\x00\x4b\x16\xdc\xb9\x99\x61\xb4\x46\xe8\x10\xb7\x9d\x7a\x1f\xe3\xa3\x7d\xf6\xef\xff\xac\x77\x8c\xd9\xa6\xe1\x62\xd9\x5a\x65\x78\x93\x7d\xbe\x4f\x63\x11\xfe\x37\x20\xa6\x67\xe9\x33\x97\xee\x3f\x87\x14\x8c\xc7\xfe\x72\x7c\x2b\xff\x1e\xa3\x98\x80\xe2\xad\x26\x87\xd9\x38\x30\xb3\xc5\x7b\xe4\x9a\x4a\x4f\x2f\xbd\x59\x2c\x57\xe9\xd7\x19\x46\xeb\x39\xf1\xb9\xd6\xd4\x63\xf9\xcd\xf4\x9a\x08\xf7\xcc\xf9\x5e\xe8\x8c\xeb\x5a\xaf\x07\x58\xc2\x86\x2c\x44\x5b\x18\x5a\xb9\x08\x81\x1c\x18\x7e\x11\x4d\xe3\x9f\xf8\xf9\xd0\x73\xc5\xbf\xfe\x76\xbf\x7f\xc8\xf5\xd9\x6b\xf0\x62\x52\x7c\x30\x8d\xb0\xae\x16\x3a\x5b\xe7\xd0\x8c\xff\xfe\xe4\x87\x78\x23\xca\x43\x49\x7d\xc7\xfc\x4f\x26\xf0\xc0\x28\x74\xc1\x9a\xca\x5d\x2c\xa0\xd0\x13\xaa\xaa\x79\xe8\xfe\x60\xfc\x11\x41\x52\xa7\x4b\x10\x77\xa4\xca\x60\xf3\x0a\xf0\x07\x89\xce\x85\xf8\xe0\xe0\x4b\x0a\xad\x1d\x28\x03\x35\x5a\x84\x5e\x71\xed\xeb\x9a\x18\x68\x03\xae\x57\x2c\xeb\x97\x52\x38\x65\x2a\x20\x03\x5e\x76\x5c\xf0\xbf\xee\xd8\x5f\xe2\x5a\x39\x90\xc2\x61\x1e\x20\x5a\xb4\x1b\xb2\x8d\x30\x12\xa1\x12\xca\xf8\x87\x32\xc4\xc0\xb5\x60\xa8\x2c\x0a\xce\x41\x98\x12\x14\xff\xd5\x81\xf6\x5c\x2a\x34\x68\x05\x93\x05\x49\x25\xfa\x1e\x6a\x84\x32\x2c\x94\x09\x30\x4c\x50\x12\x28\x8e\x40\xbd\xd8\x15\xc7\x4e\x52\x1b\xe8\x11\x5c\xe7\x5a\x94\x83\x41\xd0\xc8\x35\x31\x6b\x34\x28\xb7\x39\xb4\x96\x36\x4a\xa3\xf7\xe0\x71\x5d\x2f\x5a\x58\x0b\xb9\x85\x21\x6f\xc7\x08\x11\x44\xdb\x5a\x12\xb2\x4e\x46\xca\xb4\x1d\x87\x12\x39\x94\xd3\x23\x85\x99\xf9\xc3\xaf\x16\x4c\x13\x7b\x25\x18\xe6\x10\x9c\x7d\x43\xfd\x7c\xff\x46\x86\xe1\xf7\xa8\x9c\x64\x19\xc2\x7b\xac\xda\x0f\x7f\x2f\x04\x8b\xa7\xc4\x77\xbc\x91\x83\x2c\xff\x6c\x11\x6a\x4f\xdc\xcf\xe9\x62\x8e\xfd\x75\xd0\xdb\x2c\x1a\xfa\xa0\x1f\x74\xbe\x2e\x64\x71\x89\x9c\xc9\x32\x07\x1d\xcf\x7f\x2e\xba\x07\xe7\xbf\x75\x3c\x39\x1c\x36\xfd\x77\xc3\xe3\x10\x73\xd0\xc5\x92\xad\x32\x55\x36\x3e\x11\xae\xff\x1b\x25\x62\x2a\x64\x7d\x98\x8f\x60\x10\xcb\xc3\x3c\x1f\x06\x0e\x13\x48\xd1\x72\x67\x31\xb6\x20\x75\xdc\x76\x7c\x6c\xa9\x86\xee\x30\x76\x12\x13\x08\x70\x3b\x23\x8b\x1b\x22\x1d\x9a\xa7\xb2\x62\x0d\x64\x10\x36\x96\x1a\xdf\x3d\x16\x01\x3d\x20\xab\x26\x74\xae\x13\x77\xe8\x55\x42\x68\x4d\x72\x98\x79\x86\x38\x9c\x09\xb3\xf3\x57\xfd\xa8\xf4\x5a\xe2\x31\xce\xe0\x82\x82\x3a\x54\x04\xa2\x0c\xdb\xca\x3c\xc2\xf4\x5a\xe4\xe7\x61\x67\x4a\xb4\x8e\x85\x09\x26\x35\xf5\x1e\x7b\x17\xbc\xf7\x64\xb7\x81\x5b\xd8\xa5\x87\x76\xf7\x64\x10\xfd\x4b\x0e\x8e\x3d\x76\xaf\xb4\xf6\xf3\xa1\x13\x5a\xef\xa0\x11\x5b\x3f\xc1\x4b\xb5\xd9\xa0\x45\x2f\x58\x67\x63\x98\xf9\xa4\xb0\x55\x72\xbb\x03\xa5\xac\x1c\xd4\xa6\x16\xec\xa0\xaf\x77\x8f\x44\x26\xa4\xcb\x23\xfb\x00\xe2\x72\x3e\x4d\x46\x51\x2f\x7c\x61\x9d\x50\x8e\xf3\xb0\xe5\x5b\x2b\xe6\xfd\xa1\x08\xa3\x6d\x71\xdb\x99\x2c\x16\xa7\x8a\xd2\xa1\xc7\x7f\xc4\x27\xc0\xd3\xeb\xf0\x27\x13\x4a\x6d\x60\xf8\x7c\x1a\x04\xe3\xfd\x20\x17\x31\xd8\xdf\x5f\x1f\x9e\x12\xc7\x17\x51\x7c\x13\xc8\x29\x88\x1c\xd2\x18\x70\x7a\xf6\xcc\x79\xbc\x63\xca\x72\x3f\xa0\xfd\xbf\x75\xc8\xde\xfe\xc7\x00\x00\x00\xff\xff\x31\x5a\x57\xb4\x33\x0d\x00\x00")

func templatesServerHttpHandler_xTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerHttpHandler_xTemplate,
		"templates/server/http/handler_x.template",
	)
}

func templatesServerHttpHandler_xTemplate() (*asset, error) {
	bytes, err := templatesServerHttpHandler_xTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/http/handler_x.template", size: 3379, mode: os.FileMode(420), modTime: time.Unix(1490117801, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServerHttpServerTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x52\x41\x6f\x9b\x4c\x14\x3c\xef\xfe\x8a\x11\x8a\x3e\x41\xc4\x07\x6d\x8f\x56\x7a\x70\x12\x12\x5b\x75\x8c\x65\x13\x45\x39\x6e\xe0\xc5\x46\x81\x5d\xba\xec\xd6\x8e\x10\xff\xbd\x5a\x68\x6d\xae\xf5\xcd\x3b\x6f\x66\xde\x9b\xa1\x11\xf9\x87\xd8\x13\x0e\xc6\x34\x9c\xc7\x31\xee\x53\xac\xd3\x0c\x4f\xf3\x1f\x09\xee\x16\xf3\xf5\x63\xb2\x43\x96\x22\x5b\x2c\x77\x78\x58\xae\x92\x10\xd9\x22\x79\xc5\xcb\x72\xb5\xc2\x6d\x82\x55\xba\xcb\xb0\x7c\xc0\x6b\xfa\x8c\x6d\xf2\x98\xac\x93\xed\x3c\x4b\xdc\x0c\x36\xab\xe7\xc7\xe5\x9a\xf3\xb2\x6e\x94\x36\xf0\x39\xf3\x24\x99\xd8\x39\x79\x9c\x79\xa6\xac\xc9\xe3\x9c\x79\x5d\x87\x68\x33\xae\xb1\x55\xca\xa0\xef\xe3\x5c\x49\x49\xb9\x29\x95\xf4\x78\x30\xac\xb5\xa6\xe3\x8e\xf4\x2f\xd2\xd0\x64\xac\x96\x2d\x04\x24\x1d\x87\xbd\xd1\x0e\x08\x7f\xb7\x32\xbf\x0c\xfa\x39\xae\x2f\x3a\xd1\x9d\xc8\x0f\x14\xc0\xbf\x76\x8c\x68\x1c\x09\x41\x5a\x2b\x1d\xa0\xe3\x2c\x8e\x91\xa5\xf7\x29\x48\xe4\x07\x34\x95\xdd\x97\x12\x92\xa8\x70\x46\x56\x96\x3f\x2d\x61\x38\xc3\x28\xd0\xa9\x51\x2d\x0d\x94\x37\x6b\x50\x4a\x43\x5a\x8a\xaa\xfa\x0c\x91\x0b\x09\x51\x55\xb0\x2d\x41\x20\x57\x75\xad\xe4\xc0\xe3\x4c\x14\x85\xc6\xec\x3b\xbc\x99\x3b\x78\x91\x65\x9b\x68\xe3\x04\xfb\xde\xbb\xb8\xd7\xe2\x83\x60\x0e\xd4\x12\x72\x25\xdf\xcb\xbd\xd5\xe2\xad\x22\xb4\xaa\xa6\x83\x3a\x72\xa6\x49\x14\x59\x59\x93\xb2\xc6\x89\xb9\x10\xa3\x1d\xe5\x4a\x16\xb8\x1e\xff\xdd\x5b\x2d\xdc\xc5\xfe\xd9\x66\x7b\xe1\xf4\x7d\xc0\xd9\x51\x97\x86\xfe\x55\xe4\x65\x42\x72\x2a\x9c\xd5\xf6\xe4\xd8\x43\x9e\x7f\x53\x7f\xb2\x27\x3f\xe0\x00\x10\xc7\x50\x92\xf0\xae\xf4\x18\xa9\x18\x6a\x18\xa0\xae\xfb\x1f\x5a\xc8\x3d\xe1\x4a\x86\xb8\x6a\x9c\x4a\x34\x1f\xf0\x16\x7d\x3f\xcc\xd4\xf6\x14\x2d\x84\x2c\x2a\xf2\xbd\x78\xe4\xb6\x71\xd7\xe1\xaa\x89\xb6\xe2\xb8\x16\x35\xb9\xe0\x42\x57\xf7\xf8\xea\x9e\xfa\x7e\xa4\x68\x3f\x0f\x82\xb3\x15\xc9\xc2\xa9\x72\xd6\x3a\xa3\xff\x26\xfd\x77\x9c\xb1\x79\x51\xe8\x19\x2e\x3f\x57\x53\xc8\x19\xfb\xa3\x74\x86\x6a\x7b\x72\xcf\x93\x2c\x07\x68\xd2\x87\x83\xa7\x29\x39\x7c\x1a\xb5\xc3\x9f\xc4\x69\x41\xa2\x20\x7d\xfb\x69\xa8\x9d\xe1\x2b\x6e\x6e\xf0\xed\x4b\xc8\x59\xef\xba\x75\x5f\x36\xda\x10\xb2\xac\x78\xff\x3b\x00\x00\xff\xff\x50\xce\x19\x27\x9b\x03\x00\x00")

func templatesServerHttpServerTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerHttpServerTemplate,
		"templates/server/http/server.template",
	)
}

func templatesServerHttpServerTemplate() (*asset, error) {
	bytes, err := templatesServerHttpServerTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/http/server.template", size: 923, mode: os.FileMode(420), modTime: time.Unix(1489677189, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTriggersTrigger_xTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x51\x6f\xdb\x36\x10\x7e\xb6\x7e\xc5\x37\x23\x1b\xe4\x42\xb6\xb1\x3d\x7a\xcd\x43\xb6\xaa\x89\x31\xcf\x2e\x12\x77\x43\xdf\x4a\x4b\x27\x99\x8d\x44\x6a\x24\x15\x2f\x33\xf4\xdf\x07\x8a\x94\xec\x34\x4e\x52\x04\x68\x9e\xa8\xbb\xe3\xdd\xf7\x7d\x77\xbc\xb8\x62\xc9\x2d\xcb\x09\x46\xf1\x3c\x27\xa5\x83\x60\x3a\xc5\xbb\x15\x96\xab\x35\xfe\xbc\xf8\x23\xc6\xef\x57\x17\xcb\xcb\xf8\x06\xeb\x15\xd6\x57\xf3\x1b\xbc\x9f\x2f\xe2\x08\xeb\xab\xf8\x13\xfe\x9e\x2f\x16\xf8\x2d\xc6\x62\x75\xb3\xc6\xfc\x3d\x3e\xad\x3e\xe2\x3a\xbe\x8c\x97\xf1\xf5\xc5\x3a\xb6\x31\xf8\xb0\xf8\x78\x39\x5f\x06\x01\x2f\x2b\xa9\x0c\xc2\x00\x00\x86\x85\xcc\x87\x81\x3b\xe6\xdc\x6c\xeb\xcd\x24\x91\xe5\xf4\x56\x96\x4c\xa4\xd3\xaa\xa8\x73\x2e\xc6\x3a\xbd\x1d\xe7\xf2\x97\x69\xca\x75\xc5\x4c\xb2\x25\x35\x0c\x46\x41\xb0\xdf\xe3\x4c\xb0\x92\x30\x3b\xc7\x64\x69\x0f\x4d\x13\xec\xf7\x63\x28\x26\x72\xc2\x99\x88\x70\x56\xb5\xce\xb9\xa8\x6a\xd3\x79\x79\x86\xb3\x6a\x12\x8b\xba\x5c\x70\x43\x8a\x15\xd6\x31\x9d\xc2\x05\x59\xbb\x3e\xce\xc2\x23\x9c\xb5\x25\x4e\x5e\xea\x31\x34\xcd\xda\xc9\xd6\xa6\xb1\x66\xea\x30\x81\x6b\x30\x01\x12\x75\x49\x8a\x19\x4a\x71\xc7\x8a\x9a\x82\x44\x0a\x6d\xfa\x0c\xcf\x25\x38\x87\xfb\xf6\xb5\xff\xb2\xd7\x3b\x3a\x24\xd2\xe7\x8f\x8f\xd4\x58\xd5\xe6\x1b\xe4\xf0\x51\xaf\xd4\xa3\x67\xe3\xd2\xbc\x42\x0f\x3c\x9b\xe2\xd5\x8a\x78\x90\x6d\xa2\x87\x92\x23\xa5\x8c\x0b\xd2\x30\x5b\x02\x6f\x2d\x99\x54\xed\x57\x77\xe1\x80\x29\x30\xf7\xd5\x29\xbb\xcb\xa4\x8d\xaa\x13\x83\x7d\x3b\xd7\xc7\x3d\xc0\xc3\x91\x6c\x1a\x1f\x61\xc5\xec\xa8\xb9\xaf\xb5\xcd\xdf\x34\xf8\xfc\x45\x4b\x31\x1b\x3a\xe3\x35\xdb\xf9\xa8\xe1\xe7\x3e\xb7\x27\xf6\x04\x35\xdf\xc6\x63\x6e\xd2\x99\xbe\x26\xf7\x22\x37\x9f\xea\x1b\xc8\x1d\x26\xec\x3b\xd1\x3b\x80\x02\xeb\xf6\xd5\x53\xb0\x1f\x02\xfe\xa7\xa6\x9a\x90\x6c\x99\xc0\x9b\xa7\x28\xb6\x81\x87\x65\x73\x74\x9c\xbc\xeb\x8f\x1e\xd1\x92\x76\x27\x4a\x2a\x32\xb5\x12\x1a\x0c\x82\x76\xd8\xef\xbf\xf6\x57\x4a\x56\xa4\x8a\x7b\x70\xc1\x0d\x67\x05\xff\x8f\x52\x30\x91\x42\x11\x4b\xef\x61\x24\x54\x2d\x26\x41\x56\x8b\xe4\x74\x85\x30\x3d\x8d\x6a\x74\x8a\x95\xa7\xee\x40\xe1\xa7\xc7\x01\xce\xdf\xcb\x33\x43\xc9\x6e\x29\x7c\x5e\xa4\x08\x3f\x8f\xa2\xfe\xde\x01\xcc\x0c\xa9\x33\x77\x3d\xbb\xb1\x1d\xdc\xf1\xa2\x80\xae\x37\x25\x37\x60\x4f\xcf\x96\x14\x46\xfa\xf7\x67\x48\x09\x56\x38\x40\x11\x76\x5b\x9e\x6c\xad\x47\x60\x53\x67\x19\x29\x0d\x1f\x49\xff\x1e\x47\x3a\xc9\x42\x73\x0a\xf7\xa8\x85\x12\x4a\x97\x3c\x63\x09\xed\x9b\x91\xd7\xc6\x4c\xdc\x60\xbc\x1d\x43\x4e\xc2\x37\x4f\x3c\xa3\x91\xa7\x74\x4d\xcc\x53\xaa\x64\x65\x77\x19\x37\x54\x42\x66\xd9\x49\xec\x46\x62\x43\xd8\x32\x91\x52\xfa\x1a\xd4\xb6\x5a\x78\xb2\xb1\x5e\xb5\x07\xed\x7d\x3b\xf6\x5c\x3a\xf9\x8d\xac\x1c\xd6\xa4\x90\x9a\x9e\x51\xd7\x11\x52\x74\x47\xc2\xb4\x73\xfb\x45\x6e\x34\x32\x25\x4b\x90\xbd\xc0\x45\x3e\x79\x41\x5f\x23\xab\xb0\x93\xb4\x2d\x17\x7a\x30\xa3\x1e\x0d\x53\xc6\x12\x5a\xc8\x0e\xd6\xa6\x90\xc9\x6d\xd4\x4e\x3e\x17\x39\x6a\x61\x78\x61\x1f\x0e\x2f\x50\x92\xd6\xf6\x17\x09\xd7\x50\x94\x10\xbf\xa3\x34\x42\x49\x4c\xd8\xc0\xc7\x44\xb0\x63\xda\x95\x4d\x5f\xc2\x79\x84\x22\x1c\x81\x94\x92\xdd\x2b\xc9\xda\xd3\xc0\x1e\xfd\xa2\x9c\x9d\xc3\x4c\x5c\x13\xfa\x79\xe7\x59\xe7\x3d\x3f\x6f\xa1\x1e\x9e\x90\xfd\x9b\x4e\xb1\xde\xba\x35\x23\xa8\x38\xc2\x15\x61\x47\xc8\xa5\x69\xff\x01\x96\x95\xb9\x1f\x3b\xfb\xd8\xd2\x8f\xa0\xa5\xf5\x6f\x18\x2f\x6c\x7a\xec\xb8\xd9\x42\x48\x70\xad\x6b\xd2\x0f\x2a\xf8\x6e\x0b\x5e\xf4\xe6\x26\x18\x0c\x78\x66\xc9\x38\xc8\x47\x0b\xc2\x0d\xbe\x9b\xe1\x5f\xdb\x88\x1f\x3a\xd8\x83\xc1\xa0\x90\xf9\xe4\x83\xe2\xc2\x64\xe1\xf0\xda\xea\x4c\x77\x94\x7a\x51\x34\x89\xb6\x2d\x7e\xc9\x76\x2d\x99\xe1\x47\x3d\x8c\x6c\xcc\xc8\x66\xf0\x68\x48\xa9\x60\x30\x68\x82\x41\x13\x34\xff\x07\x00\x00\xff\xff\x8b\x69\x0a\x56\x4e\x0a\x00\x00")

func templatesTriggersTrigger_xTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesTriggersTrigger_xTemplate,
		"templates/triggers/trigger_x.template",
	)
}

func templatesTriggersTrigger_xTemplate() (*asset, error) {
	bytes, err := templatesTriggersTrigger_xTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/triggers/trigger_x.template", size: 2638, mode: os.FileMode(420), modTime: time.Unix(1490024127, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTriggersTrigger_x_runTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x93\xcf\x6b\xdb\x4e\x10\xc5\xef\xfb\x57\x3c\x72\xf8\x22\x05\x7f\xad\x9c\x03\x29\x84\x9c\x7a\x69\x4b\x08\x85\x52\x7a\xd8\x48\x63\x79\xf1\x6a\x46\xec\x8f\x14\x63\xf4\xbf\x97\x5d\xad\x5c\x37\x71\xd2\x43\x0f\x85\xfa\x60\xa4\x9d\xd9\x7d\x4f\x9f\x37\x3b\xea\x76\xa7\x7b\x42\x70\xa6\xef\xc9\x79\xa5\xcc\x30\x8a\x0b\xa8\x14\x00\x5c\x1c\x0e\x58\x7f\x9a\x7b\xee\x45\x02\xa6\xa9\x69\x85\x99\xda\x60\x84\x2f\x54\xad\x54\xd3\xe0\xb3\xb6\xa6\xd3\x81\xf0\xdd\x58\x8b\xa7\xe5\x2d\x6c\x09\x86\xc7\x18\x60\x3c\x46\x27\x23\x39\xbb\x87\xa7\x10\xc7\xb5\xda\x44\x6e\x51\x19\x5c\x26\x85\x0f\x7a\x20\x4c\xd3\xc3\x6c\xe2\x7d\xda\x53\x1f\x4f\xad\x6a\x7c\xfd\x46\xce\x89\xc3\x21\x9b\xca\xcf\x1e\xd7\x37\x18\xf4\x8e\xaa\x52\x5c\xe1\xaa\xce\xe5\xfc\xd7\x34\xb8\x8b\x3e\xc8\xb0\xd8\x31\xc2\x68\xa5\x23\x6c\xc9\xd1\xd2\x72\x3b\x8e\xc4\xdd\x72\xa0\xf6\x60\xa2\x8e\x3a\xb5\xd4\x1d\x85\xe8\x38\xbf\x99\x0d\x2c\x71\x35\xb7\xd6\x78\x87\xab\xe2\x26\xfd\xe6\xbe\x72\x4e\x5e\x9d\xd4\xc9\x3a\x1b\xab\xa6\xdf\x91\x92\x18\xde\x44\x25\xe7\x50\x7d\xcc\x9b\xfe\x4d\x56\xf7\x91\xe1\x22\xfb\x4c\xa7\xcc\x27\x34\x77\x78\xb4\xd2\xee\x3c\x22\x07\x63\x7f\x29\x8e\x62\xad\xe1\x3e\x31\x6c\x65\x18\x2d\x05\x82\xb8\x45\x6a\xc6\x18\xce\x61\xac\x93\x58\x95\x06\x1b\x97\x3f\xc7\x7b\x7d\x77\x7c\x5c\x95\x41\x3e\xee\x7d\x3e\xac\xa7\xcc\x9b\x06\xa5\xe8\xd1\x09\x58\x02\xb6\xfa\x69\x4e\xd9\x27\x5d\x2b\x7d\x9f\x7c\xb6\xc2\x2d\x39\x4e\x30\x6f\xb3\x8c\xc7\xff\xd8\x4b\xc4\xa0\xf7\xa9\x09\xd1\xa7\x36\x1f\x34\x77\xda\x75\xd8\x0c\x21\x03\x48\xa5\x72\x71\x67\x82\x9b\xa3\x76\xd1\xff\x22\xd1\x3d\x8b\x70\x52\xe7\x31\x3f\x90\x0f\x2f\x38\xaf\xf0\x18\x03\x3a\x21\x9f\xed\x67\xe2\x59\x5a\xd8\xee\x5f\xa6\xb2\x80\x17\x26\x04\x33\xd0\xdb\xac\x93\xe2\x1f\xc1\xae\x5e\xbd\x09\xab\x39\x88\xfa\xaf\x25\x51\x6e\xf1\xf5\x0d\xfe\x7b\xcd\xe3\x61\x52\xe7\x53\x3a\xcd\x47\xca\xe7\xe4\x9c\x7e\x04\x00\x00\xff\xff\xa2\x00\xd3\xf1\xa5\x05\x00\x00")

func templatesTriggersTrigger_x_runTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesTriggersTrigger_x_runTemplate,
		"templates/triggers/trigger_x_run.template",
	)
}

func templatesTriggersTrigger_x_runTemplate() (*asset, error) {
	bytes, err := templatesTriggersTrigger_x_runTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/triggers/trigger_x_run.template", size: 1445, mode: os.FileMode(420), modTime: time.Unix(1489673184, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTypesType_xTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x51\x4d\x6f\xa3\x30\x14\xbc\xfb\x57\x8c\x22\x8e\xd9\x70\x8f\x94\x43\x76\xd7\x49\x50\x29\x54\x89\xd3\x2a\xb7\xb8\xf0\x48\x69\xc1\x20\x6c\x5a\x55\x88\xff\x5e\x99\x40\xbe\xa4\xa8\xb7\xf7\xde\xcc\x78\x46\xe3\x52\x46\x1f\xf2\x40\x30\xdf\x25\x69\xc6\x5c\x17\xff\x43\x04\xa1\xc0\xe3\xfc\x81\xe3\xdf\x6a\x1e\x2c\xf9\x06\x22\x84\x58\x79\x1b\x2c\x3c\x9f\x8f\x21\x56\x7c\x87\x17\xcf\xf7\xf1\x97\xc3\x0f\x37\x02\xde\x02\xbb\x70\x8b\x35\x5f\xf2\x80\xaf\xe7\x82\x5b\x0e\x9e\xfc\xed\xd2\x0b\x18\x6b\x1a\x38\x81\xcc\x09\xd3\x19\x26\xdd\xd0\xb6\xac\x69\xfe\xa0\x92\xea\x40\x70\xd4\x18\x4e\xd9\x81\x8b\x94\xb2\x58\xdf\xc0\xe9\x18\x4e\xa7\x75\xca\x09\x57\x75\xee\xa7\x86\x2a\x99\x59\x96\xeb\xe2\xf4\x78\xdb\xda\x91\x06\x03\xa4\x1a\x52\x81\x54\x9d\x53\x25\x0d\xc5\xf8\x94\x59\x4d\x2c\x2a\x94\x36\xf7\x55\x33\x1c\xf7\xde\xe4\xd9\x6a\x86\x3c\xa4\xe2\xf3\x64\x8f\xbd\xff\x95\x25\xa2\x5a\x9b\x22\xef\x0a\xc5\x81\x54\x6f\x5e\x24\x09\x8a\x04\xe6\x8d\xa0\x4b\x8a\x58\x07\x5f\x6a\xb5\xa9\xea\xc8\xa0\x61\x00\xf0\x4b\x39\x03\x25\x4d\xba\x4e\xf2\x57\x8a\xcf\x67\x7b\x12\xf6\x37\x3d\x65\xa8\x52\x32\xb3\xcb\x05\x4c\x99\xa6\x6b\xf6\x10\xe1\xbe\x16\xfb\x77\x5d\xa8\xe9\xe8\xc8\x58\xcb\xaf\x5e\x32\xda\x9f\xb2\xf4\x95\xdc\xac\xed\x4f\x00\x00\x00\xff\xff\xd2\x9e\x31\xcd\x60\x02\x00\x00")

func templatesTypesType_xTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesTypesType_xTemplate,
		"templates/types/type_x.template",
	)
}

func templatesTypesType_xTemplate() (*asset, error) {
	bytes, err := templatesTypesType_xTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/types/type_x.template", size: 608, mode: os.FileMode(420), modTime: time.Unix(1490023861, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesVendorGitkeep = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func templatesVendorGitkeepBytes() ([]byte, error) {
	return bindataRead(
		_templatesVendorGitkeep,
		"templates/vendor/.gitkeep",
	)
}

func templatesVendorGitkeep() (*asset, error) {
	bytes, err := templatesVendorGitkeepBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/vendor/.gitkeep", size: 0, mode: os.FileMode(420), modTime: time.Unix(1488419629, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/Dockerfile.template": templatesDockerfileTemplate,
	"templates/Makefile.template": templatesMakefileTemplate,
	"templates/actions/action_x.template": templatesActionsAction_xTemplate,
	"templates/actions/action_x_run.template": templatesActionsAction_x_runTemplate,
	"templates/cmd/main.template": templatesCmdMainTemplate,
	"templates/connection/cache.template": templatesConnectionCacheTemplate,
	"templates/connection/connect.template": templatesConnectionConnectTemplate,
	"templates/connection/connection.template": templatesConnectionConnectionTemplate,
	"templates/server/http/handler_x.template": templatesServerHttpHandler_xTemplate,
	"templates/server/http/server.template": templatesServerHttpServerTemplate,
	"templates/triggers/trigger_x.template": templatesTriggersTrigger_xTemplate,
	"templates/triggers/trigger_x_run.template": templatesTriggersTrigger_x_runTemplate,
	"templates/types/type_x.template": templatesTypesType_xTemplate,
	"templates/vendor/.gitkeep": templatesVendorGitkeep,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"Dockerfile.template": &bintree{templatesDockerfileTemplate, map[string]*bintree{}},
		"Makefile.template": &bintree{templatesMakefileTemplate, map[string]*bintree{}},
		"actions": &bintree{nil, map[string]*bintree{
			"action_x.template": &bintree{templatesActionsAction_xTemplate, map[string]*bintree{}},
			"action_x_run.template": &bintree{templatesActionsAction_x_runTemplate, map[string]*bintree{}},
		}},
		"cmd": &bintree{nil, map[string]*bintree{
			"main.template": &bintree{templatesCmdMainTemplate, map[string]*bintree{}},
		}},
		"connection": &bintree{nil, map[string]*bintree{
			"cache.template": &bintree{templatesConnectionCacheTemplate, map[string]*bintree{}},
			"connect.template": &bintree{templatesConnectionConnectTemplate, map[string]*bintree{}},
			"connection.template": &bintree{templatesConnectionConnectionTemplate, map[string]*bintree{}},
		}},
		"server": &bintree{nil, map[string]*bintree{
			"http": &bintree{nil, map[string]*bintree{
				"handler_x.template": &bintree{templatesServerHttpHandler_xTemplate, map[string]*bintree{}},
				"server.template": &bintree{templatesServerHttpServerTemplate, map[string]*bintree{}},
			}},
		}},
		"triggers": &bintree{nil, map[string]*bintree{
			"trigger_x.template": &bintree{templatesTriggersTrigger_xTemplate, map[string]*bintree{}},
			"trigger_x_run.template": &bintree{templatesTriggersTrigger_x_runTemplate, map[string]*bintree{}},
		}},
		"types": &bintree{nil, map[string]*bintree{
			"type_x.template": &bintree{templatesTypesType_xTemplate, map[string]*bintree{}},
		}},
		"vendor": &bintree{nil, map[string]*bintree{
			".gitkeep": &bintree{templatesVendorGitkeep, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

