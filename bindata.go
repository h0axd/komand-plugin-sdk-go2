// Code generated by go-bindata.
// sources:
// templates/Dockerfile.template
// templates/Makefile.template
// templates/actions/action_x.template
// templates/actions/action_x_run.template
// templates/cmd/main.template
// templates/connection/cache.template
// templates/connection/connect.template
// templates/connection/connection.template
// templates/server/http/handler_x.template
// templates/server/http/server.template
// templates/triggers/trigger_x.template
// templates/triggers/trigger_x_run.template
// templates/types/type_x.template
// templates/vendor/.gitkeep
// DO NOT EDIT!

package sdk

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesDockerfileTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\x4f\x4f\xc3\x20\x18\xc6\xef\x7c\x8a\x37\xbb\x17\x9c\x89\x17\x93\x1e\x66\x8a\xa6\x71\x83\x86\xd4\xa9\x31\x1e\xb0\x45\x42\x18\xd0\xd0\x7a\x98\x0d\xdf\xdd\x2c\xa5\x27\xf5\xc8\xc3\xf3\xe7\xf7\xde\x0b\x7e\x00\x1b\x9c\xf4\x3d\xd1\xa1\x18\x4e\x5f\xda\xf8\xdb\x2b\x7c\x0d\x68\xbf\xbb\xa3\x7b\x08\x51\x4b\x6f\xbe\xe5\x64\x82\x2f\x17\x63\xfe\x19\x7b\x5b\xea\x90\x1f\xd3\x79\x50\xe5\x92\x46\x88\xb2\x23\x3c\xf0\xed\xcd\x91\xb2\x8a\x0b\xfa\xd2\x50\x51\x1f\x28\x6b\xcb\x2d\x42\xe2\x89\x81\xb3\xbd\x89\x50\x0c\x40\xf2\xf2\x12\x1c\xc9\x87\xf1\x68\x57\x55\x80\x81\xe8\x40\xc6\xd8\x91\x79\x06\xdc\xc8\xce\x4a\xad\x44\x08\x13\xa4\x84\x9e\xb9\x78\xac\x6a\xf1\x9f\x25\x25\xb4\x74\xe4\x56\x3c\x0e\xaa\xc3\x67\xe9\x4e\xf0\x4b\xc9\x38\xd2\x2a\x58\xd9\x2f\x42\x74\x50\xc4\xcf\x75\xe0\x72\x4f\x2b\x5e\x1b\x5e\xb3\x16\xde\x36\x7f\x30\x93\x79\xc6\x4c\x3a\x95\xd2\xe6\x1d\xfd\x04\x00\x00\xff\xff\xc4\x7a\x21\x4f\x52\x01\x00\x00")

func templatesDockerfileTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesDockerfileTemplate,
		"templates/Dockerfile.template",
	)
}

func templatesDockerfileTemplate() (*asset, error) {
	bytes, err := templatesDockerfileTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/Dockerfile.template", size: 338, mode: os.FileMode(420), modTime: time.Unix(1490194044, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesMakefileTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x6d\x6f\xdb\x36\x10\xfe\xac\xfb\x15\x57\xcf\xb0\xad\xa0\x14\xe3\x60\xdd\x00\x6d\x79\x29\xe2\x20\x2d\x8a\xd9\x46\x92\xb6\x18\xa6\xb5\x60\x24\x5a\x22\x2c\x91\x02\x45\x39\x4b\xe2\xfc\xf7\x81\x7a\xf1\x4b\x9c\xb8\xfb\xb2\x2f\x86\x7d\x77\xbc\x7b\x9e\xbb\x87\x47\x7f\xb9\xb8\xba\xfe\x38\x19\x9f\x1e\x77\x07\x45\xc2\xd3\x14\x63\xcd\x73\xec\x7f\x5b\x70\x5d\x08\x25\x7d\xec\x63\x9e\x96\xb1\x90\x5e\x91\xf3\xd0\xbb\x67\x59\x8a\x4b\x2c\x78\x84\xfd\x82\xae\x82\x28\xed\xbb\x30\x7e\xff\xc7\xc5\x4e\x1e\xc9\x32\xbe\x3f\x49\x1d\x51\x65\xb8\x18\x9f\x4f\x46\x1f\xc7\x97\xfe\x2a\xcb\x2d\x2b\xf8\x2f\x3f\xa3\x08\x95\xf4\x72\x19\xe3\xd1\x09\x8d\xf8\x82\xca\x32\x5d\x67\x58\xd2\x65\x10\xd0\x65\xdc\xc7\x25\x1a\x8d\x24\xc2\x7e\x20\xfb\x2e\x7c\xb9\x18\x8f\x26\x57\x2f\x30\x93\x91\xd2\x3f\x22\x56\xc7\x54\xa8\xce\xbf\x8e\x4e\xb7\x00\x59\xc4\xd8\x1d\x4c\xbf\x8e\x5c\x17\xbe\x6f\xd3\xe6\x61\xa2\xb0\x3b\xb0\x46\x17\x97\xc8\xee\xe6\xd8\x7f\xc4\x5c\x0b\x69\xd0\xa8\x32\xcf\xb9\x1e\x14\xe5\x6d\x61\xf4\xa0\xdb\x3d\x7c\x3b\x7c\x3b\x74\x5d\x34\x2a\x55\x77\xdb\x8e\x23\xd7\xc5\xa7\xbe\x0b\x30\xfd\x74\x79\xdc\x1d\xd4\x5c\x5c\xd2\x64\x26\xd6\x52\x0d\xce\xf5\x0c\xd3\x5e\xfc\x00\x30\xba\xbe\x39\x3d\xa6\x73\x95\x31\x19\xd1\x9a\x5a\x41\x6f\x85\x04\xb8\xba\x98\x4e\x8e\x1f\x1f\xd1\x9b\xb2\x70\xce\x62\x7e\xa5\x94\xc1\xa7\x27\x10\x33\x19\xf1\x19\x5a\x37\x38\x55\x50\x93\x1e\xb8\x8c\xc4\x0c\x80\xa5\xa9\x5f\xf5\x1e\x45\xc6\x62\x8e\x79\x7d\x1e\x75\x29\x25\xd7\x00\x75\x15\x1f\x85\x2c\x0c\x4b\x53\x80\xdb\x52\xa4\x91\x0f\xce\x59\xd5\x86\xce\xe7\x42\xc8\x18\x35\xcf\x6d\x4b\x6c\x01\xb7\x03\x8e\xe1\x85\xb1\x43\xea\x0e\x2e\x27\xd3\xf7\x37\x1f\x5c\x5a\xe8\x90\x36\x7e\x5c\x2e\x31\x95\x48\x8a\xa6\xbf\xaf\x44\x81\x93\xcd\x23\xa1\x91\xe4\x68\x19\x3a\xb1\xc2\xaa\x34\x12\x65\x0d\xb4\x1d\xc0\x8b\xa7\x69\x98\x45\x34\x63\x42\x7a\xb1\x02\x68\xb0\xfb\x75\x02\x70\xc2\x1c\x89\x7e\x96\x64\x74\x7d\xe3\x02\xd8\x46\x58\x6e\x35\x81\xd9\x5a\x94\xbd\x1e\x06\xe0\x58\xe9\x10\xe1\xdd\x96\xd8\xa1\xdf\xac\x8f\x16\x34\x18\x54\x87\x30\x70\xbd\x03\x1a\x0c\x83\x4e\xc4\x0c\xf3\xab\x66\x06\x34\x97\xf1\x6f\xb5\xbe\xdf\x76\x07\xad\xf4\xdd\xa0\x43\x3b\x2f\x28\xd3\x4a\xbb\xe4\xe0\x9c\xe9\xcc\xd6\x3e\xb0\x75\x5a\x23\x34\x73\xf1\xc1\xb1\x5e\x3d\xb3\xcd\xfb\x74\xe9\x82\x63\x98\x46\x12\x2e\x1e\x5a\x0b\x12\xc2\xff\x09\xd3\x32\xe2\xc7\x8d\xe1\x00\xa0\x82\xe3\x83\x13\xa9\x70\xce\x75\xdb\x48\x92\xdb\x3b\x46\x0c\xae\xc4\xd7\x36\xc4\x5f\x8b\x0f\xbd\xd5\x31\xc3\xe2\xfd\xa1\xbb\xce\x94\xd9\x56\x02\x68\x1e\x73\xc9\x35\x33\x7c\x25\x9d\xcb\xda\x60\xe5\x23\xf9\x5d\xd3\x0f\x2c\xe6\x3c\xe5\x46\xc9\xd5\x10\x22\xf4\xbc\xd5\x9c\x96\x4b\xcc\x16\xb6\x39\x95\xed\xdc\xaa\x67\xed\x05\xe7\xec\x2e\x11\x61\x82\xf5\x05\xc1\xe1\xc6\x22\xe9\xf5\x5a\x6b\x53\xa7\x85\x83\xb1\xda\x1d\x05\x21\x39\x33\x6d\x1e\x93\xe5\x1b\xb3\xa9\xa0\x4f\x16\x5c\xa7\xec\xde\x42\x7f\x06\x1b\x8d\x42\x93\x70\x0c\x4b\xad\xb9\x34\x18\x09\xcd\x43\xa3\xf4\xfd\x06\x9f\x75\xda\x5e\x0f\x23\x31\x9b\x21\x29\xc7\x7a\x93\xe6\x2a\x82\xe2\x49\xbb\x69\xbc\x2a\x72\x0d\xa4\x95\xe8\x96\xbb\xd7\xc3\x9c\x99\x30\xb1\xb7\x8b\xe4\x43\xfc\xfd\xb5\xd3\xad\xc4\x94\x16\x31\x1e\xd4\xde\x03\x2f\x7e\xd8\x29\xf0\x0c\x6e\x23\xbe\xdd\xce\x40\xbd\x30\xfc\xb6\x20\xd1\xa5\x6c\x8d\x24\x31\x26\xdf\xf2\x54\x16\x80\x0d\x8b\x95\x45\xb5\x42\x67\xd8\xf9\xe9\x8d\x5d\x6a\xb4\x48\x02\xd9\x28\x4f\x97\x12\x09\xb1\xc5\xc5\x7e\x05\x06\xdd\xee\x59\x07\x4f\x70\xd5\xcb\x0a\x87\x73\x16\x26\x99\x8a\xf0\xd7\x77\xef\x76\x3c\xf5\x1a\xfb\x8b\xfc\x8d\x9f\x0b\xbe\xed\x45\x42\x12\x9e\xe6\x76\xa6\xf6\x97\x9d\x6b\x23\x95\xce\x16\xf6\x9a\xdf\x7f\x24\x90\xe3\xf0\xf0\xf0\x70\x48\x8e\xec\xa7\x5f\x7d\xff\x21\x2b\x9b\x7f\x87\x55\xdd\xc3\x57\xa9\xb5\xee\x3d\xfc\xaa\x90\xbd\x24\xad\x67\x73\x1f\x7a\x1e\x35\x4a\xa5\x05\xb5\x0e\x2f\xbf\xb7\xe3\xaf\x0b\x9c\x27\x3c\x9c\xa3\xbd\x42\x68\x23\x50\x2a\x83\x42\x56\x7b\x28\x42\x21\x31\x2c\x0b\xa3\x32\xae\xdb\x87\xa4\x78\xd3\xd9\x97\xd7\x0a\xf9\xde\x24\x4a\x1e\xed\xfa\x3c\xfa\xfc\xc2\x02\x2c\x58\x2a\xa2\x66\xbb\xec\x24\x0d\x2d\xb6\xef\x55\xf4\xff\x00\x79\x3b\xfb\x4b\xc0\xb7\x23\x5e\x82\xef\x4d\x3f\x4c\xc6\x7f\xfa\xc8\xec\xdf\x8f\x6a\x39\xb7\xef\x70\xf3\x2a\xd7\x5b\x66\xbd\x45\xe1\xdf\x00\x00\x00\xff\xff\x1f\x34\x42\x85\xd5\x09\x00\x00")

func templatesMakefileTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesMakefileTemplate,
		"templates/Makefile.template",
	)
}

func templatesMakefileTemplate() (*asset, error) {
	bytes, err := templatesMakefileTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/Makefile.template", size: 2517, mode: os.FileMode(420), modTime: time.Unix(1490303952, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesActionsAction_xTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x53\xd1\x8a\xea\x30\x10\x7d\xcf\x57\x1c\xa4\x8f\x5e\xfb\x2e\xf8\x70\xb9\x8a\x88\x17\x85\x7b\x65\x9f\xcd\xb6\xa3\x9b\x5d\x3b\x29\x4d\xba\x8b\x94\xfc\xfb\x92\x26\x95\xee\x56\x50\x84\x7d\xcb\xcc\x9c\x33\x39\x73\x32\x29\x65\xf6\x26\x8f\x04\x99\x59\xa5\xd9\x08\x91\xa6\xf8\xa3\x73\xc2\x91\x98\x2a\x69\x29\xc7\xf3\x19\xf6\x85\xb0\xd6\x85\xe4\x1c\x4b\x8d\xff\xf3\x35\x96\xa1\xac\xab\x09\xe6\x5b\x6c\xb6\x3b\x2c\xe6\xab\x9d\x10\x4d\x83\x84\x65\x41\x98\xce\x30\xd9\xf8\x83\x73\xa2\x69\x7e\xa1\x92\x7c\x24\x24\x3c\x46\x52\xb6\xc5\x15\x97\xb5\xed\xaa\xea\x80\xa4\x9c\x2c\xb8\x2e\xfe\x2a\x4b\x95\x3c\xf9\x42\x9a\x22\x80\x7c\xde\xf4\xbb\xa8\x31\x92\xf6\x8a\xab\xa4\x8b\x06\xe7\x5a\xbe\x8f\xa9\x13\x03\x65\x20\x19\xc4\x75\x11\xe7\x7b\x97\xa7\x9a\x44\xa6\xd9\xd8\x1b\xd4\x19\x42\x1c\xaf\x7b\xf2\xc4\x6e\x02\xe2\xbc\x77\x1c\x26\x07\xf3\x6f\x6b\x7b\x87\x01\x11\xf5\xb8\x03\xa1\xc1\x63\x16\x5c\xe3\xde\xef\xc1\xb7\x63\xd4\xd5\x35\x0a\x2f\xab\x4c\xbb\x5b\xaa\x0d\x0e\xba\xea\x23\x84\x3d\x97\x34\xa4\x18\x5b\xd5\x99\x45\x23\x00\xa0\xef\x2c\xbe\xae\x96\x73\x11\xe1\x2d\xea\xd4\x87\x68\xe7\x1b\x3b\x87\xfd\xab\xd1\x3c\x1d\x85\xe4\x3f\xf9\x11\x51\xa3\xfd\xa5\x77\xd4\x3e\x50\x1f\x9f\x25\xca\xd7\x21\xba\xa5\x3f\x92\xee\x18\x20\x20\x7f\x74\x82\xdf\xed\x87\x8f\xab\x10\x7e\xff\x40\x70\xc4\x74\x82\xdd\x67\x00\x00\x00\xff\xff\x94\xae\x74\x7a\x2d\x04\x00\x00")

func templatesActionsAction_xTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesActionsAction_xTemplate,
		"templates/actions/action_x.template",
	)
}

func templatesActionsAction_xTemplate() (*asset, error) {
	bytes, err := templatesActionsAction_xTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/actions/action_x.template", size: 1069, mode: os.FileMode(420), modTime: time.Unix(1490288384, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesActionsAction_x_runTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x53\x4f\x6b\xdb\x4e\x10\xbd\xeb\x53\x3c\x7c\xf8\x21\x05\x47\x0a\xbf\x63\x20\x85\x90\x53\x21\x4d\x42\x28\x85\x50\x7a\xd8\x4a\xe3\xf5\xe2\xd5\x8c\xd8\x3f\x09\xc1\xe8\xbb\x97\x5d\x49\xb1\x93\x40\x7b\x2a\x94\x52\x1f\x8c\x66\xe6\xcd\xec\xdb\xf7\x66\x07\xd5\xee\x94\x26\xa8\x36\x18\x61\x5f\x14\xa6\x1f\xc4\x05\x94\x05\x00\xac\xf6\x7b\xd4\x77\x13\xe4\x5e\x24\x60\x1c\x9b\x56\x98\x29\xa3\x57\x19\x33\x58\xd1\x58\x69\x13\xb6\xf1\x7b\xdd\x4a\xdf\xec\xa4\x57\xdc\x35\x83\x8d\xda\xf0\xa9\xef\x76\xa7\x5a\xfe\x6f\xac\xe8\x55\x51\x15\x45\xd3\xe0\x8b\xb2\xa6\x53\x81\xf0\x64\xac\xc5\xe3\x12\x85\x2d\xc1\xf0\x10\x03\x8c\xc7\xe0\x64\x20\x67\x9f\xe1\x29\xc4\xa1\x2e\x36\x91\x5b\x94\x06\x27\x89\xd1\x8d\xea\x09\xe3\xf8\x31\x81\xab\x97\x71\x65\x85\xaf\xdf\xc8\x39\x71\xd8\x67\x66\xe4\x9c\xc7\xf9\x05\x7a\xb5\xa3\x72\x2e\xad\x71\x56\xe5\x62\xfe\x6b\x1a\x5c\x45\x1f\xa4\x5f\x58\x18\x61\xb4\xd2\x11\xb6\xe4\x68\x81\x5c\x0e\x03\x71\x87\xdc\xef\xa1\x3c\x98\xa8\xa3\xae\x58\xea\x8e\x42\x74\x9c\x23\xb3\x81\x25\x2e\xd3\xc9\x15\x3e\xe0\x6c\x66\x92\x7e\x13\x2a\x93\xca\xb9\xb1\x38\xca\xb2\xb1\xc5\xf8\x2b\x71\x24\x86\x9f\xaa\x23\xaf\xd4\xb9\xcd\xe8\xbf\x4d\x9e\xfb\xc8\x93\x32\x2e\x72\x16\x65\x5a\x5c\x3c\x99\xb0\xcd\xb1\x36\x8f\xc4\xf3\x1e\xc9\x23\xb9\xa3\xe4\x61\x73\x67\xc1\xd4\x2b\xc1\x2e\x73\xa9\x4a\x47\x94\x09\x8a\x93\x43\x43\x7d\xf5\xf2\xb9\x9e\x87\xbf\xdb\xc4\x35\xd2\x4b\x48\xcf\xa1\xbe\x16\xad\xc9\x55\x28\xdf\x1b\xb2\x9e\x84\xaa\xe6\xab\xcf\x9e\x9e\x5f\xe0\xbf\x77\xd0\xfd\xb8\x48\xf8\x20\xd1\x1d\x09\xbf\xa4\x3f\xa9\x1d\xc1\x47\x47\x08\x82\xdb\x9b\xeb\x07\x44\x4f\x89\x45\x7d\xe7\x0c\x07\xcb\x50\xdc\x1d\xe2\x4d\x82\x25\x8e\x8a\x9f\xd1\x4e\xc6\xf6\xe4\xbd\xd2\xe4\xd7\x19\xda\x09\x58\x42\x9e\x92\x64\x63\x71\xbd\xb2\xd0\xb9\x4b\x93\x7b\x63\xe9\x42\x3e\x75\xb2\x4c\xf7\xc2\x46\x1c\x7c\x6c\x5b\xf2\xfe\x0d\x9a\x8d\xcd\xd0\x03\x6e\xa3\x8c\x8d\xcb\x7d\x5e\xcd\x5c\x1f\x59\xfe\x99\x7c\x98\x3c\x0f\xe9\xeb\xf7\x98\x9e\x0e\xf9\xe7\xfa\x9f\xe1\xfa\x8f\x00\x00\x00\xff\xff\x83\x3e\x7b\x77\x94\x06\x00\x00")

func templatesActionsAction_x_runTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesActionsAction_x_runTemplate,
		"templates/actions/action_x_run.template",
	)
}

func templatesActionsAction_x_runTemplate() (*asset, error) {
	bytes, err := templatesActionsAction_x_runTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/actions/action_x_run.template", size: 1684, mode: os.FileMode(420), modTime: time.Unix(1490288285, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCmdMainTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x5a\xdd\x8e\x1b\x37\xb2\xbe\x56\x3f\x45\x9d\x86\x1d\xb7\x4e\xe4\x56\xec\x73\xa7\x64\xce\x41\xe2\x71\x62\x23\xfe\x83\x67\x92\x83\x85\x6d\x24\x9c\xee\x92\x9a\xab\x6e\xb2\x41\xb2\x47\x51\x06\x02\xf2\x10\xbe\xdc\x07\xd8\xe7\xf2\x93\x2c\xaa\xc8\xfe\xd3\x8f\xc7\xf1\x62\xf7\x66\x77\x81\xd8\x22\xab\x8b\xc5\xfa\xf9\xea\x23\xe9\x5a\x64\x6b\xb1\x42\xa8\x84\x54\x51\x34\x9f\xc3\x23\x9d\x23\xac\x50\xa1\x11\x0e\x73\xb8\xda\x82\x2b\x10\x7e\xd4\x95\x50\x39\xfc\xa0\xe1\xe2\xfc\x47\xf8\xc1\x4f\x6b\x93\xc2\xf9\x4b\x78\xf1\xf2\x12\x1e\x9f\x3f\xbd\x8c\x22\x59\xd5\xda\x38\x48\xa2\x49\x8c\x2a\xd3\xb9\x54\xab\xf9\x5f\xad\x56\x71\x34\x89\x97\x95\xa3\x3f\x4a\xbd\xa2\x3f\xb4\x8d\xa3\x68\x22\x94\x95\x10\xaf\xa4\x2b\x9a\xab\x34\xd3\xd5\xbc\x5a\x35\xee\xf7\x39\x0d\xd3\xf4\x70\x66\xcd\x06\xcc\xeb\xb2\x59\x49\x75\xdf\xe6\xeb\xfb\x2b\xfd\x70\x9e\x4b\x5b\x0b\x97\x15\x68\xe2\x08\x00\xa0\x2e\xf5\x0a\x6e\xff\x2c\x18\x71\xab\x5c\x85\xd6\x8a\x15\x92\x2d\x37\x37\xf7\x41\x2e\x21\xfd\x36\x73\x52\x2b\x0b\xbb\x5d\x34\x89\x6f\x6e\x20\x7d\xe5\x1d\xf8\x5a\x6b\x07\xbb\xdd\x5c\xf8\xf9\xd8\x7f\x81\x2a\x3f\x29\x99\x69\xa5\x90\xa5\xe3\xe3\x02\x16\xcd\x35\x9a\x79\xe1\x5c\x1d\xf7\x06\x5c\x1a\xb9\x5a\xa1\x39\x6d\x81\x0b\x02\x63\x13\xa6\x51\x74\x2d\x0c\x85\x66\x3e\x87\x17\xa2\x42\xf0\x7b\x05\x25\x2a\x8c\x26\x3c\x72\x06\xac\x8f\xff\xbe\xdb\xc5\x2c\xfa\x33\xaa\x5c\x9b\x56\xf8\x9a\x7f\x45\x93\x30\x1a\x3e\x08\xbf\xfa\x4f\x8c\x95\x5a\xf5\xdf\xf0\x4f\x8e\x4f\x3b\xd5\x7d\xe8\x7f\xb6\x5f\x9e\xa3\xcd\x8c\xac\xdd\xe0\xeb\xbc\x1f\x62\x0d\x43\x91\xa0\x65\x38\x44\x9a\xa6\x9c\xc7\x97\x05\x5a\x84\x1c\x97\x52\x21\x5c\x0b\x23\x75\x63\x21\xd3\xa5\x36\x90\x69\x65\x9d\x50\xce\x42\xeb\x93\x52\x56\x08\x70\x06\x94\x79\xe9\x23\x12\xa2\x32\x48\xe2\x95\x41\x54\x5f\x16\x8b\xab\x52\x64\xeb\x78\x1a\x4d\x0c\xe6\x70\x4c\xd0\x60\x4e\xd3\x2c\x7f\x4a\x8f\xff\xde\xa2\x3b\xfa\xbd\x45\x17\x4f\xc9\x76\xb7\xad\x11\xb2\x52\x7e\x6b\x56\x16\xac\x33\x4d\xe6\xe0\x26\x9a\x3c\xd2\x15\x97\x20\xfd\xcf\x3a\x23\xd5\x2a\x9a\x5c\x34\x57\x61\xd8\xc2\x9b\x77\x61\x74\x17\x45\xcb\x46\x65\xb0\x42\x47\x2a\xbe\x37\xba\x7a\xf4\xec\x69\x32\x85\xe4\xbf\x83\xd6\x19\xa0\x31\xda\x4c\x49\xad\x5c\x42\x89\x2a\xd1\x36\xa5\x99\x29\x7c\x73\x06\x0f\x68\x7c\x62\xd0\x35\x46\x81\x92\x65\x10\xb7\xe9\x0b\xdc\x24\xf1\x56\x37\x50\x35\xd6\x81\xad\x31\x93\xcb\x2d\x64\xc1\x30\xa7\x41\xaa\x6b\xbd\x46\x10\x21\x78\xb4\xe1\x5d\x34\x11\xb4\x91\xc5\x19\x7c\x11\x96\x27\xed\xc1\xec\x05\x6f\x27\x2c\xfe\xe6\xc1\xbb\x59\x34\x19\x6e\x6a\xd1\x4d\x3d\x5c\xd0\xdc\x2e\x6a\xcd\x12\xbc\x0d\x25\xcb\xe1\x76\x9f\xfb\x72\xa5\x1d\x5f\xb8\x5c\x2a\xde\x73\xa8\xe1\xf4\xe7\x07\xc3\x6d\x57\x6c\x50\x3f\x77\xb3\x8b\x26\x39\x66\x34\x4a\x80\x45\x5b\x3d\xc7\x4c\xe7\x68\xc8\x35\xac\x6d\xca\xce\x42\x63\x48\x28\xc7\x2c\xf5\x02\x49\x35\xfd\x9a\x47\xff\xeb\x8c\xec\x61\xdf\x51\xfa\x99\x2d\x2c\x8d\xae\xba\x1d\xfc\xcf\x3b\xd8\x14\x32\x2b\x40\x5a\xd8\x14\x68\x90\x71\xb5\x91\xc1\x57\xa9\x43\xf2\x29\x62\x65\xc9\x93\x96\xca\xd6\x15\x58\x45\x93\xc1\xaa\x6c\xda\x4f\xaa\x12\xc6\x16\xa2\x4c\xde\xbc\xbb\xda\x3a\x4c\xfa\x15\xa6\xb3\x23\xc6\xec\x47\x32\x9a\x90\x1f\x7b\x57\x56\x63\x3f\x52\x23\x48\xd8\x47\xa2\x4d\x15\x5a\x7a\x3f\x9b\x3a\x67\x0c\x56\x2a\xf5\x2a\xfd\x5e\x38\x51\x26\x68\x8c\x8f\xbd\xdd\x48\x97\x15\x1c\xae\xb4\xcd\xe0\x9b\x68\x92\x09\x8b\x10\x07\x64\x88\x17\xd1\x64\x52\x1b\xa9\x5c\xc0\x03\xd2\xee\x25\x0a\x2c\xeb\x7e\xfa\x09\x96\x75\x3f\x27\xd5\x52\xf7\x73\x03\x10\xe8\x45\xac\xa8\xea\x12\x59\x28\xe4\x39\x1b\x32\xc8\xb0\x29\x9c\x9d\xc1\x57\xde\x4f\xbd\xf9\xf1\x5f\xda\x24\xaf\x8d\xbe\x96\x39\x82\x50\xe0\x91\x1d\xb4\x81\x80\xb0\x14\xa7\xb6\x51\x82\x5f\x0a\xa4\xaa\x1b\xf7\x56\x3d\xfe\x6d\xd1\x8e\x54\xdb\x5f\xfc\x97\x54\x0d\xe4\x12\x6f\xef\x05\xcf\x3e\x25\xf1\x03\xa3\xde\x7c\xf5\xae\xf7\x00\xa1\xff\x02\x08\x1c\x05\x56\x5a\xc9\xdf\x11\x84\x05\x1a\x8e\x26\x93\x3e\x3e\x34\x40\x59\x7b\xc1\x4d\x23\xe9\x9b\x0b\x0d\x3e\x12\x59\x81\xc9\x74\xda\x27\xd3\x30\x3f\xf6\xc3\xc6\x46\x2e\x2b\x97\xbe\x22\x43\x4b\x95\xc4\xaf\x3c\x16\x0f\x9a\x03\x5c\x69\xed\xa4\x5a\xc1\x93\xcb\xcb\x57\xc1\xb4\x34\x4d\x79\x8f\x0c\xbe\x94\xe5\xb2\x2c\xe1\xaa\xd4\xd9\x1a\x1a\xe5\x64\xc9\x09\xef\x9b\x1a\xd8\xa2\x71\x16\x72\xbd\x51\xa3\x04\xb7\xe9\x33\x69\x1d\xaa\x6f\x55\xce\x1b\x49\x8e\xa4\xf3\x31\x73\xbd\xaf\x4c\xe3\x73\x69\x29\xca\xd2\x15\x46\x37\xab\x82\xaa\x7a\x29\x9a\xd2\x2d\xbc\x61\xff\x8f\xf7\x0c\x82\x69\x94\x22\xe3\x51\xba\x02\x4d\x1f\xdc\x19\x45\x57\xb4\xf1\x8d\x26\x93\x6a\x98\xff\x87\xf0\x72\x8b\x3f\x97\x03\xb4\xec\x12\x09\x02\xe8\xc0\x95\xce\xb7\x70\x2d\x05\x5c\x5c\x9e\x3f\x7d\x41\xc9\x64\x1a\x75\x34\xd1\x16\x70\xd7\xc6\x6c\x49\xfa\x98\x10\xcc\x47\x92\xa2\x14\xca\xab\x4a\x2f\xa9\x69\xd0\xea\xde\x13\x5e\xc5\x2f\xd6\x09\xe3\xd8\x25\x03\x1f\x9b\x46\xbd\x54\xf8\x72\xb9\xf4\x54\x26\x19\xd6\xe6\x0c\xf6\x01\x04\x98\x12\xfa\xc2\xb5\x85\x6e\xca\x1c\xae\xd8\x81\xec\x2b\x02\x2d\xd2\x7e\x18\x14\x36\xcf\x1b\x13\x76\x31\xb4\xe6\xa3\x29\xd2\x96\xd7\x28\x47\xc6\x1b\x08\x24\xc8\xe7\xdd\xbf\x72\x07\x83\xec\x19\xc5\xb5\x51\x6b\xa5\x37\xaa\x0b\x26\x37\x6d\x8e\x92\x8f\xc5\xb4\x45\xd9\x16\x56\xf7\xbd\x5e\x11\xcd\xf6\x1d\x7b\x06\x15\x0c\xda\xd4\xd4\xb7\x29\x8a\xe6\x31\xd2\x99\xe5\xbe\x97\xf6\x05\x7e\x2e\x9c\xa0\xfe\x55\xd2\x04\x31\x60\x2a\xf9\xef\x9a\xe5\x12\x0d\xe6\xcf\x34\x39\x8a\x52\x95\xbf\xeb\x09\x33\xa5\xf1\x6b\xb1\x49\xaa\xf4\x3b\x9d\x6f\xd3\xf3\x6e\x62\xca\x35\x83\x06\xca\xf4\xfb\xb2\xb1\x45\x68\x80\xde\x2b\x06\x6d\xad\x95\x45\xd2\xd5\x9a\xfc\x3a\x8c\x51\xfa\x5d\x38\xe1\x1a\xbb\x80\x58\xaf\x63\xdf\xb0\xe7\x73\xe8\x3a\x16\x87\x97\xf3\x5e\x2a\xa7\xf9\x97\x91\xab\xc2\x05\x9a\x13\xf9\x0a\x85\x8c\x83\x24\xae\xb5\xe4\x1e\x08\x0f\x01\x7f\xcb\xd0\x5a\xee\x7f\xd0\xea\xca\x44\x59\x5a\x90\x0a\xb8\x99\x6e\xa4\x2b\x40\x40\xa9\x1d\xe8\x25\xf8\xba\xb8\x9f\x09\x4b\x65\xae\x15\xc7\xc7\xb2\xfe\xab\xc6\xd1\x47\x8e\xd2\x8f\xf2\x73\xc6\x4b\xd4\x68\x96\xda\x54\x42\x65\x08\x2b\x21\x15\x75\x69\xa5\x1d\xb8\x42\x38\x58\x19\x14\x6e\x06\x94\x40\xd2\xdd\xb3\x50\x92\x2d\xab\xf6\x0c\x04\xc4\x02\xa8\x7c\xa9\x73\x3a\x3a\x46\xd1\x32\x4e\x43\xae\x41\x3a\xbf\xd0\x46\x6c\x53\x1e\xbe\x7c\x79\xfe\x92\x42\xba\x41\xb0\x0d\x31\xa8\x20\x20\x2d\x08\xb8\xd2\xce\x95\xa8\x30\x5b\xcf\x08\x2f\x96\x92\x1a\x8a\xe3\x75\xed\x46\xd4\x70\x25\xb2\x35\x04\xbf\xf5\x3b\x44\x10\x75\x6d\xb4\xc8\x8a\xa8\xc7\x03\x8e\xa9\x4f\x9b\x36\x91\x8c\x50\x2b\x84\x3b\x6a\x06\x77\x6a\x0a\xdf\x38\xab\xb8\x52\x6f\x6e\xe0\x4e\x9d\xbe\x16\x9b\xf6\x08\xc0\x9d\x93\x7a\x14\xe7\x5c\x38\xdb\xa4\x5e\x2c\xc8\x70\x0b\xa3\xf4\x3b\xcd\x53\x82\x39\x2c\x39\xf3\x2d\xf2\x34\x4d\xe9\x18\xca\xad\xfa\x1e\x75\x25\x30\x83\x2c\xff\x14\x8d\x54\x34\x1d\xa2\x0f\x2a\x28\x68\x4a\xb2\x7c\x06\xe5\x09\x54\x3f\x50\x26\x4e\xfb\xc4\x7b\x96\x9d\x62\x1a\xf5\x1c\x5d\xa1\xb9\xfa\x44\xfa\xba\x09\x0d\x8f\xeb\xff\xec\x0c\x62\x02\xa0\x38\x2c\xd1\xc9\x92\xe8\xa5\x47\x26\x56\x12\x2a\x2c\x7d\xd9\x38\xf6\x21\x19\xc7\x40\xe8\xe5\x13\xbf\x31\xe9\x1d\x7c\x7a\x07\x41\x8b\x2f\x52\x3a\x3e\x31\xd2\xc4\xa3\x49\xee\x30\x70\x36\xec\x36\xc1\x8a\xf9\xbc\x83\x0f\x5f\xba\x68\x9b\x92\x4c\xdc\x18\x51\xd7\x68\xf6\x29\x35\xa9\xa5\x40\x2d\xa0\x55\x4e\xf4\x7e\x42\xf0\xb8\xd8\x6b\x51\x3c\x11\xd8\xdf\x02\xe2\xeb\x07\x3c\xc2\x00\x9c\x5e\xa0\xca\x93\xb0\xc4\x74\x7c\xac\x1e\xa0\x73\x08\x0f\xd1\x16\xb6\x7a\x80\xd1\xa1\x9f\x06\x74\x1e\x54\x86\xa7\xa8\x41\xe1\xae\x67\xc4\x43\x3a\x7c\xd0\x6c\xfe\x14\x70\x8f\x0e\xeb\x9f\x88\xdc\x2f\x08\x87\xca\xcf\xc2\xed\x0a\x9d\x18\x22\x73\x58\xfe\xf1\x35\x2a\xf7\x1c\xfd\x5a\xb7\x55\x15\xc9\xcd\x28\x8e\x4e\x1c\x96\xd4\xb0\x08\x76\xd1\x3e\xde\x84\xe5\x4e\x02\xce\xd8\x1b\x9f\x82\x38\xed\x5d\x46\x3a\xa0\x9e\x41\xcb\x7f\x2c\xee\xb0\x67\x3a\xc7\xbc\xc0\xcd\x08\x7a\x82\x77\x12\x22\x42\x14\xc2\xd3\x68\xa3\x3b\x8b\x1c\x63\xcd\x3e\x88\x7c\x3d\x84\x85\x53\xfd\x7e\x32\xf1\x90\xb4\x00\xcd\x35\xbc\x4f\x00\xbc\xc9\x64\xc2\xc1\xc6\x6e\x83\x9c\x5b\x00\x6b\xd7\xf2\x48\x1d\x98\x82\x42\xcc\xa9\xdb\x3b\xcd\x87\x13\x68\xea\x80\x52\x22\x2f\xb5\xae\xb9\x8d\xee\x53\xcd\x96\xbe\x11\x17\xd0\xca\x36\x15\xe6\x41\xed\x32\x70\x43\x2e\xf3\x0d\x02\x56\xd4\xcb\x7d\xef\xed\x8b\x11\x72\x69\x30\x73\x25\x75\xf7\x8f\xe2\xe0\x31\x20\x3c\x8d\x84\x87\x50\xe8\xb7\x7b\x00\x86\xc3\xc3\x7d\x8f\xd2\x17\xa4\xa9\xdb\x3c\xd0\xee\xa3\xc9\x64\xa5\xc1\xa5\x3c\xf5\x1a\x45\xfe\x4c\xeb\x3a\x29\xc3\x71\xed\x75\xa3\x0e\xa9\xb8\x74\x90\x69\x3a\xa4\x3a\xb4\x30\xf7\x6c\x3c\x90\xf1\xb0\xa8\xa3\x76\x76\xd8\x7b\xfe\x3c\x42\xb7\x8c\xff\x4f\x43\x74\x7b\x8e\x90\x16\x6a\x83\xce\x6d\xa1\x10\xd9\x7a\x3b\x63\xee\x66\x1b\x83\x84\xc2\x8e\x09\xa2\x67\x58\xe8\x1c\x1a\xa2\x63\xcc\x03\xf9\x82\x86\xfc\x84\x6a\x25\x15\xce\x68\xcf\xb9\x46\xab\xee\x39\xf2\xda\x9a\xf4\x97\x72\x8d\x4c\xd7\x68\x4b\x42\x6d\x61\x2d\x55\x4e\x1c\x33\x26\x4e\x19\xc3\xb2\x14\x2b\xcf\x3e\xc7\xa9\x91\xa6\x29\xa9\x23\x35\x36\x28\x21\x2e\xb9\x41\xe6\x85\x16\x82\x67\x22\xcf\x15\x05\x64\x68\x88\x3c\x32\x53\xf5\x5c\xd3\x60\x5d\x8a\x8c\x29\xa0\x56\x25\x71\xe6\x4e\xa8\x10\x26\x27\xda\x99\x83\xe4\xab\xcc\x0c\x6d\x0a\x17\xda\x73\x59\x4d\xe4\x39\x50\x42\xbf\xed\x9a\x58\xe9\x7c\xce\x5a\x49\x42\xe1\xe6\x88\x44\x0a\x4f\xef\x55\x4c\xab\xb9\x8c\x0a\x9e\x28\x85\x43\x43\x6c\xbb\x60\x34\x17\x0e\xae\xd0\xba\x90\x22\x74\xa8\x45\x05\x9a\x3c\xbc\x91\x16\x7d\xcb\x3c\xec\x55\xb9\x70\x02\x2a\x51\xbf\xf1\x7d\xf3\x9d\x54\x0e\xcd\x52\x64\x78\xb3\x9b\x0e\x5d\xd6\x37\xb3\x70\x35\xd9\x98\x72\x06\x7a\xcd\x1d\x50\x38\xf1\x26\x6e\x4c\x19\xbf\xfb\x9a\x86\xf8\x5c\xf7\x98\xe3\x46\x1d\xbe\x11\x65\xb9\xe5\x20\x59\x78\x08\xd7\xa2\x6c\xd0\xce\x38\xc8\x1b\xf4\xee\x6b\x2c\xfa\x4d\x69\x85\xff\xd7\xe7\xe3\x60\xf9\x17\xb8\x79\x72\x79\xf9\x2a\x69\x4c\x99\x26\xde\xd4\xe9\x74\x78\x55\x36\x96\xbd\x70\xb9\x6e\x5c\x32\xed\xb8\xc2\xe1\x45\x14\x6d\x63\x3e\x0f\xef\x25\x25\x3c\x55\x4b\x0d\x73\x78\x82\x22\x47\xc3\x87\xa9\xa6\x64\x38\x8f\xdf\xaa\xb8\xfb\xfd\xe5\x19\x17\xc9\x05\xab\x5b\x26\x31\x21\xbb\xbf\x28\x05\x80\xbb\x96\xfe\xff\xe1\x6f\x7f\x7f\xab\xe2\x19\xf0\xbd\xf2\x8c\xef\xf3\x67\xc0\x77\xc8\xd3\x93\x6a\xfc\x2d\xfd\xe2\x23\x6a\xbc\xc4\x27\x28\x0a\xe0\xf4\x11\x45\x2c\x71\xab\xa6\x81\xaf\x16\xc7\x35\x0d\x24\x3a\x6d\x27\xe8\x15\xb5\x41\x02\x92\x4c\x37\x8a\x9d\x9a\x94\xa8\x7a\x99\x29\x0b\xf1\xcd\xac\x07\x1b\x0a\xc6\x49\xcb\xde\xb6\xb7\xf5\xc7\x26\xbb\x65\x93\xbb\xf6\x6e\x7e\xd7\x4e\x17\x30\xb4\x99\xac\x1b\x58\xb2\xdb\xf5\x7e\x18\xd0\x22\x39\x83\x3b\xee\x90\x16\x9d\x58\xf2\xc3\xfb\xf7\x1f\xde\xff\xf1\xe1\xfd\x1f\xc1\x4d\xbc\xb4\x9d\x0e\x97\x8d\xfd\xba\xdd\xf3\x4d\x58\xb5\x9f\xd8\x7b\x27\x19\x5b\xd5\x02\xf6\xe0\xef\xc7\xef\x1f\xc8\xcd\xbe\x63\xed\x39\x3a\x08\x75\x7e\x0e\xa7\xcf\xcf\x77\x73\xbb\xea\x29\x2f\x8f\xed\xf8\x88\x9b\xc5\xc1\x71\xf7\x9f\xf5\xb2\x38\xe5\x65\xf1\x19\x5e\xee\xae\x5a\x13\x6f\xd6\x1e\xa0\x8c\x6e\x8a\xbd\x4f\x03\x36\xf5\xe7\x0d\xea\xc1\xdf\x6d\x1d\xf6\xf7\xc1\x4c\x5d\x9f\x07\xe2\x7a\x70\xe4\x38\x7a\x7d\x3f\x26\xf7\xfe\x89\x64\x4c\x63\x0e\x68\x89\x67\x35\xad\x10\xfd\x0a\x7c\xc7\x3b\x7b\xd1\xde\xab\xd2\x50\x4f\x9b\x17\xd0\xdb\x4b\x33\x74\xe4\x58\x40\x78\xcd\xf8\xf5\x66\xf7\xeb\x94\x87\xfb\x6e\xb0\x80\x4a\xac\x31\x39\xd1\x41\xf8\xa8\x38\x1b\x3d\x37\x1c\xbb\xf8\x38\x9e\x09\xfd\x31\x44\xec\x1f\x43\xc2\xad\xea\x59\xcb\xd0\x88\x76\xfa\xbf\x7d\xc4\xd5\xc3\xfb\x00\xb1\x77\x47\xf2\xa9\x0c\x7f\x78\x6e\x81\x33\x18\xac\x39\xa2\x42\xb7\x83\x49\xbf\x39\x77\x7a\x73\x81\x7c\xd1\xee\xc2\x5f\x3f\xb2\xbd\xe1\x81\xac\xc7\x9a\xf1\x91\xec\x33\xb7\x39\x5c\x7c\xb4\xcf\x01\x87\x1c\x5e\xc1\xfe\x34\x3e\xde\x0f\xde\x65\x98\x46\x8a\x9e\x3f\xb6\xf5\x7e\x74\x4b\x4f\x55\x8e\xca\x25\x5f\x54\x33\x88\x21\xa6\xff\x40\xfc\x29\xe5\x31\x7c\x20\xf1\x49\xd9\x96\xef\xf4\xe8\x45\xc2\xf8\x81\x8b\x34\x0e\x35\x84\x89\xbd\xd2\xf7\x0f\x5e\x23\xd9\xa4\x7b\xa2\xdf\xed\x80\xe6\x17\x6f\x95\x47\xd1\x81\x48\xf7\x7e\x7a\x64\xae\x08\xdf\xb8\x8b\x42\x6f\xac\x67\x44\x15\xaa\xe6\x88\x68\x78\x9f\x63\x69\x2a\xc6\x52\x6c\xdb\xd7\x7c\x90\x6a\xa9\x8f\x7c\x42\xc3\x23\x79\x1a\x30\x95\xe0\x10\x89\x2b\xdd\xf8\x73\x89\xb8\x16\xb2\x14\x57\x25\x86\x30\x59\x4f\x4d\x43\x72\xcd\x40\x58\xd8\x60\x59\xd2\x9f\xab\xc0\x9d\xc2\xbf\x07\xa0\x43\x2d\x51\xc1\x23\x6b\x87\x07\xb7\x6f\xda\x34\xd0\xa6\xcd\x0d\x25\x2a\xfc\xdf\x91\x59\x62\xf4\x60\xd7\x9d\x03\xf9\xd4\x57\xb4\xff\x6c\xa0\xb3\xa8\x57\x75\x64\x59\x3a\x25\xb2\x6e\x3a\x45\xf1\xfb\x05\x11\xe4\xca\x5f\xe4\x09\x6b\x75\x26\xf9\x5f\xd2\x74\x67\x84\xf0\x14\x74\x44\x7b\x78\x53\x97\x98\xf3\xc3\x90\x50\x7b\xe6\x69\x7e\x3a\x73\xb9\x3c\x66\x87\x69\xd4\xc8\x0c\xd3\xa8\x7f\x93\x15\xbb\x7f\x04\x00\x00\xff\xff\xe1\xb1\x7f\xde\x45\x24\x00\x00")

func templatesCmdMainTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesCmdMainTemplate,
		"templates/cmd/main.template",
	)
}

func templatesCmdMainTemplate() (*asset, error) {
	bytes, err := templatesCmdMainTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cmd/main.template", size: 9285, mode: os.FileMode(420), modTime: time.Unix(1490757837, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesConnectionCacheTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x93\x41\x6f\xe3\x36\x10\x85\xcf\xd6\xaf\x78\xf5\xa1\x90\x03\xad\x02\xf4\xb8\x45\x4e\x71\x11\x04\xd9\xc6\x05\x9a\x9e\x16\x7b\xa0\xa9\xb1\x44\x98\x1a\x6a\xc9\xe1\xaa\x6e\x90\xff\x5e\x0c\xe5\x24\xde\x45\x7b\xa3\x38\xe4\x9b\x8f\x6f\x9e\x26\x63\x8f\xa6\x27\xd8\xc0\x4c\x56\x5c\xe0\xaa\xba\xbe\xc6\x6d\xe8\x08\x3d\x31\x45\x23\xd4\x61\x7f\x82\x0c\x84\x87\x30\x1a\xee\x70\x17\xf0\xe7\xf6\x01\x77\x4b\x39\xc4\x16\xdb\x1d\x1e\x77\x4f\xf8\x6d\x7b\xff\x54\x55\x6e\x9c\x42\x14\xd4\x15\x00\xac\x0f\xa3\xac\x97\x55\x3a\xb1\x5d\x57\x65\x3d\xf9\xd0\x63\xdd\x3b\x19\xf2\xbe\xb5\x61\xbc\x3e\x16\xe5\xeb\xc9\xe7\xde\xf1\x87\xd4\x1d\x3f\xf4\xe1\x97\x6b\x1f\xfa\x75\xb5\x59\x80\x8c\x1d\x08\x2e\xc1\x20\xb9\x71\xf2\x84\x39\x9a\x69\xa2\x08\x13\x43\xe6\x0e\x06\xa3\x99\x30\x3b\x19\x74\x99\x85\xfe\x6e\x20\x01\x49\x42\xbc\x7c\x5d\x82\xe3\x4a\x4e\x13\x9d\x15\x93\xc4\x6c\x05\xcf\x05\x4b\x09\xdb\xdf\xf5\x6e\xf9\xec\x8c\x14\xd5\xcf\x49\xa2\xe3\xfe\xcb\xd5\xed\xbb\x49\x2f\x85\xea\x91\xe6\x45\x26\x92\xe4\xc8\x4a\xc7\x34\x5f\xb4\x83\xd5\x72\x75\xc8\x6c\xdf\x0e\xd7\x1b\x5c\x2d\xb7\x9e\xab\xd5\x72\x11\x3f\x97\x8d\xe7\x6a\xb5\xd2\xa6\x1f\x31\x9a\x23\xd5\xff\xdd\x7a\xd3\x54\xab\x97\x73\xff\x3b\x12\xcc\xce\x7b\xf4\x24\x08\x11\x8e\x9d\x94\x49\x29\x41\x8b\x7b\xc1\xde\x07\x7b\x4c\xc8\x2c\xce\xbf\x55\xd4\xc7\x48\xa6\x3b\xa9\xc6\xd3\x6e\xbb\x83\x0c\x2e\x2d\x4a\x7b\xc2\x37\x8a\x27\x38\xa6\xc3\xc1\x59\x47\x2c\xd8\x67\xc1\x4c\x60\x22\xf5\x79\x36\x27\x75\xd6\x87\x70\xcc\xd3\xa5\xb5\xaa\xe6\x18\x06\x32\xa8\x7a\x32\x07\xc2\x68\x98\x29\x36\xd0\xdc\x04\xf6\xa7\x82\xe8\x8c\x77\xff\x90\xe2\x8c\x08\x6c\xa9\x5d\x9c\xdf\xb1\x25\xcc\x21\xfb\x4e\x29\xfa\x10\x3a\x55\x3c\x37\x4f\xa2\x74\x67\x84\xc9\x1b\x4b\x0a\x51\xec\xbd\x64\x68\x54\x95\x0b\xdc\xa2\x9f\x27\x4d\xaf\xc1\x91\xca\x6b\xdf\x1f\x1a\xe9\x6b\x76\x91\x30\x65\x11\xc7\x3d\x0c\x1e\xe8\x54\x6f\x30\x92\x0c\x41\x61\xdf\xec\x3a\x8f\xd2\xb1\x50\x3c\x18\x4b\x0d\xe6\xc1\xd9\x41\xe5\xe6\x37\x28\x09\xe7\x10\x68\x42\xcb\xd0\x20\x83\x11\xb5\xda\x86\x71\x0a\x89\x3a\x84\xc3\xa5\x5e\x89\x57\xca\x76\x58\x0e\xde\x8b\x0a\x5a\xc3\xc8\xec\xbe\x66\x52\xaf\x3a\x62\x71\x87\xd3\x8f\x24\x33\x61\x36\x2c\xaf\x53\x40\x9e\xda\x25\x62\xb5\x3d\x47\x6b\xa3\xd1\xa8\x6d\x87\xab\xad\x11\xd3\xc0\x97\x5f\xae\xfd\x14\xfa\x9e\xe2\x06\xf5\x45\x9e\x1a\x50\x8c\x21\x6e\x34\x8d\xdf\x4c\x44\xc2\x65\xce\xcb\x56\x38\x62\x1f\x82\xaf\x56\xb6\xfd\x14\xec\xb1\xde\x54\x2b\x77\x40\x6a\xb4\x70\x03\xdb\xea\x4b\x3e\xdb\xae\x2d\x06\x7e\xf9\x55\xb7\x35\xca\xb6\xfd\x8b\xfd\xf9\xfc\x6b\xd0\x53\x03\x76\x5e\x13\xbc\xf2\xed\x1f\xd1\xb1\x78\xae\xd7\xb7\x91\xcc\x79\x08\x8f\x34\xe3\xbd\xff\x7a\x53\xad\x52\x21\xc4\xc7\x9b\xd7\xfd\xda\x76\x0d\xfc\x02\xa1\x95\x9f\x6e\x54\xf3\x7f\x5b\xb2\xf3\x45\xa1\x34\xfd\x11\x16\x37\x48\xd5\x77\xd7\xbe\x07\x7d\xf9\x37\x00\x00\xff\xff\x18\x6c\xbe\x80\x21\x05\x00\x00")

func templatesConnectionCacheTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesConnectionCacheTemplate,
		"templates/connection/cache.template",
	)
}

func templatesConnectionCacheTemplate() (*asset, error) {
	bytes, err := templatesConnectionCacheTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/connection/cache.template", size: 1313, mode: os.FileMode(420), modTime: time.Unix(1490288320, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesConnectionConnectTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x94\x4f\x6f\x1b\x37\x10\xc5\xcf\xdd\x4f\xf1\x90\x43\x2b\x05\xb2\x85\xe6\x58\xa0\x97\x3a\xc8\xa5\x49\xed\x43\x50\x20\x28\x7a\x18\x71\x67\x77\x59\x71\xc9\x2d\x39\xcc\x66\x6b\xf8\xbb\x17\x43\x6a\xf5\xa7\x46\x2f\x86\x25\x0d\x1f\xdf\xfc\xe6\x71\x26\x32\x47\xea\x19\x26\x78\xcf\x46\x6c\xf0\x4d\x63\xc7\x29\x44\xc1\xa6\x01\x80\xc9\x85\x1e\x6f\x7a\x2b\x43\x3e\xdc\x9b\x30\xee\x8f\x61\x24\xdf\xee\x27\x97\x7b\xeb\xef\x52\x7b\xbc\xeb\xc3\xbb\xbd\x0b\xfd\x9b\x66\xdb\x34\xfb\x3d\x1e\x72\x92\x30\x3e\x51\xa4\x31\xc1\x26\xcc\x03\x47\xc6\x12\x32\x64\x60\xb4\xfc\x95\x5d\x98\x38\x62\xb6\xce\xa1\xd3\x3f\xd6\x83\xfc\x02\x53\x0e\x62\x8a\xfa\xb3\x58\x4e\x3b\xcc\x83\x35\x43\x39\x3b\x87\xec\x5a\x78\xe6\x56\xef\x90\x80\x9c\x18\x21\x62\x0e\xf1\x88\xd9\xca\xa0\x2a\x0f\xb5\x8b\x7b\x3c\x7a\x06\x7f\xa3\x71\x72\x8c\xd1\xf6\x83\xe0\xc0\xf5\x0e\x67\xd9\x0b\x9c\x3d\x44\x8a\x96\x93\x4a\xa4\x3c\x69\xc3\xd6\xf7\x57\x77\xa3\x3b\x89\x5b\xdf\xeb\x8d\xe5\x0a\x6d\xe0\x95\x82\xba\x53\x5f\x3b\x1c\xb2\xa0\x0d\xfe\x07\xc1\x4c\x5e\xd4\xa4\x0b\x89\x61\xbb\x52\x13\xb9\x67\xcf\x91\x84\x8b\x4e\x05\xd8\xc8\x32\xf1\x2d\xb2\x24\x31\x1b\xc1\x73\xc1\xbf\xdf\xe3\x4b\xc8\xf1\x35\x1b\x1c\xd8\x85\xb9\x79\xa9\xc8\x6b\xdf\x4a\xbb\x58\xac\xc5\x26\xb4\x5c\xda\xb8\xe5\x2e\x01\x73\xb4\xea\x22\xa0\xcb\xce\x2d\xb0\xde\x8a\x25\x67\xff\x51\x46\x2d\x22\x4b\x8e\x1e\xa4\xca\x91\xa9\x5d\x56\xdc\x0f\xe7\x90\x20\x1c\xfe\x52\xd0\x4d\x97\xbd\x59\xbf\xdf\x98\x16\x6f\xdf\x93\xd0\x0e\x1a\x1a\x4d\xce\xfd\xc7\xd0\xf7\x1c\xb7\xd8\xbc\xbd\x1c\xde\x81\x63\x0c\x71\x7b\x6a\x51\xa3\x87\x9f\x7e\xc6\xf7\x97\x8a\xe7\x97\xdb\xe6\xb5\x11\x4d\xd1\xfa\xed\x67\x3a\x56\x88\x97\xd8\xa2\x25\xa1\x62\xbf\x98\xb7\x02\xeb\x25\x94\xa2\x57\xb6\xcf\x32\x03\xfb\xdd\x6d\xf7\x0b\x92\x90\xf0\x0e\x29\x9b\x01\x54\x79\x92\x91\x4c\x0e\x34\xd9\xeb\x0b\x4f\xea\x32\xd8\xd8\x62\xa2\x28\xcb\xaa\xfb\xc1\x7a\x72\x6e\xd9\x61\xa2\x94\x70\x20\x73\xfc\x8f\xd9\x1d\xbc\x75\x65\x34\x29\x1b\xc3\x29\xad\x27\x1f\x65\xe0\x38\xdb\xc4\xa5\xe2\x04\xaa\x14\x76\x64\x5d\x8e\xdc\xac\x95\x9f\x14\x41\xca\xb1\x8c\xf1\xf1\xb7\x8f\x5f\xca\x84\x14\xf9\x53\xb4\x5e\x9c\x2f\x2c\xce\x9f\xbb\x9a\xc6\xfe\xfa\xa1\x8d\x9c\x12\xf5\xfa\xcc\xb4\xb4\x0d\xf0\x41\x8a\x8a\x9a\xf5\x21\x8e\xe4\xd0\x97\x53\x3d\xc7\x7a\xf1\x29\x1a\xda\x49\x71\x78\xca\xdf\xef\xe4\x6c\xab\xc1\x2e\x6f\x9a\x7d\xf5\x75\x8b\x7e\xa6\x04\x13\x99\x84\x5b\x98\x10\x23\x1b\x71\x4b\xcd\xcf\xc6\xe0\x2a\x1e\xdb\xb3\xdc\x66\x8b\x3f\xfe\xac\x08\x9e\xff\x27\x10\xcd\x77\x27\x4b\x17\x33\xbf\xf2\x02\x13\xc6\x29\xda\xc4\xa9\xf4\xdb\x59\x76\x6d\x2a\x8f\x94\x5b\x05\x31\x2a\xbc\x3c\x81\x90\xbd\xfd\x3b\x33\xbe\x92\xcb\xf5\xad\x30\x99\x01\x36\x79\x21\x6f\x18\xa1\x03\x5d\xef\x46\x1d\xae\x16\xd5\xd5\xb2\xc3\xbb\x33\xc4\xcb\x82\x48\x34\xd6\x59\x6b\x28\xca\x83\x1e\xca\xee\x4a\x03\x45\xc6\x8f\x37\x31\x50\xf0\xca\x4c\x85\x75\x7b\x14\xf2\xfc\x4d\x56\xd9\xaa\xda\xda\xae\xe3\xa8\x5b\xe7\xa4\x58\x97\xa1\x8e\x8a\xae\x7e\xbc\x08\xdf\x5f\xb8\xea\x7b\xdc\x2a\x93\xcd\x56\x37\x8b\x2e\xb9\x33\xcb\xcf\x8f\xef\x1f\x41\x59\xc2\xdd\xca\x0b\xa1\xeb\xd6\xb2\x4a\xed\x0c\xf8\xf9\x19\xf7\x97\x21\xa9\xac\x82\x7e\x79\x39\x51\x7f\x72\x64\xd6\x45\x76\x3d\xf6\x0f\xd9\x97\x7f\x52\xe9\xf5\x13\xcb\x10\xda\x84\x5f\x74\x79\xfd\x1b\x00\x00\xff\xff\xc2\x92\x0a\x40\x7c\x06\x00\x00")

func templatesConnectionConnectTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesConnectionConnectTemplate,
		"templates/connection/connect.template",
	)
}

func templatesConnectionConnectTemplate() (*asset, error) {
	bytes, err := templatesConnectionConnectTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/connection/connect.template", size: 1660, mode: os.FileMode(420), modTime: time.Unix(1490219988, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesConnectionConnectionTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\x41\x4f\xdc\x4e\x0c\xc5\xef\xfb\x29\x9e\x10\xc7\xfd\x87\xc3\xff\x86\xd4\x03\x62\x11\x42\x20\x40\xed\x4a\x55\x6f\x78\x33\x26\x19\x98\xd8\xd1\x8c\xb3\xdb\x15\xca\x77\xaf\x66\x92\x6d\xd3\xf6\xda\xe3\x78\xec\xf7\x6c\xff\xdc\x53\xfd\x4e\x0d\xa3\x56\x11\xae\xcd\xab\xac\x56\x17\x17\xb8\x56\xc7\x68\x58\x38\x92\xb1\xc3\xee\x08\x6b\x19\xf7\xda\x91\x38\xdc\x2a\xbe\x6c\xee\x71\x3b\x7d\x6b\xac\xb0\x79\xc2\xe3\xd3\x16\x37\x9b\xbb\xed\x5c\x7e\x52\x83\x4f\xa5\xf4\x97\x3e\x74\xf7\xc6\xb5\xc1\x5a\xb2\xf2\xe5\x78\xcf\x41\x7b\x8e\x38\xf8\x10\x40\xce\xc1\x14\x87\x96\x05\x5e\x8c\x9b\x48\xe6\xa5\x01\xc1\x5a\x1f\x1d\x7a\x8a\x76\xcc\x26\x57\xcf\x77\x15\xae\x9c\x03\xc9\x11\xef\x5e\x1c\xf4\x15\x41\xa5\x41\xf0\x7b\x76\xd0\x88\x7a\x48\xa6\x1d\xfe\x3f\x95\xfd\xdd\x46\xca\x1e\x9a\xa5\x13\x92\xc5\xa1\xb6\x2a\x6b\xdf\x50\xdd\xc2\x4b\x32\x92\x9a\xb3\xee\x22\x01\x5f\xef\x1e\x1e\xb0\x63\xa4\x96\x22\x3b\x34\x41\x77\x14\xc2\x71\x8d\xa4\x25\x3c\x44\xce\x13\xe4\x41\xba\xc1\xf8\x3b\xa7\xdc\x0b\x99\x76\xbe\xce\xe2\x79\x56\xca\x3d\xa4\x3c\x65\x64\x08\xb3\x63\x57\xad\xec\xd8\xf3\x72\x77\xb3\xdf\xc7\x0a\x00\xae\xcb\x2c\xcf\x14\xa9\x4b\x25\xf0\xf1\xf1\x1f\x22\x49\xc3\x38\x97\x35\xce\x7b\x5c\x7e\x42\xb5\xa8\x1e\xc7\x92\x36\xa5\xe2\xbc\xaf\x1e\xa9\x63\x8c\xe3\xfc\xda\x66\xb3\x71\xc4\xcb\x5b\x52\xb9\x3c\x9b\x82\x9f\xe9\x30\x67\x9d\xbd\xfc\x34\x61\x71\x59\x6c\x2c\x68\x37\x64\x74\x82\x3a\xf7\x57\x48\xb6\x1a\xdc\x14\x8d\x74\x58\xee\xb9\x2f\x1d\xe3\x35\x6a\x57\xbe\xbd\xd4\xda\x65\xa0\x1d\xa7\x44\x0d\x67\xd1\x6d\xde\x6e\xa1\xbf\x63\xd8\x10\x85\xdd\xc4\x85\x10\x99\xc2\x52\x6e\x3e\xc5\x7c\x80\x71\x10\xf3\x1d\x57\xf8\xa6\x03\x52\xab\x43\x70\x10\xde\x73\x84\xf3\x91\x6b\x0b\xe5\x4c\xf2\x72\x33\x8e\x21\xf1\x44\x71\x02\xbf\x86\x4a\x98\xb4\x22\x37\x43\xa0\xb8\x70\xa9\x70\x95\x90\x86\xba\x5d\x83\xf6\xea\x5d\x66\x59\x6e\x50\x8e\xe8\x63\xe6\x67\x9e\x53\x56\xf5\x36\x63\x2b\x7b\xf9\x0d\xd8\x82\xcf\x9f\x6c\xfe\x39\x9a\x1f\x01\x00\x00\xff\xff\x86\xbf\x40\xa5\xc7\x03\x00\x00")

func templatesConnectionConnectionTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesConnectionConnectionTemplate,
		"templates/connection/connection.template",
	)
}

func templatesConnectionConnectionTemplate() (*asset, error) {
	bytes, err := templatesConnectionConnectionTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/connection/connection.template", size: 967, mode: os.FileMode(420), modTime: time.Unix(1490288327, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServerHttpHandler_xTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x56\x4d\x6f\xdb\x38\x10\x3d\x4b\xbf\x62\x56\xc0\x76\xa5\xc2\x95\xd0\x1e\xbd\x08\x16\x6d\x12\xb4\x41\xdb\x24\x48\xbc\xed\xb1\xa0\xa9\x91\xc4\x35\xc5\xd1\x92\xa3\x68\x8d\xc0\xff\x7d\x41\x52\x76\x82\xc2\xfd\xbc\x34\xa7\x88\x1c\xce\x7b\x43\xbe\x37\xe3\x41\xc8\x8d\x68\x11\x3a\xe6\x21\x4d\xab\x0a\x4e\xa9\x46\x68\xd1\xa0\x15\x8c\x35\xac\xb7\xc0\x1d\xc2\x5b\xea\x85\xa9\xe1\x35\xc1\xed\xd9\x5b\x78\x1d\xb7\xc9\x96\x70\x76\x05\x97\x57\x2b\x38\x3f\xbb\x58\xa5\xa9\xea\x07\xb2\x0c\x79\x9a\x64\x4d\xcf\x59\x9a\x64\x68\x24\xd5\xca\xb4\xd5\x3f\x8e\x4c\x96\x02\x00\x64\x8a\x2a\x45\x23\x2b\x3d\x7f\x1b\xe4\xca\xc3\x67\x69\xfc\xbe\xbf\x87\xf2\x3a\xd2\xba\x21\x62\xd8\xed\x2a\x21\x59\x91\x71\xd9\x17\x03\x24\x19\x83\x21\x28\xc6\x0c\x9a\x5a\xc8\x5a\xc5\xdd\xb8\x2e\x25\xf5\xd5\x26\x14\x50\x0d\x7a\x6c\x95\x79\xe6\xea\xcd\xb3\x96\x5e\x54\x9a\xda\x39\xe7\x37\x43\x7b\x74\x4e\xb4\x98\xa5\x45\xb8\x26\xcf\xe1\x52\xf4\x08\xbb\xdd\x1b\x61\x6a\x8d\x16\x94\x03\x01\x5d\xfc\x48\x79\x3b\xe0\xb1\x20\xc7\x76\x94\x0c\xf7\x69\x22\xe1\xe9\x03\xeb\xf2\x54\xc8\x0e\xd3\x5d\xc8\x7d\x89\xd3\x91\x93\x16\x79\xb4\xc6\x63\x18\x9c\x8e\xa4\x4e\x9b\xd1\xc8\xe3\x67\xf3\x23\x58\x05\x3c\x3d\x02\x72\x9f\x26\x11\x07\x9e\xec\x77\x0f\x9b\xf7\x69\x92\xc8\x25\xc8\x45\x9a\xec\x66\xa6\xb7\x68\xef\xf0\xcd\x6a\x75\x3d\xd7\xed\x82\x58\x2c\xfe\x3b\xa2\x63\x17\x19\xe5\xdd\x31\xa4\xe2\xe1\x6c\x3e\x05\xf5\x95\x37\xe8\x06\x32\x0e\x3f\x5a\xc5\x68\x17\x60\xe1\xe9\xbc\x1e\xd2\x15\x91\x5c\x8c\x81\xe5\x09\xcc\x2f\x72\x38\xe7\xf9\xdd\xb2\xe0\xd1\x2d\x21\xa3\x4d\x16\x78\x26\xeb\x05\xa0\xb5\x3e\x3e\x8a\xae\xbc\x41\x51\xbf\xd4\x3a\xb7\xe5\x2b\xaa\xb7\x45\x9a\x54\x15\xac\xae\xce\xae\x60\x74\x08\x02\xb4\xea\x15\x83\x45\x51\xa3\x05\x26\x18\x2c\xde\xa1\xf1\x2b\x8e\x46\x2b\x11\x04\xb3\x90\x1b\xf7\x57\x9a\xa8\x26\xa4\xfe\xed\x04\x8c\xd2\x9e\x5d\x32\x95\x81\xfc\x9b\x70\x3a\x0f\xec\x23\xa3\x0b\xc3\x68\x8d\xd0\xa1\x68\x7b\x6e\x2d\xd9\x22\x4d\x12\x8b\x83\xde\x7e\x54\xdc\x85\x95\x7c\x5f\xdd\x02\xa6\xc0\x3a\x86\xf8\xe7\x08\xa5\x44\xc6\xe5\xa9\x26\x87\x79\x11\xf0\x6d\xf9\x1e\xb9\xa3\xda\x93\xc8\xae\xaf\x6e\x57\xd9\xd7\x79\xc4\xe8\x4b\xe2\x97\x5a\xd3\x84\xf5\xb7\x48\x34\x3d\x97\x61\xb9\xc9\xb3\x3e\x22\xfd\xee\xbc\xd2\x47\xe3\xc6\xc1\xbb\x1d\x6b\x68\xc8\x42\x74\x0b\xec\x8d\xba\x38\x30\x2b\x3e\x2b\xa2\xf7\x4f\xf1\x64\xff\x76\x1f\x9e\xdf\xef\x0e\x17\xb9\x3c\x01\xdf\x26\xca\xbf\x4d\x2f\xac\xeb\x84\xce\xd7\x0b\xe8\x8b\x3f\xbf\xfb\x96\x5f\x89\x7a\x2f\x96\x1f\xbe\xdc\xaa\x82\x03\x6e\x50\xf1\x9a\xea\x2d\x28\xc3\x14\x35\xad\xda\x8e\x67\xf7\x86\xe0\x8f\x08\x92\x46\x5d\x83\xb8\x23\x55\x87\x98\x17\x80\xff\x49\x74\x2e\x54\x01\xfb\x5c\x52\x68\xed\x40\x19\xe8\xd0\x22\x4c\x8a\x3b\xaf\x32\x62\xa0\x06\xdc\xa4\x58\x76\xcf\xa4\x70\xca\xb4\x40\x06\x7c\xdb\x70\x21\xff\x7a\x64\x7f\x88\x3b\xe5\x40\x0a\x4f\xdb\x43\x0c\x68\x1b\xb2\xbd\x30\x12\xa1\x15\xca\xf8\xa7\x30\xc4\xc0\x9d\x60\x68\x2d\x0a\x5e\x80\x6f\xd4\x8a\xff\x70\xa0\x3d\x97\x76\xdf\xab\x41\xfa\xce\xce\x04\xbd\x50\x86\x85\x32\x01\x86\x09\x6a\x02\xc5\x11\x68\x12\xdb\xf2\xc1\x10\xaa\x81\x09\xc1\x8d\x6e\x40\x39\x07\x84\x1e\xb7\x26\x66\x8d\x06\xe5\x66\x01\x83\xa5\x46\x69\xf4\x19\x3c\xae\x9b\xc4\x00\x6b\x21\x37\x30\xdf\xdb\x43\x85\x08\x62\x18\x2c\x09\xd9\xa5\x89\x32\xc3\xc8\x41\x08\xb3\x60\xca\x47\x1d\xe2\xc2\x6f\x7e\x55\x16\x7d\x34\x42\x08\x5c\x40\x48\xf6\x03\x2a\xf9\x59\x2f\xc2\xfc\xf7\x48\x34\xb2\x0e\x45\x3c\xea\xad\x67\x82\xc5\xf7\x70\x3f\x3d\x1c\x59\x80\xac\x7f\x0d\x7b\xed\xe9\xf9\x49\x59\x5e\xe2\xf4\x6a\x6c\x1a\xb4\x58\xbf\xa3\xb6\x45\x9b\xc7\x03\xbe\xb0\x43\xff\xec\x4a\x59\xbe\x46\xce\x65\xbd\x00\x1d\xf7\x3f\xef\x80\x7b\x90\x1f\x67\x1f\xe9\x96\xef\xa8\x85\x13\xd0\xe5\x2d\x5b\x65\xda\xfc\x67\x2a\xf3\xff\x46\x3f\x9f\x0b\xd9\xed\x87\x11\x18\xc4\x7a\x3f\x3c\x75\xa8\xd1\x4b\x54\x8a\x81\x47\x8b\xd1\x2f\x34\xf2\x30\xf2\x83\xfe\x7b\xba\xc3\x28\x7b\x26\x10\xe0\xb6\x46\x96\xd7\x44\x3a\x28\xbd\xb5\x62\x0d\x64\x10\x1a\x4b\xbd\x97\xba\x45\x40\x0f\xc8\xaa\x0f\x36\x73\xe2\x0e\xbd\xa5\x85\xd6\x24\xfd\xb8\xa8\x2a\x6f\xd5\xb0\x27\xcc\xd6\x1f\xf5\x53\xc6\x1b\xdf\x63\x2c\xe1\x8c\x82\x95\x5b\x02\x51\x87\x65\x65\x1e\x61\xfa\xc6\x41\x23\xc3\x68\x6a\xb4\x8e\x85\x09\x21\x1d\x4d\x1e\x7b\x1b\xb2\x4f\x64\x37\x81\x5b\x58\xa5\x83\x37\x3d\x19\x44\xff\x58\x73\x62\x8f\x3d\x29\xad\x7d\xbb\x1e\x85\xd6\x5b\xe8\xc5\xc6\x0f\xbf\x5a\x05\x11\xf8\xee\xb2\x2c\xe0\xc2\x5f\x0a\x5b\x25\x37\x5b\x50\xca\xca\xb9\x35\x74\x82\x1d\x4c\xdd\xf6\x51\x47\x08\xd7\xe5\x91\x7d\x01\xf1\xf3\xf2\x3c\x4d\xa2\xb9\xbd\x76\x8e\xd8\xfc\x65\x58\xf2\x5e\x89\xf7\x7e\xd0\x59\x8c\x2d\x6f\x46\x93\x47\xfd\xa9\xe8\x73\x5d\xfc\x82\x91\xfb\x65\x61\x1e\xb6\xae\x02\x7d\x38\x39\xe8\x67\xb2\x62\x18\xd0\x7e\x3e\xe8\xd2\x24\xf1\xd6\x5f\xc2\x01\x33\x4d\x92\xd5\x76\xc0\x25\x64\xb1\xe6\x4f\x8e\x85\x65\xff\xc3\x25\xf9\x80\xd6\x29\x32\x4b\xc8\xee\x9e\x3f\xfc\x92\xf9\x04\x73\x3f\x79\x3f\x77\x93\x19\xaa\x80\xf0\x30\x5e\x83\x71\x20\x74\xfe\x99\x27\x04\x29\x4c\xe8\xef\x4d\x7c\x2c\xb4\xd6\x2b\xf1\x8b\x77\x76\xf5\xb6\x38\xec\xe6\xeb\x22\xdd\xfd\x1f\x00\x00\xff\xff\xac\x9d\x2c\x68\x1f\x0c\x00\x00")

func templatesServerHttpHandler_xTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerHttpHandler_xTemplate,
		"templates/server/http/handler_x.template",
	)
}

func templatesServerHttpHandler_xTemplate() (*asset, error) {
	bytes, err := templatesServerHttpHandler_xTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/http/handler_x.template", size: 3103, mode: os.FileMode(420), modTime: time.Unix(1490757907, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServerHttpServerTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\x4d\x6f\xe3\x36\x14\x3c\x93\xbf\x62\x20\x04\x85\x14\xa8\x52\xdb\x63\xb0\x41\xb1\x5d\x2f\x36\xc5\x36\x71\x60\x1b\xd8\x63\x41\x4b\xcf\x12\x77\x25\x52\xe5\x47\x65\x43\xd0\x7f\x2f\x48\x25\xb6\xae\xf5\xc9\xe2\x70\xe6\xf1\xcd\x7b\x33\x88\xea\x87\x68\x08\xad\x73\x03\xe7\x65\x89\x4f\xba\x26\x34\xa4\xc8\x08\x47\x35\x8e\x17\xb8\x96\xf0\x55\xf7\x42\xd5\xf8\xa2\xb1\xdf\x7c\xc5\x97\x05\xd6\xa6\xc0\x66\x8b\x97\xed\x01\x9f\x37\x7f\x1e\x38\x97\xfd\xa0\x8d\x43\xca\x59\xa2\xc8\x95\x41\x33\xe1\x2c\x71\xb2\xa7\x84\x73\x96\x4c\x13\x8a\xd7\xa5\xe0\x4e\x6b\x87\x79\x2e\x2b\xad\x14\x55\x4e\x6a\x95\xf0\x2c\x3e\xe0\x85\xc6\x3d\x99\x7f\xc9\xc0\x90\xf3\x46\x59\x08\x28\x1a\xe3\x0b\x61\x23\xc2\x4f\x5e\x55\xb7\x8b\x69\x85\xfb\x9b\x4e\xf1\x49\x54\x2d\x65\x48\xef\x03\xa3\x58\xae\xe4\x20\x63\xb4\xc9\x30\x71\x56\x96\x38\x6c\x37\x5b\x90\xa8\x5a\x0c\x9d\x6f\xa4\x82\x22\xaa\x43\x21\xaf\xe4\x3f\x9e\x10\xdb\x70\x1a\x74\x1e\xb4\xa5\x48\x39\x7a\x07\xa9\x1c\x19\x25\xba\xee\x92\xa3\x12\x0a\xa2\xeb\xe0\x2d\x41\xa0\xd2\x7d\xaf\x55\xe4\x71\x26\xea\xda\xe0\xe1\x11\xc9\x43\x68\xf8\xe9\x70\x78\x2d\x5e\x83\xe0\x3c\x27\xb7\xea\xbd\xf8\x41\xc1\x5a\x4b\xa8\xb4\x3a\xc9\xc6\x1b\x71\xec\x08\x56\xf7\xd4\xea\x91\x33\x43\xa2\x3e\xc8\x9e\xb4\x77\x41\x2c\x98\x58\xec\xa9\xd2\xaa\xc6\xfd\xf2\xb5\xf1\x46\x84\x8e\xd3\x6b\x99\xdd\x8d\x33\xcf\x19\x67\xa3\x91\x8e\xfe\xaf\xc8\xb7\x15\x29\xa8\x70\xd6\xfb\x73\x60\x47\x3f\xdf\x5d\x7f\xf6\xe7\x34\xe3\x00\x50\x96\xd0\x8a\x70\xd2\x66\xb1\x54\xc4\x31\x44\x68\x9a\x7e\x86\x11\xaa\x21\xdc\xa9\x1c\x77\x43\x50\x29\x3e\x46\xdc\x62\x9e\xe3\x9d\xde\x9f\x8b\x27\xa1\xea\x8e\xd2\xa4\x5c\xb8\xb6\x9c\x26\xdc\x0d\xc5\x4e\x8c\x2f\xa2\xa7\x60\x5c\x1e\xc6\xbd\x9c\x86\xa3\x79\x5e\x28\x26\xad\xb2\xec\x5a\x8a\x54\x1d\x54\x39\xb3\xa1\xd0\x4f\xab\xf9\x4f\x9c\xb1\x8f\x75\x6d\x1e\x70\xfb\x85\x31\xe5\x9c\xb1\x37\xa5\x2b\xd4\xfb\x73\x38\x5e\x79\x19\xa1\xd5\x3c\x02\xbc\x76\x29\xe0\x6b\xab\x03\xfe\x2c\xce\x4f\x24\x6a\x32\x7f\x5c\x1c\xd9\x07\xfc\x8a\x0f\x1f\xf0\xdb\x2f\x39\x67\x73\x98\x6d\xd8\x6c\xd8\x1c\x4a\x76\x7c\x8e\x7b\xff\x97\x6c\x5a\x87\xd1\x88\x61\x20\x03\x61\xb4\x57\xf5\x5b\x04\xa4\x6a\x20\xd4\xb2\xc2\x18\xa5\x6b\x63\x26\x0d\xd9\x41\x2b\x4b\xd0\xc7\xef\x54\x39\xe8\x90\x99\x98\xe3\x18\x0f\x43\x43\x77\xf9\x26\x5d\xfb\x39\xd0\xd2\xeb\xed\x9e\xac\x15\x0d\x15\xbb\xb7\x83\x1c\x4b\xb6\xae\x07\xb1\xb3\x25\x31\xab\xd4\xbc\xf3\x8b\x28\x87\xc7\x00\x2d\xff\xd3\x6c\x85\xee\x9d\x70\xde\xe2\x11\x49\xa4\x26\x9c\x1d\x73\xfc\x1d\xc6\xf1\xdd\x6a\x55\x3c\x0b\x63\x5b\xd1\x5d\x5f\x93\x85\xed\x39\xb4\x64\x08\xd2\x42\x69\xd7\x86\x5e\x47\x8a\xf1\xaa\x35\xe4\x09\xae\x95\x16\x27\x21\x3b\xfb\x3b\x67\xe3\xb2\x9d\xe9\x31\xe3\xf3\x7f\x01\x00\x00\xff\xff\x5a\x40\xdf\x45\xbb\x04\x00\x00")

func templatesServerHttpServerTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerHttpServerTemplate,
		"templates/server/http/server.template",
	)
}

func templatesServerHttpServerTemplate() (*asset, error) {
	bytes, err := templatesServerHttpServerTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/http/server.template", size: 1211, mode: os.FileMode(420), modTime: time.Unix(1490288336, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTriggersTrigger_xTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x4d\x6f\xe3\x36\x10\x3d\x5b\xbf\x62\x6a\xa4\x85\xbc\x90\x65\xb4\x47\x77\x73\xaa\x83\x20\xd8\x6c\x52\x64\x83\xf6\xba\xb4\x34\x92\xb9\xa1\x38\x2c\x49\xc5\x75\x0d\xfd\xf7\x82\x1f\xf2\xc7\x46\xb1\x83\x00\x9b\x43\x40\x73\x86\xc3\x37\x6f\xde\x0c\xa5\x58\xf1\xc4\x6a\x04\xab\x79\x5d\xa3\x36\x49\x32\x9b\xc1\x1f\x54\x22\xd4\x28\x51\x33\x8b\x25\x2c\x37\x60\x57\x08\x9f\xa8\x61\xb2\x84\x6b\x82\x2f\x8b\x4f\x70\x1d\xcc\xa4\x73\x58\xdc\xc3\xdd\xfd\x23\x5c\x2d\x6e\x1e\x93\x84\x37\x8a\xb4\x85\x34\x01\x00\x50\x82\x6a\x18\xd7\xdc\xae\xda\x65\x5e\x50\x33\x7b\xf2\x31\x66\x4a\xb4\x35\x97\x53\x53\x3e\x4d\x6b\xfa\x6d\x26\xa8\x1e\x7b\xff\xf3\xae\x25\x37\x8a\xd9\x62\x85\xfa\xad\x27\x1a\x34\x86\xd5\x38\x4e\x26\x49\xb2\xdd\xc2\x85\x64\x0d\xc2\xfc\x12\xf2\x3b\xb7\xe8\xba\x64\xbb\x9d\x82\x66\xb2\x46\xb8\x90\x19\x5c\x28\x6f\xbc\x91\xaa\xb5\xbd\x95\x57\x70\xa1\xf2\x2b\xd9\x36\xb7\xdc\xa2\x66\xc2\x19\x66\x33\x08\x4e\x6e\xdf\x1c\x46\xe1\x19\x5c\xf8\x2b\x06\x0f\xed\x30\x74\xdd\x63\x20\xdd\x87\x71\xdb\xd8\x63\x02\x6e\x80\x49\x40\xd9\x36\xb1\x06\xcf\x4c\xb4\x98\x14\x24\x8d\xdd\x45\x38\x15\xe0\x12\xc2\xef\x78\xf7\x5f\xee\x78\x9f\x0e\xca\xf2\xf4\xf2\x05\x1b\xf7\xad\x7d\x03\x1d\xd1\xeb\x9d\x7c\xec\xb2\x09\x61\xde\xc1\x07\x9c\x0c\xf1\x6e\x46\x22\x48\x1f\xe8\x98\x72\x28\xb1\xe2\x12\x8d\x6f\x0f\xee\x77\x2a\xd2\xfe\x57\x7f\x60\x8f\x29\xb1\x1b\x35\xb4\x1f\x22\x19\xab\xdb\xc2\xc2\xd6\x8b\xfa\xb0\x06\x70\x2c\xc9\xae\x8b\x1e\x8e\xcc\x3e\xb5\xf0\xeb\xd1\xc5\xef\x3a\xf8\xfa\xcd\x90\x9c\x8f\xc3\xe6\x03\x5b\x47\xaf\xf1\xd7\x5d\xec\x98\xd8\x2b\xa9\xc5\x32\x1e\xe6\x46\x61\xeb\xfb\xe4\xce\xe6\x16\x43\xbd\x21\xb9\xbd\xc2\x7e\x50\x7a\x7b\x50\xc0\xfa\x69\xf7\x1a\xec\x63\xc0\xff\xb4\xd8\x22\x14\x2b\x26\xe1\xc3\x6b\x29\x7a\xc7\xfd\x6c\x3a\x58\xe6\x8b\xdd\xd2\x3b\x35\x68\x19\xc4\x99\x94\xc7\x18\x57\xcf\x28\xed\x67\xb4\x2c\x62\xbe\xc3\xf5\x00\x28\x8d\xb6\xd5\xd2\x00\x03\x89\x6b\xd8\x6e\xbf\xb7\x2b\x4d\x0a\xb5\xd8\x00\x97\xdc\x72\x26\xf8\x7f\x58\x82\x9b\xd8\x1a\x59\xb9\x01\x4b\xa0\x5b\x99\x27\x55\x2b\x8b\xe1\x1b\xd2\x72\x18\x77\x76\x1a\xf4\x64\x88\x96\xc8\x5d\xc0\x0c\xbf\xbc\x74\x08\xf6\x1d\xbf\x73\x68\xd8\x13\xa6\xa7\x59\xce\xe0\xd7\x49\xb6\x3b\xb7\xc7\x3a\x87\x72\xbf\xed\xb0\xce\xfd\xff\xb0\xd7\x0b\xe1\x8b\x93\xc5\x9a\x0b\x01\xa6\x5d\x36\xdc\x02\x7b\x5d\xb0\x24\x2d\xc5\xa6\xb6\xa8\x25\x13\x01\x64\x06\xeb\x15\x2f\x56\xce\x22\x61\xd9\x56\x15\x6a\x03\xd1\x13\xff\x3d\xf4\x0c\x2c\xa7\x76\x28\x97\x89\x87\x92\x52\x08\x5e\xb1\x02\xb7\xdd\x24\xf2\x65\xf3\xa0\xb6\x8f\x53\xa0\x3c\xfd\xf0\x4a\x6f\x4e\x62\x4a\x0f\xc8\x62\x4a\x8a\x94\x1b\x90\xdc\x62\x03\x54\x55\x83\xd8\x2d\xc1\x12\x61\xc5\x64\x89\xe5\x7b\x50\xbb\xdb\xd2\xc1\x62\x47\xd6\x8e\x4a\xfe\x71\x1a\x73\xe9\xe9\xb7\xa4\x02\xd6\x42\x90\xc1\x13\xec\x86\x84\x34\x3a\x7d\x79\xa9\x7f\xa3\xa5\x81\x4a\x53\x03\xe8\x0e\x70\x59\xe7\x67\xf8\xb5\xa4\xd2\x9e\x52\x7f\x5d\x1a\xc1\x4c\x76\x68\x98\xb6\x2e\xa1\x5b\xea\x61\x2d\x05\x15\x4f\x99\x6f\x16\x2e\x6b\x68\xa5\xe5\xc2\xf5\x1a\x17\xbd\xf2\xdd\x2b\xa4\xb1\x40\xfe\x8c\xa5\xeb\x09\x26\x9d\xe3\xcb\x44\x60\xcd\x4c\xb8\xb6\x3c\x87\xf3\x00\x45\x2a\xfc\xe7\x52\x7e\x4b\xc1\x88\x5a\x53\xdf\x46\x95\x5f\x8d\xdc\x32\x8e\xe2\xf9\x25\xd8\x3c\x54\x64\xa7\x7c\x5e\xf5\xd6\xcb\x4b\x8f\x7b\xdf\x63\xee\x6f\x36\x83\xc7\x55\x18\x64\x12\xc5\x01\xc8\x0c\xd6\x08\x35\x59\xff\xc4\x36\xca\x6e\xa6\x61\x7f\xea\xb8\xc8\xc0\x90\xb3\x2f\x19\x17\x2e\x3c\xac\xb9\x5d\x81\x24\xe0\xc6\xb4\x68\x8e\x6e\x88\xa5\x97\x5c\xec\xb6\xbb\x64\x6f\x34\x8a\xa4\xf1\x1f\x02\x43\xa3\xe4\x18\xac\x9b\xf6\x73\x18\x8f\x33\x07\xfb\x6f\x84\x92\x97\x20\xc9\x82\x41\xeb\x19\xf7\x93\x9b\x4b\xbf\x76\x9f\xa3\x4b\xac\x48\x63\x06\x06\xb1\xf1\x3d\x49\x52\x6c\x9c\xde\xfd\x9b\x85\xc6\xba\x52\x91\x06\x81\x35\x2b\x36\x20\x11\xcb\x63\xec\x37\x8b\x53\xd7\xdd\x2c\x5e\x5e\x76\x74\xfc\x5a\x53\xab\x4e\xc7\x88\x2e\x67\x02\x85\x5e\x9a\xc7\x4a\x66\x47\xb6\xcf\x7e\xb4\xd9\xdc\x0f\x37\xf0\x1f\xea\x6a\x13\x05\x58\x50\xe3\x52\xf4\x93\xda\x12\x28\x66\x0c\xb8\x21\x27\xc8\x69\x94\xfa\x67\xbc\xa6\xe0\xe5\xf9\x3f\xa8\xd2\x68\xc4\x2b\x27\xb9\x20\xac\x83\x67\xc0\xcf\xaa\xbe\x76\x93\xdf\xbd\xcf\x4f\xbd\xbc\x46\xa3\x91\x93\xec\x9f\x9a\x4b\x5b\xa5\xe3\x07\xd7\x1c\xf8\x8c\x65\x14\xaf\x41\xe9\x7b\x29\x3e\xb7\xfd\xb5\x73\xf8\xd9\x8c\x33\xe7\x33\x71\x11\xa2\x6a\x50\xeb\x64\x34\xea\x92\x51\x97\x74\xff\x07\x00\x00\xff\xff\xad\x9a\x08\x24\x96\x0c\x00\x00")

func templatesTriggersTrigger_xTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesTriggersTrigger_xTemplate,
		"templates/triggers/trigger_x.template",
	)
}

func templatesTriggersTrigger_xTemplate() (*asset, error) {
	bytes, err := templatesTriggersTrigger_xTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/triggers/trigger_x.template", size: 3222, mode: os.FileMode(420), modTime: time.Unix(1490726192, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTriggersTrigger_x_runTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x54\x4d\x6b\xdb\x40\x10\xbd\xeb\x57\x3c\x7c\x28\x52\x70\xa4\xd0\x63\x20\x85\x92\x53\x20\x4d\x42\x1a\x0a\xa1\xf4\xb0\x91\xc6\xf2\xe2\xd5\x8c\xd8\x8f\x14\x63\xf4\xdf\xcb\xae\x24\xd7\x21\x89\x7b\x29\x14\xea\x83\xd1\x6a\xe6\xcd\xc7\x7b\x6f\xd5\xab\x7a\xa3\x5a\x82\xb7\xba\x6d\xc9\xba\x2c\xd3\x5d\x2f\xd6\x23\xcf\x00\xa0\x37\xd2\x62\xd1\x6a\xbf\x0e\x4f\x65\x2d\x5d\xb5\x91\x4e\x71\x53\xf5\x26\xb4\x9a\x4f\x5d\xb3\x39\x6d\xe5\x63\x65\xa4\x5d\xa4\xfc\xc5\x6e\x87\xf2\x6e\xac\x79\x2f\xe2\x31\x0c\x55\x2d\xcc\x54\x7b\x2d\xbc\xc8\x8a\x2c\xab\x2a\x7c\x53\x46\x37\xca\x13\x7e\x6a\x63\xf0\x3c\x9f\xfc\x9a\xa0\xb9\x0f\x1e\xda\xa1\xb7\xd2\x93\x35\x5b\x38\xf2\xa1\x2f\xb3\x55\xe0\x1a\xb9\xc6\x49\xec\x70\xa3\x3a\xc2\x30\x3c\x8c\x43\x5f\x45\x4c\xb1\xaf\x9a\x17\xf8\xfe\x83\xac\x15\x8b\x5d\x1a\x2a\x3d\x3b\x9c\x5f\xa0\x53\x1b\xca\xa7\xe0\x12\x67\x45\x0a\xa7\xbf\xaa\xc2\x65\x70\x5e\xba\x79\x1c\x2d\x8c\x5a\x1a\xc2\x9a\x2c\xcd\x29\x9f\xfb\x9e\xb8\x99\x0b\x2a\x07\x26\x6a\xa8\xc9\xe6\xb8\x25\x1f\x2c\xa7\x93\x5e\xc1\x10\xe7\x63\x6a\x81\x4f\x38\x9b\xa6\x89\xbf\x31\x6f\xaa\x93\xde\x0e\xd9\xc1\x7b\xd6\x26\x1b\xfe\xc4\x94\x04\x7f\x94\x2a\x79\x8b\xaa\xdb\x04\xfa\x3f\xb9\xba\x0f\x0c\x1b\xd8\x25\x76\x26\x3f\x43\x71\x83\x27\x23\xf5\xc6\x21\xb0\xd7\xe6\x45\xb0\x17\x63\x34\xb7\x91\xc3\x5a\xba\xde\x90\x27\x88\x9d\x5b\x8d\x34\xfa\xb7\x68\x2c\x62\xb3\x3c\x1a\x1b\x27\xbf\xed\x5d\x5e\xee\x1f\x97\x93\x91\xf7\xd8\x97\x66\x5d\x22\xde\xab\x78\xb9\xca\x6b\x19\x0b\x1e\x8a\x50\x55\xf8\xa2\x36\x04\x17\x2c\xc1\x0b\x6e\x6f\xae\x1f\x11\x1c\x45\x54\x79\x67\x35\x7b\xc3\x69\xb3\xfd\x79\x15\xd3\x62\x4d\xc5\x5b\xd4\xa3\x38\x1d\x39\xa7\x5a\x72\xcb\x94\xda\x08\x58\x7c\xaa\x12\x29\x60\xb1\x9d\x32\x68\x13\xaa\x25\x9b\xfa\xae\xf6\x13\x4c\x53\x3c\x4a\xb0\x07\xca\x1e\x86\xbc\xee\xa8\xfc\x6a\x88\xfa\x3c\xad\x5a\x5e\xb1\x27\xfb\xac\x4c\x11\xa3\x57\x2b\x6c\x23\x76\x66\x3a\x9a\xc9\xa5\xe6\xb2\x82\x82\x8b\x38\xe8\x09\xb1\x44\xe0\x5a\xba\x8e\xd8\xc3\xaf\xb5\x83\xd1\x4c\xc7\x94\x7e\x20\xe7\x5f\x49\xbd\xc4\x53\xf0\x68\x84\x5c\x5a\x34\x89\x9e\x36\x17\x36\xdb\xd7\xc6\x98\xb5\x17\xa6\xb4\xcb\x71\xb9\x63\xc7\xbf\xab\x77\xfe\xee\xed\x5c\x8e\x5e\x28\xfe\xb1\x19\xa6\xef\xcb\xf9\x05\x3e\xbc\x37\xe9\x6e\xc8\x8e\x18\x65\x92\x4d\xa6\xa5\x92\x7c\xbf\x02\x00\x00\xff\xff\x2e\x80\x1f\x75\x6f\x06\x00\x00")

func templatesTriggersTrigger_x_runTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesTriggersTrigger_x_runTemplate,
		"templates/triggers/trigger_x_run.template",
	)
}

func templatesTriggersTrigger_x_runTemplate() (*asset, error) {
	bytes, err := templatesTriggersTrigger_x_runTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/triggers/trigger_x_run.template", size: 1647, mode: os.FileMode(420), modTime: time.Unix(1490283148, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTypesType_xTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x51\xbb\x6e\xf2\x30\x18\xdd\xfd\x14\x47\x28\xd3\x2f\xfe\x64\x47\x62\x2a\x14\x21\x2a\x90\x0a\xea\x8c\x89\xbf\xd0\xb4\x8e\x1d\xd9\x4e\x2b\x64\xe5\xdd\x2b\x1b\x03\x29\x6a\x97\x6e\xdf\xed\x5c\x7c\xdc\xf2\xf2\x9d\x1f\x09\xee\xd4\x92\x65\xac\x28\xf0\xa0\x05\xe1\x48\x8a\x0c\x77\x24\x70\x38\xc1\xbd\x12\x56\xba\xe1\x4a\x60\xa1\xb1\x9d\xad\xb0\x38\xaf\xb5\xc9\x31\xdb\x60\xbd\xd9\x61\x3e\x5b\xee\x18\xf3\x1e\xd9\x9a\x37\x84\xc9\x14\x79\x2c\xfa\x9e\x79\xff\x1f\x86\xab\x23\x21\x53\x63\x64\x6d\x5c\x3e\xd6\x24\x85\xbd\x5b\xd7\x63\x64\x11\x9b\xb5\xf9\x5c\x75\xcd\x53\xed\xc8\x70\x19\xae\x8a\x02\x57\xf2\xbe\x0f\x25\x5d\x04\x50\x5b\x70\x05\x52\x5d\x93\x3c\x7f\x70\xd9\x11\x2b\xb5\xb2\xee\x77\xd4\x14\xe7\x3e\x89\xbc\x04\xcc\xc5\x0f\x29\x71\xab\xc2\x30\xe9\x7f\x93\x44\xd9\x59\xa7\x9b\x18\xdd\x20\x30\x5d\x55\xd0\x55\x0c\xcd\xb6\x54\xb2\xb8\x1e\x62\xad\x33\x5d\xe9\xe0\x19\x00\xfc\x18\xce\x56\x1b\x47\xe2\x16\xd1\xe5\xb0\xae\x62\x32\xcd\x81\xc4\x6d\x9c\xa6\xeb\x4e\x4a\x7e\x90\x41\xe1\x9f\xf7\xc9\x77\x78\x61\x9b\xef\xc2\xdf\x2e\x95\x23\xa3\xb8\x0c\xcd\x00\x4c\xd2\x0e\xdb\x40\x94\x6c\xfe\x95\x19\xfb\x37\xab\xd5\x64\x74\xbe\x78\xe6\x9f\x89\x70\xb4\xbf\xbe\x23\x85\x7a\xd7\xf6\x5f\x01\x00\x00\xff\xff\x97\x7d\xb6\x0a\x8c\x02\x00\x00")

func templatesTypesType_xTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesTypesType_xTemplate,
		"templates/types/type_x.template",
	)
}

func templatesTypesType_xTemplate() (*asset, error) {
	bytes, err := templatesTypesType_xTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/types/type_x.template", size: 652, mode: os.FileMode(420), modTime: time.Unix(1490288348, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesVendorGitkeep = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func templatesVendorGitkeepBytes() ([]byte, error) {
	return bindataRead(
		_templatesVendorGitkeep,
		"templates/vendor/.gitkeep",
	)
}

func templatesVendorGitkeep() (*asset, error) {
	bytes, err := templatesVendorGitkeepBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/vendor/.gitkeep", size: 0, mode: os.FileMode(420), modTime: time.Unix(1490194044, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/Dockerfile.template": templatesDockerfileTemplate,
	"templates/Makefile.template": templatesMakefileTemplate,
	"templates/actions/action_x.template": templatesActionsAction_xTemplate,
	"templates/actions/action_x_run.template": templatesActionsAction_x_runTemplate,
	"templates/cmd/main.template": templatesCmdMainTemplate,
	"templates/connection/cache.template": templatesConnectionCacheTemplate,
	"templates/connection/connect.template": templatesConnectionConnectTemplate,
	"templates/connection/connection.template": templatesConnectionConnectionTemplate,
	"templates/server/http/handler_x.template": templatesServerHttpHandler_xTemplate,
	"templates/server/http/server.template": templatesServerHttpServerTemplate,
	"templates/triggers/trigger_x.template": templatesTriggersTrigger_xTemplate,
	"templates/triggers/trigger_x_run.template": templatesTriggersTrigger_x_runTemplate,
	"templates/types/type_x.template": templatesTypesType_xTemplate,
	"templates/vendor/.gitkeep": templatesVendorGitkeep,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"Dockerfile.template": &bintree{templatesDockerfileTemplate, map[string]*bintree{}},
		"Makefile.template": &bintree{templatesMakefileTemplate, map[string]*bintree{}},
		"actions": &bintree{nil, map[string]*bintree{
			"action_x.template": &bintree{templatesActionsAction_xTemplate, map[string]*bintree{}},
			"action_x_run.template": &bintree{templatesActionsAction_x_runTemplate, map[string]*bintree{}},
		}},
		"cmd": &bintree{nil, map[string]*bintree{
			"main.template": &bintree{templatesCmdMainTemplate, map[string]*bintree{}},
		}},
		"connection": &bintree{nil, map[string]*bintree{
			"cache.template": &bintree{templatesConnectionCacheTemplate, map[string]*bintree{}},
			"connect.template": &bintree{templatesConnectionConnectTemplate, map[string]*bintree{}},
			"connection.template": &bintree{templatesConnectionConnectionTemplate, map[string]*bintree{}},
		}},
		"server": &bintree{nil, map[string]*bintree{
			"http": &bintree{nil, map[string]*bintree{
				"handler_x.template": &bintree{templatesServerHttpHandler_xTemplate, map[string]*bintree{}},
				"server.template": &bintree{templatesServerHttpServerTemplate, map[string]*bintree{}},
			}},
		}},
		"triggers": &bintree{nil, map[string]*bintree{
			"trigger_x.template": &bintree{templatesTriggersTrigger_xTemplate, map[string]*bintree{}},
			"trigger_x_run.template": &bintree{templatesTriggersTrigger_x_runTemplate, map[string]*bintree{}},
		}},
		"types": &bintree{nil, map[string]*bintree{
			"type_x.template": &bintree{templatesTypesType_xTemplate, map[string]*bintree{}},
		}},
		"vendor": &bintree{nil, map[string]*bintree{
			".gitkeep": &bintree{templatesVendorGitkeep, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

