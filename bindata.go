// Code generated by go-bindata.
// sources:
// templates/Dockerfile.template
// templates/Makefile.template
// templates/actions/action_x.template
// templates/actions/action_x_run.template
// templates/cmd/main.template
// templates/connection/cache.template
// templates/connection/connect.template
// templates/connection/connection.template
// templates/server/http/handler_x.template
// templates/server/http/server.template
// templates/triggers/trigger_x.template
// templates/triggers/trigger_x_run.template
// templates/types/type_x.template
// templates/vendor/.gitkeep
// DO NOT EDIT!

package sdk

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesDockerfileTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\x4f\x4f\xc3\x20\x18\xc6\xef\x7c\x8a\x37\xbb\x17\x9c\x89\x17\x93\x1e\x66\x8a\xa6\x71\x83\x86\xd4\xa9\x31\x1e\xb0\x45\x42\x18\xd0\xd0\x7a\x98\x0d\xdf\xdd\x2c\xa5\x27\xf5\xc8\xc3\xf3\xe7\xf7\xde\x0b\x7e\x00\x1b\x9c\xf4\x3d\xd1\xa1\x18\x4e\x5f\xda\xf8\xdb\x2b\x7c\x0d\x68\xbf\xbb\xa3\x7b\x08\x51\x4b\x6f\xbe\xe5\x64\x82\x2f\x17\x63\xfe\x19\x7b\x5b\xea\x90\x1f\xd3\x79\x50\xe5\x92\x46\x88\xb2\x23\x3c\xf0\xed\xcd\x91\xb2\x8a\x0b\xfa\xd2\x50\x51\x1f\x28\x6b\xcb\x2d\x42\xe2\x89\x81\xb3\xbd\x89\x50\x0c\x40\xf2\xf2\x12\x1c\xc9\x87\xf1\x68\x57\x55\x80\x81\xe8\x40\xc6\xd8\x91\x79\x06\xdc\xc8\xce\x4a\xad\x44\x08\x13\xa4\x84\x9e\xb9\x78\xac\x6a\xf1\x9f\x25\x25\xb4\x74\xe4\x56\x3c\x0e\xaa\xc3\x67\xe9\x4e\xf0\x4b\xc9\x38\xd2\x2a\x58\xd9\x2f\x42\x74\x50\xc4\xcf\x75\xe0\x72\x4f\x2b\x5e\x1b\x5e\xb3\x16\xde\x36\x7f\x30\x93\x79\xc6\x4c\x3a\x95\xd2\xe6\x1d\xfd\x04\x00\x00\xff\xff\xc4\x7a\x21\x4f\x52\x01\x00\x00")

func templatesDockerfileTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesDockerfileTemplate,
		"templates/Dockerfile.template",
	)
}

func templatesDockerfileTemplate() (*asset, error) {
	bytes, err := templatesDockerfileTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/Dockerfile.template", size: 338, mode: os.FileMode(420), modTime: time.Unix(1490194044, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesMakefileTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x6d\x6f\xdb\x36\x10\xfe\xac\xfb\x15\x57\xcf\xb0\xad\xa0\x14\xe3\x60\xdd\x00\x6d\x79\x29\xe2\x20\x2d\x8a\xd9\x46\x92\xb6\x18\xa6\xb5\x60\x24\x5a\x22\x2c\x91\x02\x45\x39\x4b\xe2\xfc\xf7\x81\x7a\xf1\x4b\x9c\xb8\xfb\xb2\x2f\x86\x7d\x77\xbc\x7b\x9e\xbb\x87\x47\x7f\xb9\xb8\xba\xfe\x38\x19\x9f\x1e\x77\x07\x45\xc2\xd3\x14\x63\xcd\x73\xec\x7f\x5b\x70\x5d\x08\x25\x7d\xec\x63\x9e\x96\xb1\x90\x5e\x91\xf3\xd0\xbb\x67\x59\x8a\x4b\x2c\x78\x84\xfd\x82\xae\x82\x28\xed\xbb\x30\x7e\xff\xc7\xc5\x4e\x1e\xc9\x32\xbe\x3f\x49\x1d\x51\x65\xb8\x18\x9f\x4f\x46\x1f\xc7\x97\xfe\x2a\xcb\x2d\x2b\xf8\x2f\x3f\xa3\x08\x95\xf4\x72\x19\xe3\xd1\x09\x8d\xf8\x82\xca\x32\x5d\x67\x58\xd2\x65\x10\xd0\x65\xdc\xc7\x25\x1a\x8d\x24\xc2\x7e\x20\xfb\x2e\x7c\xb9\x18\x8f\x26\x57\x2f\x30\x93\x91\xd2\x3f\x22\x56\xc7\x54\xa8\xce\xbf\x8e\x4e\xb7\x00\x59\xc4\xd8\x1d\x4c\xbf\x8e\x5c\x17\xbe\x6f\xd3\xe6\x61\xa2\xb0\x3b\xb0\x46\x17\x97\xc8\xee\xe6\xd8\x7f\xc4\x5c\x0b\x69\xd0\xa8\x32\xcf\xb9\x1e\x14\xe5\x6d\x61\xf4\xa0\xdb\x3d\x7c\x3b\x7c\x3b\x74\x5d\x34\x2a\x55\x77\xdb\x8e\x23\xd7\xc5\xa7\xbe\x0b\x30\xfd\x74\x79\xdc\x1d\xd4\x5c\x5c\xd2\x64\x26\xd6\x52\x0d\xce\xf5\x0c\xd3\x5e\xfc\x00\x30\xba\xbe\x39\x3d\xa6\x73\x95\x31\x19\xd1\x9a\x5a\x41\x6f\x85\x04\xb8\xba\x98\x4e\x8e\x1f\x1f\xd1\x9b\xb2\x70\xce\x62\x7e\xa5\x94\xc1\xa7\x27\x10\x33\x19\xf1\x19\x5a\x37\x38\x55\x50\x93\x1e\xb8\x8c\xc4\x0c\x80\xa5\xa9\x5f\xf5\x1e\x45\xc6\x62\x8e\x79\x7d\x1e\x75\x29\x25\xd7\x00\x75\x15\x1f\x85\x2c\x0c\x4b\x53\x80\xdb\x52\xa4\x91\x0f\xce\x59\xd5\x86\xce\xe7\x42\xc8\x18\x35\xcf\x6d\x4b\x6c\x01\xb7\x03\x8e\xe1\x85\xb1\x43\xea\x0e\x2e\x27\xd3\xf7\x37\x1f\x5c\x5a\xe8\x90\x36\x7e\x5c\x2e\x31\x95\x48\x8a\xa6\xbf\xaf\x44\x81\x93\xcd\x23\xa1\x91\xe4\x68\x19\x3a\xb1\xc2\xaa\x34\x12\x65\x0d\xb4\x1d\xc0\x8b\xa7\x69\x98\x45\x34\x63\x42\x7a\xb1\x02\x68\xb0\xfb\x75\x02\x70\xc2\x1c\x89\x7e\x96\x64\x74\x7d\xe3\x02\xd8\x46\x58\x6e\x35\x81\xd9\x5a\x94\xbd\x1e\x06\xe0\x58\xe9\x10\xe1\xdd\x96\xd8\xa1\xdf\xac\x8f\x16\x34\x18\x54\x87\x30\x70\xbd\x03\x1a\x0c\x83\x4e\xc4\x0c\xf3\xab\x66\x06\x34\x97\xf1\x6f\xb5\xbe\xdf\x76\x07\xad\xf4\xdd\xa0\x43\x3b\x2f\x28\xd3\x4a\xbb\xe4\xe0\x9c\xe9\xcc\xd6\x3e\xb0\x75\x5a\x23\x34\x73\xf1\xc1\xb1\x5e\x3d\xb3\xcd\xfb\x74\xe9\x82\x63\x98\x46\x12\x2e\x1e\x5a\x0b\x12\xc2\xff\x09\xd3\x32\xe2\xc7\x8d\xe1\x00\xa0\x82\xe3\x83\x13\xa9\x70\xce\x75\xdb\x48\x92\xdb\x3b\x46\x0c\xae\xc4\xd7\x36\xc4\x5f\x8b\x0f\xbd\xd5\x31\xc3\xe2\xfd\xa1\xbb\xce\x94\xd9\x56\x02\x68\x1e\x73\xc9\x35\x33\x7c\x25\x9d\xcb\xda\x60\xe5\x23\xf9\x5d\xd3\x0f\x2c\xe6\x3c\xe5\x46\xc9\xd5\x10\x22\xf4\xbc\xd5\x9c\x96\x4b\xcc\x16\xb6\x39\x95\xed\xdc\xaa\x67\xed\x05\xe7\xec\x2e\x11\x61\x82\xf5\x05\xc1\xe1\xc6\x22\xe9\xf5\x5a\x6b\x53\xa7\x85\x83\xb1\xda\x1d\x05\x21\x39\x33\x6d\x1e\x93\xe5\x1b\xb3\xa9\xa0\x4f\x16\x5c\xa7\xec\xde\x42\x7f\x06\x1b\x8d\x42\x93\x70\x0c\x4b\xad\xb9\x34\x18\x09\xcd\x43\xa3\xf4\xfd\x06\x9f\x75\xda\x5e\x0f\x23\x31\x9b\x21\x29\xc7\x7a\x93\xe6\x2a\x82\xe2\x49\xbb\x69\xbc\x2a\x72\x0d\xa4\x95\xe8\x96\xbb\xd7\xc3\x9c\x99\x30\xb1\xb7\x8b\xe4\x43\xfc\xfd\xb5\xd3\xad\xc4\x94\x16\x31\x1e\xd4\xde\x03\x2f\x7e\xd8\x29\xf0\x0c\x6e\x23\xbe\xdd\xce\x40\xbd\x30\xfc\xb6\x20\xd1\xa5\x6c\x8d\x24\x31\x26\xdf\xf2\x54\x16\x80\x0d\x8b\x95\x45\xb5\x42\x67\xd8\xf9\xe9\x8d\x5d\x6a\xb4\x48\x02\xd9\x28\x4f\x97\x12\x09\xb1\xc5\xc5\x7e\x05\x06\xdd\xee\x59\x07\x4f\x70\xd5\xcb\x0a\x87\x73\x16\x26\x99\x8a\xf0\xd7\x77\xef\x76\x3c\xf5\x1a\xfb\x8b\xfc\x8d\x9f\x0b\xbe\xed\x45\x42\x12\x9e\xe6\x76\xa6\xf6\x97\x9d\x6b\x23\x95\xce\x16\xf6\x9a\xdf\x7f\x24\x90\xe3\xf0\xf0\xf0\x70\x48\x8e\xec\xa7\x5f\x7d\xff\x21\x2b\x9b\x7f\x87\x55\xdd\xc3\x57\xa9\xb5\xee\x3d\xfc\xaa\x90\xbd\x24\xad\x67\x73\x1f\x7a\x1e\x35\x4a\xa5\x05\xb5\x0e\x2f\xbf\xb7\xe3\xaf\x0b\x9c\x27\x3c\x9c\xa3\xbd\x42\x68\x23\x50\x2a\x83\x42\x56\x7b\x28\x42\x21\x31\x2c\x0b\xa3\x32\xae\xdb\x87\xa4\x78\xd3\xd9\x97\xd7\x0a\xf9\xde\x24\x4a\x1e\xed\xfa\x3c\xfa\xfc\xc2\x02\x2c\x58\x2a\xa2\x66\xbb\xec\x24\x0d\x2d\xb6\xef\x55\xf4\xff\x00\x79\x3b\xfb\x4b\xc0\xb7\x23\x5e\x82\xef\x4d\x3f\x4c\xc6\x7f\xfa\xc8\xec\xdf\x8f\x6a\x39\xb7\xef\x70\xf3\x2a\xd7\x5b\x66\xbd\x45\xe1\xdf\x00\x00\x00\xff\xff\x1f\x34\x42\x85\xd5\x09\x00\x00")

func templatesMakefileTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesMakefileTemplate,
		"templates/Makefile.template",
	)
}

func templatesMakefileTemplate() (*asset, error) {
	bytes, err := templatesMakefileTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/Makefile.template", size: 2517, mode: os.FileMode(420), modTime: time.Unix(1490303952, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesActionsAction_xTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x53\xd1\x8a\xea\x30\x10\x7d\xcf\x57\x1c\xa4\x8f\x5e\xfb\x2e\xf8\x70\xb9\x8a\x88\x17\x85\x7b\x65\x9f\xcd\xb6\xa3\x9b\x5d\x3b\x29\x4d\xba\x8b\x94\xfc\xfb\x92\x26\x95\xee\x56\x50\x84\x7d\xcb\xcc\x9c\x33\x39\x73\x32\x29\x65\xf6\x26\x8f\x04\x99\x59\xa5\xd9\x08\x91\xa6\xf8\xa3\x73\xc2\x91\x98\x2a\x69\x29\xc7\xf3\x19\xf6\x85\xb0\xd6\x85\xe4\x1c\x4b\x8d\xff\xf3\x35\x96\xa1\xac\xab\x09\xe6\x5b\x6c\xb6\x3b\x2c\xe6\xab\x9d\x10\x4d\x83\x84\x65\x41\x98\xce\x30\xd9\xf8\x83\x73\xa2\x69\x7e\xa1\x92\x7c\x24\x24\x3c\x46\x52\xb6\xc5\x15\x97\xb5\xed\xaa\xea\x80\xa4\x9c\x2c\xb8\x2e\xfe\x2a\x4b\x95\x3c\xf9\x42\x9a\x22\x80\x7c\xde\xf4\xbb\xa8\x31\x92\xf6\x8a\xab\xa4\x8b\x06\xe7\x5a\xbe\x8f\xa9\x13\x03\x65\x20\x19\xc4\x75\x11\xe7\x7b\x97\xa7\x9a\x44\xa6\xd9\xd8\x1b\xd4\x19\x42\x1c\xaf\x7b\xf2\xc4\x6e\x02\xe2\xbc\x77\x1c\x26\x07\xf3\x6f\x6b\x7b\x87\x01\x11\xf5\xb8\x03\xa1\xc1\x63\x16\x5c\xe3\xde\xef\xc1\xb7\x63\xd4\xd5\x35\x0a\x2f\xab\x4c\xbb\x5b\xaa\x0d\x0e\xba\xea\x23\x84\x3d\x97\x34\xa4\x18\x5b\xd5\x99\x45\x23\x00\xa0\xef\x2c\xbe\xae\x96\x73\x11\xe1\x2d\xea\xd4\x87\x68\xe7\x1b\x3b\x87\xfd\xab\xd1\x3c\x1d\x85\xe4\x3f\xf9\x11\x51\xa3\xfd\xa5\x77\xd4\x3e\x50\x1f\x9f\x25\xca\xd7\x21\xba\xa5\x3f\x92\xee\x18\x20\x20\x7f\x74\x82\xdf\xed\x87\x8f\xab\x10\x7e\xff\x40\x70\xc4\x74\x82\xdd\x67\x00\x00\x00\xff\xff\x94\xae\x74\x7a\x2d\x04\x00\x00")

func templatesActionsAction_xTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesActionsAction_xTemplate,
		"templates/actions/action_x.template",
	)
}

func templatesActionsAction_xTemplate() (*asset, error) {
	bytes, err := templatesActionsAction_xTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/actions/action_x.template", size: 1069, mode: os.FileMode(420), modTime: time.Unix(1490288384, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesActionsAction_x_runTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x53\x4f\x6b\xdb\x4e\x10\xbd\xeb\x53\x3c\x7c\xf8\x21\x05\x47\x0a\xbf\x63\x20\x85\x90\x53\x21\x4d\x42\x28\x85\x50\x7a\xd8\x4a\xe3\xf5\xe2\xd5\x8c\xd8\x3f\x09\xc1\xe8\xbb\x97\x5d\x49\xb1\x93\x40\x7b\x2a\x94\x52\x1f\x8c\x66\xe6\xcd\xec\xdb\xf7\x66\x07\xd5\xee\x94\x26\xa8\x36\x18\x61\x5f\x14\xa6\x1f\xc4\x05\x94\x05\x00\xac\xf6\x7b\xd4\x77\x13\xe4\x5e\x24\x60\x1c\x9b\x56\x98\x29\xa3\x57\x19\x33\x58\xd1\x58\x69\x13\xb6\xf1\x7b\xdd\x4a\xdf\xec\xa4\x57\xdc\x35\x83\x8d\xda\xf0\xa9\xef\x76\xa7\x5a\xfe\x6f\xac\xe8\x55\x51\x15\x45\xd3\xe0\x8b\xb2\xa6\x53\x81\xf0\x64\xac\xc5\xe3\x12\x85\x2d\xc1\xf0\x10\x03\x8c\xc7\xe0\x64\x20\x67\x9f\xe1\x29\xc4\xa1\x2e\x36\x91\x5b\x94\x06\x27\x89\xd1\x8d\xea\x09\xe3\xf8\x31\x81\xab\x97\x71\x65\x85\xaf\xdf\xc8\x39\x71\xd8\x67\x66\xe4\x9c\xc7\xf9\x05\x7a\xb5\xa3\x72\x2e\xad\x71\x56\xe5\x62\xfe\x6b\x1a\x5c\x45\x1f\xa4\x5f\x58\x18\x61\xb4\xd2\x11\xb6\xe4\x68\x81\x5c\x0e\x03\x71\x87\xdc\xef\xa1\x3c\x98\xa8\xa3\xae\x58\xea\x8e\x42\x74\x9c\x23\xb3\x81\x25\x2e\xd3\xc9\x15\x3e\xe0\x6c\x66\x92\x7e\x13\x2a\x93\xca\xb9\xb1\x38\xca\xb2\xb1\xc5\xf8\x2b\x71\x24\x86\x9f\xaa\x23\xaf\xd4\xb9\xcd\xe8\xbf\x4d\x9e\xfb\xc8\x93\x32\x2e\x72\x16\x65\x5a\x5c\x3c\x99\xb0\xcd\xb1\x36\x8f\xc4\xf3\x1e\xc9\x23\xb9\xa3\xe4\x61\x73\x67\xc1\xd4\x2b\xc1\x2e\x73\xa9\x4a\x47\x94\x09\x8a\x93\x43\x43\x7d\xf5\xf2\xb9\x9e\x87\xbf\xdb\xc4\x35\xd2\x4b\x48\xcf\xa1\xbe\x16\xad\xc9\x55\x28\xdf\x1b\xb2\x9e\x84\xaa\xe6\xab\xcf\x9e\x9e\x5f\xe0\xbf\x77\xd0\xfd\xb8\x48\xf8\x20\xd1\x1d\x09\xbf\xa4\x3f\xa9\x1d\xc1\x47\x47\x08\x82\xdb\x9b\xeb\x07\x44\x4f\x89\x45\x7d\xe7\x0c\x07\xcb\x50\xdc\x1d\xe2\x4d\x82\x25\x8e\x8a\x9f\xd1\x4e\xc6\xf6\xe4\xbd\xd2\xe4\xd7\x19\xda\x09\x58\x42\x9e\x92\x64\x63\x71\xbd\xb2\xd0\xb9\x4b\x93\x7b\x63\xe9\x42\x3e\x75\xb2\x4c\xf7\xc2\x46\x1c\x7c\x6c\x5b\xf2\xfe\x0d\x9a\x8d\xcd\xd0\x03\x6e\xa3\x8c\x8d\xcb\x7d\x5e\xcd\x5c\x1f\x59\xfe\x99\x7c\x98\x3c\x0f\xe9\xeb\xf7\x98\x9e\x0e\xf9\xe7\xfa\x9f\xe1\xfa\x8f\x00\x00\x00\xff\xff\x83\x3e\x7b\x77\x94\x06\x00\x00")

func templatesActionsAction_x_runTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesActionsAction_x_runTemplate,
		"templates/actions/action_x_run.template",
	)
}

func templatesActionsAction_x_runTemplate() (*asset, error) {
	bytes, err := templatesActionsAction_x_runTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/actions/action_x_run.template", size: 1684, mode: os.FileMode(420), modTime: time.Unix(1490288285, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCmdMainTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x5a\xdd\x8e\x1c\xb7\xb1\xbe\x9e\x7e\x8a\x3a\x0d\xc9\xea\x39\x1e\xf5\x58\x3a\x77\x63\xef\x09\x6c\xad\x6c\x09\xd6\x1f\xb4\x6b\x1b\x81\x24\x18\xdc\xee\x9a\x69\x66\xba\xc9\x06\xc9\xde\xf1\x78\x31\x80\x1f\x42\x97\x79\x80\x3c\x97\x9e\x24\xa8\x22\xfb\x6f\x7e\xb4\xb2\x82\xe4\x26\x09\x10\xed\x90\xd5\xc5\xaa\x62\xd5\x57\x1f\xc9\xd4\x22\x5b\x8b\x15\x42\x25\xa4\x8a\xa2\xf9\x1c\x1e\xe9\x1c\x61\x85\x0a\x8d\x70\x98\xc3\xd5\x16\x5c\x81\xf0\xa3\xae\x84\xca\xe1\x07\x0d\x17\xe7\x3f\xc2\x0f\x7e\x5a\x9b\x14\xce\x5f\xc2\x8b\x97\x97\xf0\xf8\xfc\xe9\x65\x14\xc9\xaa\xd6\xc6\x41\x12\x4d\x62\x54\x99\xce\xa5\x5a\xcd\xff\x66\xb5\x8a\xa3\x49\xbc\xac\x1c\xfd\x53\xea\x15\xfd\xa3\x6d\x1c\x45\x13\xa1\xac\x84\x78\x25\x5d\xd1\x5c\xa5\x99\xae\xe6\xd5\xaa\x71\xbf\xcf\x69\x98\xa6\x87\x33\x6b\x36\x60\x5e\x97\xcd\x4a\xaa\xfb\x36\x5f\xdf\x5f\xe9\x87\xf3\x5c\xda\x5a\xb8\xac\x40\x13\x47\x00\x00\x75\xa9\x57\x70\xfb\x67\xc1\x88\x5b\xe5\x2a\xb4\x56\xac\x90\x6c\xb9\xb9\xb9\x0f\x72\x09\xe9\xb7\x99\x93\x5a\x59\xd8\xed\xa2\x49\x7c\x73\x03\xe9\x2b\x1f\xc0\xd7\x5a\x3b\xd8\xed\xe6\xc2\xcf\xc7\xfe\x0b\x54\xf9\x49\xc9\x4c\x2b\x85\x2c\x1d\x1f\x17\xb0\x68\xae\xd1\xcc\x0b\xe7\xea\xb8\x37\xe0\xd2\xc8\xd5\x0a\xcd\x69\x0b\x5c\x10\x18\x9b\x30\x8d\xa2\x6b\x61\x68\x6b\xe6\x73\x78\x21\x2a\x04\xef\x2b\x28\x51\x61\x34\xe1\x91\x33\x60\x7d\xfc\xf7\x6e\x17\xb3\xe8\xcf\xa8\x72\x6d\x5a\xe1\x6b\xfe\x15\x4d\xc2\x68\xf8\x20\xfc\xea\x3f\x31\x56\x6a\xd5\x7f\xc3\x3f\x79\x7f\xda\xa9\xee\x43\xff\xb3\xfd\xf2\x1c\x6d\x66\x64\xed\x06\x5f\xe7\xfd\x10\x6b\x18\x8a\x04\x2d\xc3\x21\xd2\x34\xe5\x3c\xbe\x2c\xd0\x22\xe4\xb8\x94\x0a\xe1\x5a\x18\xa9\x1b\x0b\x99\x2e\xb5\x81\x4c\x2b\xeb\x84\x72\x16\xda\x98\x94\xb2\x42\x80\x33\xa0\xcc\x4b\x1f\x91\x10\x95\x41\x12\xaf\x0c\xa2\xfa\xb2\x58\x5c\x95\x22\x5b\xc7\xd3\x68\x62\x30\x87\x63\x82\x06\x73\x9a\x66\xf9\x53\x7a\xfc\xf7\x16\xdd\xd1\xef\x2d\xba\x78\x4a\xb6\xbb\x6d\x8d\x90\x95\xf2\x5b\xb3\xb2\x60\x9d\x69\x32\x07\x37\xd1\xe4\x91\xae\xb8\x04\xe9\x3f\xd6\x19\xa9\x56\xd1\xe4\xa2\xb9\x0a\xc3\x16\xde\xbc\x0b\xa3\xbb\x28\x5a\x36\x2a\x83\x15\x3a\x52\xf1\xbd\xd1\xd5\xa3\x67\x4f\x93\x29\x24\xff\x1b\xb4\xce\x00\x8d\xd1\x66\x4a\x6a\xe5\x12\x4a\x54\x89\xb6\x29\xcd\x4c\xe1\x9b\x33\x78\x40\xe3\x13\x83\xae\x31\x0a\x94\x2c\x83\xb8\x4d\x5f\xe0\x26\x89\xb7\xba\x81\xaa\xb1\x0e\x6c\x8d\x99\x5c\x6e\x21\x0b\x86\x39\x0d\x52\x5d\xeb\x35\x82\x08\x9b\x47\x0e\xef\xa2\x89\x20\x47\x16\x67\xf0\x45\x58\x9e\xb4\x07\xb3\x17\xec\x4e\x58\xfc\xcd\x83\x77\xb3\x68\x32\x74\x6a\xd1\x4d\x3d\x5c\xd0\xdc\x2e\x6a\xcd\x12\xec\x86\x92\xe5\xd0\xdd\xe7\xbe\x5c\xc9\xe3\x0b\x97\x4b\xc5\x3e\x87\x1a\x4e\x7f\x7e\x30\x74\xbb\x62\x83\xfa\xb9\x9b\x5d\x34\xc9\x31\xa3\x51\x02\x2c\x72\xf5\x1c\x33\x9d\xa3\xa1\xd0\xb0\xb6\x29\x07\x0b\x8d\x21\xa1\x1c\xb3\xd4\x0b\x24\xd5\xf4\x6b\x1e\xfd\x9f\x33\xb2\x87\x63\x47\xe9\x67\xb6\xb0\x34\xba\xea\x3c\xf8\xbf\x77\xb0\x29\x64\x56\x80\xb4\xb0\x29\xd0\x20\xe3\x6a\x23\x43\xac\x52\x87\x14\x53\xc4\xca\x52\x24\x2d\x95\xad\x2b\xb0\x8a\x26\x83\x55\xd9\xb4\x9f\x54\x25\x8c\x2d\x44\x99\xbc\x79\x77\xb5\x75\x98\xf4\x2b\x4c\x67\x47\x8c\xd9\xdf\xc9\x68\x42\x71\xec\x43\x59\x8d\xe3\x48\x8d\x20\xe1\x18\x89\x36\x55\x68\xe9\xfd\x6c\xea\x82\x31\x58\xa9\xd4\xab\xf4\x7b\xe1\x44\x99\xa0\x31\x7e\xef\xed\x46\xba\xac\xe0\xed\x4a\xdb\x0c\xbe\x89\x26\x99\xb0\x08\x71\x40\x86\x78\x11\x4d\x26\xb5\x91\xca\x05\x3c\x20\xed\x5e\xa2\xc0\xb2\xee\xa7\x9f\x60\x59\xf7\x73\x52\x2d\x75\x3f\x37\x00\x81\x5e\xc4\x8a\xaa\x2e\x91\x85\x42\x9e\xb3\x21\x83\x0c\x9b\xc2\xd9\x19\x7c\xe5\xe3\xd4\x9b\x1f\xff\xb5\x4d\xf2\xda\xe8\x6b\x99\x23\x08\x05\x1e\xd9\x41\x1b\x08\x08\x4b\xfb\xd4\x36\x4a\xf0\x4b\x81\x54\x75\xe3\xde\xaa\xc7\xbf\x2d\xda\x91\x6a\xfb\xab\xff\x92\xaa\x81\x42\xe2\xed\xbd\xe0\xd9\xa7\x24\x7e\x60\xd4\x9b\xaf\xde\xf5\x11\x20\xf4\x5f\x00\x81\xa3\xc0\x4a\x2b\xf9\x3b\x82\xb0\x40\xc3\xd1\x64\xd2\xef\x0f\x0d\x50\xd6\x5e\x70\xd3\x48\xfa\xe6\x42\x83\x8f\x44\x56\x60\x32\x9d\xf6\xc9\x34\xcc\x8f\xfd\x6d\x63\x23\x97\x95\x4b\x5f\x91\xa1\xa5\x4a\xe2\x57\x1e\x8b\x07\xcd\x01\xae\xb4\x76\x52\xad\xe0\xc9\xe5\xe5\xab\x60\x5a\x9a\xa6\xec\x23\x83\x2f\x65\xb9\x2c\x4b\xb8\x2a\x75\xb6\x86\x46\x39\x59\x72\xc2\xfb\xa6\x06\xb6\x68\x9c\x85\x5c\x6f\xd4\x28\xc1\x6d\xfa\x4c\x5a\x87\xea\x5b\x95\xb3\x23\xc9\x91\x74\x3e\x66\xae\x8f\x95\x69\x7c\x2e\x2d\x45\x59\xba\xc2\xe8\x66\x55\x50\x55\x2f\x45\x53\xba\x85\x37\xec\x17\xbc\x67\x10\x4c\xa3\x14\x19\x8f\xd2\x15\x68\xfa\xcd\x9d\xd1\xee\x8a\x76\x7f\xa3\xc9\xa4\x1a\xe6\xff\x21\xbc\xdc\x12\xcf\xe5\x00\x2d\xbb\x44\x82\x00\x3a\x70\xa5\xf3\x2d\x5c\x4b\x01\x17\x97\xe7\x4f\x5f\x50\x32\x99\x46\x1d\x4d\xb4\x05\xdc\xb5\x31\x5b\x92\x3e\x26\x04\xf3\x3b\x49\xbb\x14\xca\xab\x4a\x2f\xa9\x69\xd0\xea\x3e\x12\x5e\xc5\xaf\xd6\x09\xe3\x38\x24\x83\x18\x9b\x46\xbd\x54\xf8\x72\xb9\xf4\x54\x26\x19\xd6\xe6\x0c\xf6\x01\x04\x98\x12\xfa\xc2\xb5\x85\x6e\xca\x1c\xae\x38\x80\x1c\x2b\x02\x2d\xd2\x7e\xb8\x29\x6c\x9e\x37\x26\x78\x31\xb4\xe6\xa3\x29\xd2\x96\xd7\x28\x47\xc6\x0e\x04\x12\xe4\xf3\xee\xdf\xe9\xc1\x20\x7b\x46\xfb\xda\xa8\xb5\xd2\x1b\xd5\x6d\x26\x37\x6d\xde\x25\xbf\x17\xd3\x16\x65\x5b\x58\xdd\x8f\x7a\x45\x34\xdb\x77\xec\x19\x54\x30\x68\x53\x53\xdf\xa6\x68\x37\x8f\x91\xce\x2c\xf7\xbd\xb4\x2f\xf0\x73\xe1\x04\xf5\xaf\x92\x26\x88\x01\x53\xc9\x7f\xd7\x2c\x97\x68\x30\x7f\xa6\x29\x50\x94\xaa\xfc\x5d\x4f\x98\x29\x8d\x5f\x8b\x4d\x52\xa5\xdf\xe9\x7c\x9b\x9e\x77\x13\x53\xae\x19\x34\x50\xa6\xdf\x97\x8d\x2d\x42\x03\xf4\x51\x31\x68\x6b\xad\x2c\x92\xae\xd6\xe4\xd7\x61\x8c\xd2\xef\xc2\x09\xd7\xd8\x05\xc4\x7a\x1d\xfb\x86\x3d\x9f\x43\xd7\xb1\x78\x7b\x39\xef\xa5\x72\x9a\x7f\x19\xb9\x2a\x5c\xa0\x39\x91\xaf\x50\xc8\x78\x93\xc4\xb5\x96\xdc\x03\xe1\x21\xe0\x6f\x19\x5a\xcb\xfd\x0f\x5a\x5d\x99\x28\x4b\x0b\x52\x01\x37\xd3\x8d\x74\x05\x08\x28\xb5\x03\xbd\x04\x5f\x17\xf7\x33\x61\xa9\xcc\xb5\xe2\xfd\xb1\xac\xff\xaa\x71\xf4\x91\xa3\xf4\xa3\xfc\x9c\xf1\x12\x35\x9a\xa5\x36\x95\x50\x19\xc2\x4a\x48\x45\x5d\x5a\x69\x07\xae\x10\x0e\x56\x06\x85\x9b\x01\x25\x90\x74\xf7\x2c\x94\x64\xcb\xaa\x3d\x03\x01\xb1\x00\x2a\x5f\xea\x9c\x8e\x8e\x51\xb4\x8c\xd3\x90\x6b\x90\xce\x2f\xb4\x11\xdb\x94\x87\x2f\x5f\x9e\xbf\xa4\x2d\xdd\x20\xd8\x86\x18\x54\x10\x90\x16\x04\x5c\x69\xe7\x4a\x54\x98\xad\x67\x84\x17\x4b\x49\x0d\xc5\xf1\xba\x76\x23\x6a\xb8\x12\xd9\x1a\x42\xdc\x7a\x0f\x11\x44\x5d\x1b\x2d\xb2\x22\xea\xf1\x80\xf7\xd4\xa7\x4d\x9b\x48\x46\xa8\x15\xc2\x1d\x35\x83\x3b\x35\x6d\xdf\x38\xab\xb8\x52\x6f\x6e\xe0\x4e\x9d\xbe\x16\x9b\xf6\x08\xc0\x9d\x93\x7a\x14\xe7\x5c\x38\xdb\xa4\x5e\x2c\xc8\x70\x0b\xa3\xf4\x3b\xcd\x53\x82\x39\x2c\x39\xf3\x2d\xf2\x34\x4d\xe9\x18\xca\xad\xfa\x1e\x75\x25\x30\x83\x2c\xff\x14\x8d\x54\x34\x1d\xa2\x0f\x2a\x28\x68\x4a\xb2\x7c\x06\xe5\x09\x54\x3f\x50\x26\x4e\xc7\xc4\x47\x96\x83\x62\x1a\xf5\x1c\x5d\xa1\xb9\xfa\x44\xfa\xba\x09\x0d\x8f\xeb\xff\xec\x0c\x62\x02\xa0\x38\x2c\xd1\xc9\x92\xe8\xa5\x47\x26\x56\x12\x2a\x2c\x7d\xd9\x38\x8e\x21\x19\xc7\x40\xe8\xe5\x13\xef\x98\xf4\x01\x3e\xed\x41\xd0\xe2\x8b\x94\x8e\x4f\x8c\x34\xf1\x68\x92\x3b\x0c\x9c\x0d\xbb\x4d\xb0\x62\x3e\xef\xe0\xc3\x97\x2e\xda\xa6\x24\x13\x37\x46\xd4\x35\x9a\x11\xa5\x6e\x41\xe1\x17\x3f\xc7\x06\xd0\xae\x2d\xa0\x5d\x89\xb8\xfe\x84\xb0\x72\xb1\xd7\xaf\x78\x22\x50\xc1\x05\xc4\xd7\x0f\x79\x84\xd1\x38\xbd\x40\x95\x27\x61\xbd\xe9\xf8\x8c\x3d\x80\xea\xb0\x57\xc4\x61\xd8\x85\x01\x60\x87\xe6\x1a\xa0\x7a\x50\x26\x9e\xaf\x06\x85\xbb\x9e\x1e\x0f\xb9\xf1\x41\xe7\xf9\x53\x28\x3e\x3a\xb9\x7f\x22\x8c\xbf\x20\x50\x2a\x3f\x07\xc4\xf7\xc1\x20\xac\x7e\x12\x0d\xc6\xd6\x7d\x0a\x1c\xb4\x17\x0d\xe9\x80\x17\x06\x2d\xff\xb5\xa0\xc0\x91\xe9\x02\xf3\x02\x37\x23\x5c\x08\xd1\x49\xf2\xe9\x69\x10\xd0\x9d\x2d\x8e\x21\x60\xbf\xb6\xbf\x1e\x56\xeb\xa9\x36\x3c\x99\x78\xa4\x58\x80\xe6\x6a\xda\xef\xcb\xde\x58\x32\xe1\xc0\xa5\xdb\x90\xe0\x16\x1c\xd9\xb5\xf4\x4e\x87\x06\xae\x10\x73\x6a\xc2\x4e\xf3\x99\x01\x9a\x3a\x80\x87\xc8\x4b\xad\x6b\xee\x6e\xfb\x0c\xb0\x65\x55\xd4\xa2\xb5\xb2\x4d\x85\x79\x50\xbb\x0c\x94\x8d\x0b\x6e\x83\x80\x15\xb5\x58\xdf\x12\xfb\xb2\x80\x5c\x1a\xcc\x5c\x49\x4d\xf7\xd3\xe1\xe9\x18\x3e\x9d\x06\xa8\x43\x84\xf2\xbe\x1f\x60\xd4\xf0\x00\xde\x23\xe9\x05\x69\xea\x22\x01\x14\x8a\x68\x32\x59\x69\x70\x29\x4f\xbd\x46\x91\x3f\xd3\xba\x4e\xca\x70\xa4\x7a\xdd\xa8\x43\xba\x2c\x1d\x64\x9a\x0e\x92\x0e\x2d\xcc\x3d\x63\x0e\x84\x39\x2c\xea\xa8\xe5\x1c\xf6\x87\x3f\x0f\x9c\x2d\x2b\xff\xd3\xc8\xd9\x72\x7d\x69\xa1\x36\xe8\xdc\x16\x0a\x91\xad\xb7\x33\xe6\x57\xb6\x31\x48\xe0\xe8\x98\xc4\x79\x16\x84\xce\xa1\x21\xca\xc4\x5c\x8d\x2f\x51\x28\x4e\xa8\x56\x52\xe1\x8c\x7c\xce\x35\x5a\x75\xcf\x51\xd4\xd6\xa4\xbf\x94\x6b\x64\x4a\x45\x2e\x09\xb5\x85\xb5\x54\x39\xf1\xc0\x98\x78\x5f\x0c\xcb\x52\xac\x3c\x43\x1c\xe7\x49\x9a\xa6\xa4\x8e\xd4\xd8\xa0\x84\xf8\xde\x06\x99\xbb\x59\x08\x91\x89\x3c\x9f\x13\x90\xa1\x21\x82\xc7\x6c\xd2\xf3\x41\x83\x75\x29\x32\xa6\x69\x5a\x95\xc4\x6b\x3b\xa1\x42\x98\x9c\xa8\x61\x0e\x92\xaf\x1b\x33\xb4\x29\x5c\x68\xcf\x37\x35\x11\xdc\x40\xdb\xbc\xdb\x35\x31\xc7\xf9\x9c\xb5\x92\x84\xc2\xcd\x11\x89\x14\x9e\xde\xab\x98\xfa\x72\x4d\x15\x3c\x51\x0a\x87\x86\x18\x71\xc1\xa0\x2e\x1c\x5c\xa1\x75\x21\x45\xe8\xe0\x89\x0a\x34\x45\x78\x23\x2d\xfa\x4e\x76\xd8\x42\x72\xe1\x04\x54\xa2\x7e\xe3\xdb\xd9\x3b\xa9\x1c\x9a\xa5\xc8\xf0\x66\x37\x1d\x86\xac\xef\x31\xe1\xfa\xb0\x31\xe5\x0c\xf4\x9a\x1b\x93\x70\xe2\x4d\xdc\x98\x32\x7e\xf7\x35\x0d\xf1\xd9\xeb\x31\xef\x1b\x35\xde\x46\x94\xe5\x96\x37\xc9\xc2\x43\xb8\x16\x65\x83\x76\xc6\x9b\xbc\x41\x1f\xbe\xc6\xa2\x77\x4a\x2b\xfc\x4b\x9f\x8f\x83\xe5\x5f\xe0\xe6\xc9\xe5\xe5\xab\xa4\x31\x65\x9a\x78\x53\xa7\xd3\xe1\x75\xd6\x58\xf6\xc2\xe5\xba\x71\xc9\xb4\x6b\xe1\x87\x97\x45\xe4\xc6\x7c\x1e\xde\x34\x4a\x78\xaa\x96\x1a\xe6\xf0\x04\x45\x8e\x86\x0f\x3c\x4d\xc9\xa8\x1e\xbf\x55\x71\xf7\xfb\xcb\x33\x2e\x92\x0b\x56\xb7\x4c\x62\x02\x78\x7f\x99\x09\x00\x77\x2d\xfd\xf7\xc3\xdf\xff\xf1\x56\xc5\x33\xe0\xbb\xdf\x19\xdf\xb9\xcf\x80\xef\x79\xa7\x27\xd5\xf8\x9b\xf4\xc5\x47\xd4\x78\x89\x4f\x50\x14\xc0\xe9\x23\x8a\x58\xe2\x56\x4d\x83\x58\x2d\x8e\x6b\x1a\x48\x74\xda\x4e\xb0\x1e\xea\x86\x04\x24\x99\x6e\x14\x07\x35\x29\x51\xf5\x32\x53\x16\xe2\xdb\x53\x0f\x36\xb4\x19\x27\x2d\x7b\xdb\xde\xa8\x1f\x9b\xec\x96\x4d\xee\xda\xbb\xf9\x5d\x3b\x5d\xc0\xd0\x66\xb2\x6e\x60\xc9\x6e\xd7\xc7\x61\xc0\x8e\xe4\x0c\xee\xb8\x43\x76\x74\x62\xc9\x0f\xef\xdf\x7f\x78\xff\xc7\x87\xf7\x7f\x84\x30\xf1\xd2\x76\x3a\x5c\x36\xf6\xeb\x76\x4f\x2c\x61\xd5\x7e\x62\xef\x2d\x63\x6c\x55\x0b\xd8\x83\xbf\x8f\xdf\x11\x50\x98\x7d\xc7\xda\x0b\x74\x10\xea\xe2\x1c\x4e\x88\x9f\x1f\xe6\x76\xd5\x53\x51\x1e\xdb\xf1\x91\x30\x8b\x83\x23\xe9\xbf\x1a\x65\x71\x2a\xca\xe2\x33\xa2\xdc\x5d\x87\x26\xde\xac\x3d\x40\x19\xdd\xe6\xfa\x98\x06\x6c\xea\x8f\x01\xd4\x83\xbf\xdb\x3a\xec\xef\x6c\x99\xc1\x3e\x0f\xfc\xf5\xe0\x24\x70\xf4\x8a\x7d\x48\x38\x77\xe1\x19\x63\xf0\x8a\x11\x8d\x68\xc9\x03\xa6\x25\x9e\xd5\xb4\x42\xf4\xcb\x0b\x4e\x7c\xb0\x17\xed\xdd\x27\x0d\xf5\xec\x79\x01\xbd\xbd\x34\xf3\x1c\x9d\x58\x40\x25\xd6\x98\x9c\x68\x12\x2c\xd6\x77\x87\xdb\x85\x77\xb3\xd1\x13\xc1\xb1\xcb\x8a\xe3\x99\xd1\x9f\x4e\xc4\xfe\xe9\x24\xdc\x84\x9e\xb5\x8c\x8d\x38\xa9\xff\xeb\x23\xa1\x1f\x9e\xe1\xc5\xde\xbd\xc6\xa7\x12\xff\xe1\x71\x86\x8e\xef\xfd\x9a\x23\x6a\x74\x3b\xb8\xf4\xce\xb9\xd3\xce\x05\x32\x46\xde\x85\x3f\x3f\xe2\xde\xf0\x9c\xd6\x63\xcf\xf8\xa4\xf6\x99\x6e\x0e\x17\x1f\xf9\x39\xe0\x94\xc3\x6b\xd3\x9f\xc6\xa7\xf0\xc1\x5b\x0a\xd3\x4a\xd1\xf3\xc9\xb6\xfe\x8f\xba\xf4\x54\xe5\xa8\x5c\xf2\x45\x35\x83\x18\x62\xfa\x1f\x88\x3f\xa5\x5c\x86\x8f\x1a\x3e\x29\xdb\x72\x9e\x1e\x3d\xef\x8f\x1f\xa5\x48\xe3\x50\x43\x98\xd8\x83\x02\xff\x48\x35\x92\x4d\xba\x67\xf5\xdd\x0e\x68\x7e\xf1\x56\x79\x54\x1d\x88\x74\x6f\x9e\x47\xe6\x8a\xf0\x8d\xbb\x28\xf4\xc6\x7a\x86\x54\xa1\x6a\x8e\x88\x86\x37\x35\x96\xa6\x62\x2c\xc5\xb6\x7d\x81\x07\xa9\x96\xfa\xc8\x27\x34\x3c\x92\xa7\x01\x53\x09\xde\x22\x71\xa5\x1b\x7f\x4e\x11\xd7\x42\x96\xe2\xaa\xc4\xb0\x4d\xd6\x53\xd5\x90\x5c\x33\x10\x16\x36\x58\x96\xf4\xef\x2a\x70\xa9\xf0\x86\x5f\xa1\x13\x44\x0d\x8f\xac\x1d\x1e\xc9\xbe\x69\xd3\x40\x9b\x36\x37\x94\xa8\xf0\xff\x47\x66\x89\xd1\x23\x5b\x77\x48\xe4\x23\x61\xd1\x3e\xf5\x77\x16\xf5\xaa\x8e\x2c\x4b\x47\x48\xd6\x4d\xa7\x2a\x7e\x73\x20\xc2\x5c\xf9\xcb\x37\x61\xad\xce\x24\xff\xbf\x5f\xba\x33\x43\x78\xbe\x39\xa2\x3d\xbc\x83\x4b\xcc\xf9\x31\x47\xa8\x3d\xf3\x34\x3f\x77\xb9\x5c\x1e\xb3\xc3\x34\x6a\x64\x86\x69\xd4\x7f\xc8\x8a\xdd\x3f\x03\x00\x00\xff\xff\xa2\xad\xf1\x08\xf9\x23\x00\x00")

func templatesCmdMainTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesCmdMainTemplate,
		"templates/cmd/main.template",
	)
}

func templatesCmdMainTemplate() (*asset, error) {
	bytes, err := templatesCmdMainTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cmd/main.template", size: 9209, mode: os.FileMode(420), modTime: time.Unix(1490670716, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesConnectionCacheTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x93\x41\x6f\xe3\x36\x10\x85\xcf\xd6\xaf\x78\xf5\xa1\x90\x03\xad\x02\xf4\xb8\x45\x4e\x71\x11\x04\xd9\xc6\x05\x9a\x9e\x16\x7b\xa0\xa9\xb1\x44\x98\x1a\x6a\xc9\xe1\xaa\x6e\x90\xff\x5e\x0c\xe5\x24\xde\x45\x7b\xa3\x38\xe4\x9b\x8f\x6f\x9e\x26\x63\x8f\xa6\x27\xd8\xc0\x4c\x56\x5c\xe0\xaa\xba\xbe\xc6\x6d\xe8\x08\x3d\x31\x45\x23\xd4\x61\x7f\x82\x0c\x84\x87\x30\x1a\xee\x70\x17\xf0\xe7\xf6\x01\x77\x4b\x39\xc4\x16\xdb\x1d\x1e\x77\x4f\xf8\x6d\x7b\xff\x54\x55\x6e\x9c\x42\x14\xd4\x15\x00\xac\x0f\xa3\xac\x97\x55\x3a\xb1\x5d\x57\x65\x3d\xf9\xd0\x63\xdd\x3b\x19\xf2\xbe\xb5\x61\xbc\x3e\x16\xe5\xeb\xc9\xe7\xde\xf1\x87\xd4\x1d\x3f\xf4\xe1\x97\x6b\x1f\xfa\x75\xb5\x59\x80\x8c\x1d\x08\x2e\xc1\x20\xb9\x71\xf2\x84\x39\x9a\x69\xa2\x08\x13\x43\xe6\x0e\x06\xa3\x99\x30\x3b\x19\x74\x99\x85\xfe\x6e\x20\x01\x49\x42\xbc\x7c\x5d\x82\xe3\x4a\x4e\x13\x9d\x15\x93\xc4\x6c\x05\xcf\x05\x4b\x09\xdb\xdf\xf5\x6e\xf9\xec\x8c\x14\xd5\xcf\x49\xa2\xe3\xfe\xcb\xd5\xed\xbb\x49\x2f\x85\xea\x91\xe6\x45\x26\x92\xe4\xc8\x4a\xc7\x34\x5f\xb4\x83\xd5\x72\x75\xc8\x6c\xdf\x0e\xd7\x1b\x5c\x2d\xb7\x9e\xab\xd5\x72\x11\x3f\x97\x8d\xe7\x6a\xb5\xd2\xa6\x1f\x31\x9a\x23\xd5\xff\xdd\x7a\xd3\x54\xab\x97\x73\xff\x3b\x12\xcc\xce\x7b\xf4\x24\x08\x11\x8e\x9d\x94\x49\x29\x41\x8b\x7b\xc1\xde\x07\x7b\x4c\xc8\x2c\xce\xbf\x55\xd4\xc7\x48\xa6\x3b\xa9\xc6\xd3\x6e\xbb\x83\x0c\x2e\x2d\x4a\x7b\xc2\x37\x8a\x27\x38\xa6\xc3\xc1\x59\x47\x2c\xd8\x67\xc1\x4c\x60\x22\xf5\x79\x36\x27\x75\xd6\x87\x70\xcc\xd3\xa5\xb5\xaa\xe6\x18\x06\x32\xa8\x7a\x32\x07\xc2\x68\x98\x29\x36\xd0\xdc\x04\xf6\xa7\x82\xe8\x8c\x77\xff\x90\xe2\x8c\x08\x6c\xa9\x5d\x9c\xdf\xb1\x25\xcc\x21\xfb\x4e\x29\xfa\x10\x3a\x55\x3c\x37\x4f\xa2\x74\x67\x84\xc9\x1b\x4b\x0a\x51\xec\xbd\x64\x68\x54\x95\x0b\xdc\xa2\x9f\x27\x4d\xaf\xc1\x91\xca\x6b\xdf\x1f\x1a\xe9\x6b\x76\x91\x30\x65\x11\xc7\x3d\x0c\x1e\xe8\x54\x6f\x30\x92\x0c\x41\x61\xdf\xec\x3a\x8f\xd2\xb1\x50\x3c\x18\x4b\x0d\xe6\xc1\xd9\x41\xe5\xe6\x37\x28\x09\xe7\x10\x68\x42\xcb\xd0\x20\x83\x11\xb5\xda\x86\x71\x0a\x89\x3a\x84\xc3\xa5\x5e\x89\x57\xca\x76\x58\x0e\xde\x8b\x0a\x5a\xc3\xc8\xec\xbe\x66\x52\xaf\x3a\x62\x71\x87\xd3\x8f\x24\x33\x61\x36\x2c\xaf\x53\x40\x9e\xda\x25\x62\xb5\x3d\x47\x6b\xa3\xd1\xa8\x6d\x87\xab\xad\x11\xd3\xc0\x97\x5f\xae\xfd\x14\xfa\x9e\xe2\x06\xf5\x45\x9e\x1a\x50\x8c\x21\x6e\x34\x8d\xdf\x4c\x44\xc2\x65\xce\xcb\x56\x38\x62\x1f\x82\xaf\x56\xb6\xfd\x14\xec\xb1\xde\x54\x2b\x77\x40\x6a\xb4\x70\x03\xdb\xea\x4b\x3e\xdb\xae\x2d\x06\x7e\xf9\x55\xb7\x35\xca\xb6\xfd\x8b\xfd\xf9\xfc\x6b\xd0\x53\x03\x76\x5e\x13\xbc\xf2\xed\x1f\xd1\xb1\x78\xae\xd7\xb7\x91\xcc\x79\x08\x8f\x34\xe3\xbd\xff\x7a\x53\xad\x52\x21\xc4\xc7\x9b\xd7\xfd\xda\x76\x0d\xfc\x02\xa1\x95\x9f\x6e\x54\xf3\x7f\x5b\xb2\xf3\x45\xa1\x34\xfd\x11\x16\x37\x48\xd5\x77\xd7\xbe\x07\x7d\xf9\x37\x00\x00\xff\xff\x18\x6c\xbe\x80\x21\x05\x00\x00")

func templatesConnectionCacheTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesConnectionCacheTemplate,
		"templates/connection/cache.template",
	)
}

func templatesConnectionCacheTemplate() (*asset, error) {
	bytes, err := templatesConnectionCacheTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/connection/cache.template", size: 1313, mode: os.FileMode(420), modTime: time.Unix(1490288320, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesConnectionConnectTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x94\x4f\x6f\x1b\x37\x10\xc5\xcf\xdd\x4f\xf1\x90\x43\x2b\x05\xb2\x85\xe6\x58\xa0\x97\x3a\xc8\xa5\x49\xed\x43\x50\x20\x28\x7a\x18\x71\x67\x77\x59\x71\xc9\x2d\x39\xcc\x66\x6b\xf8\xbb\x17\x43\x6a\xf5\xa7\x46\x2f\x86\x25\x0d\x1f\xdf\xfc\xe6\x71\x26\x32\x47\xea\x19\x26\x78\xcf\x46\x6c\xf0\x4d\x63\xc7\x29\x44\xc1\xa6\x01\x80\xc9\x85\x1e\x6f\x7a\x2b\x43\x3e\xdc\x9b\x30\xee\x8f\x61\x24\xdf\xee\x27\x97\x7b\xeb\xef\x52\x7b\xbc\xeb\xc3\xbb\xbd\x0b\xfd\x9b\x66\xdb\x34\xfb\x3d\x1e\x72\x92\x30\x3e\x51\xa4\x31\xc1\x26\xcc\x03\x47\xc6\x12\x32\x64\x60\xb4\xfc\x95\x5d\x98\x38\x62\xb6\xce\xa1\xd3\x3f\xd6\x83\xfc\x02\x53\x0e\x62\x8a\xfa\xb3\x58\x4e\x3b\xcc\x83\x35\x43\x39\x3b\x87\xec\x5a\x78\xe6\x56\xef\x90\x80\x9c\x18\x21\x62\x0e\xf1\x88\xd9\xca\xa0\x2a\x0f\xb5\x8b\x7b\x3c\x7a\x06\x7f\xa3\x71\x72\x8c\xd1\xf6\x83\xe0\xc0\xf5\x0e\x67\xd9\x0b\x9c\x3d\x44\x8a\x96\x93\x4a\xa4\x3c\x69\xc3\xd6\xf7\x57\x77\xa3\x3b\x89\x5b\xdf\xeb\x8d\xe5\x0a\x6d\xe0\x95\x82\xba\x53\x5f\x3b\x1c\xb2\xa0\x0d\xfe\x07\xc1\x4c\x5e\xd4\xa4\x0b\x89\x61\xbb\x52\x13\xb9\x67\xcf\x91\x84\x8b\x4e\x05\xd8\xc8\x32\xf1\x2d\xb2\x24\x31\x1b\xc1\x73\xc1\xbf\xdf\xe3\x4b\xc8\xf1\x35\x1b\x1c\xd8\x85\xb9\x79\xa9\xc8\x6b\xdf\x4a\xbb\x58\xac\xc5\x26\xb4\x5c\xda\xb8\xe5\x2e\x01\x73\xb4\xea\x22\xa0\xcb\xce\x2d\xb0\xde\x8a\x25\x67\xff\x51\x46\x2d\x22\x4b\x8e\x1e\xa4\xca\x91\xa9\x5d\x56\xdc\x0f\xe7\x90\x20\x1c\xfe\x52\xd0\x4d\x97\xbd\x59\xbf\xdf\x98\x16\x6f\xdf\x93\xd0\x0e\x1a\x1a\x4d\xce\xfd\xc7\xd0\xf7\x1c\xb7\xd8\xbc\xbd\x1c\xde\x81\x63\x0c\x71\x7b\x6a\x51\xa3\x87\x9f\x7e\xc6\xf7\x97\x8a\xe7\x97\xdb\xe6\xb5\x11\x4d\xd1\xfa\xed\x67\x3a\x56\x88\x97\xd8\xa2\x25\xa1\x62\xbf\x98\xb7\x02\xeb\x25\x94\xa2\x57\xb6\xcf\x32\x03\xfb\xdd\x6d\xf7\x0b\x92\x90\xf0\x0e\x29\x9b\x01\x54\x79\x92\x91\x4c\x0e\x34\xd9\xeb\x0b\x4f\xea\x32\xd8\xd8\x62\xa2\x28\xcb\xaa\xfb\xc1\x7a\x72\x6e\xd9\x61\xa2\x94\x70\x20\x73\xfc\x8f\xd9\x1d\xbc\x75\x65\x34\x29\x1b\xc3\x29\xad\x27\x1f\x65\xe0\x38\xdb\xc4\xa5\xe2\x04\xaa\x14\x76\x64\x5d\x8e\xdc\xac\x95\x9f\x14\x41\xca\xb1\x8c\xf1\xf1\xb7\x8f\x5f\xca\x84\x14\xf9\x53\xb4\x5e\x9c\x2f\x2c\xce\x9f\xbb\x9a\xc6\xfe\xfa\xa1\x8d\x9c\x12\xf5\xfa\xcc\xb4\xb4\x0d\xf0\x41\x8a\x8a\x9a\xf5\x21\x8e\xe4\xd0\x97\x53\x3d\xc7\x7a\xf1\x29\x1a\xda\x49\x71\x78\xca\xdf\xef\xe4\x6c\xab\xc1\x2e\x6f\x9a\x7d\xf5\x75\x8b\x7e\xa6\x04\x13\x99\x84\x5b\x98\x10\x23\x1b\x71\x4b\xcd\xcf\xc6\xe0\x2a\x1e\xdb\xb3\xdc\x66\x8b\x3f\xfe\xac\x08\x9e\xff\x27\x10\xcd\x77\x27\x4b\x17\x33\xbf\xf2\x02\x13\xc6\x29\xda\xc4\xa9\xf4\xdb\x59\x76\x6d\x2a\x8f\x94\x5b\x05\x31\x2a\xbc\x3c\x81\x90\xbd\xfd\x3b\x33\xbe\x92\xcb\xf5\xad\x30\x99\x01\x36\x79\x21\x6f\x18\xa1\x03\x5d\xef\x46\x1d\xae\x16\xd5\xd5\xb2\xc3\xbb\x33\xc4\xcb\x82\x48\x34\xd6\x59\x6b\x28\xca\x83\x1e\xca\xee\x4a\x03\x45\xc6\x8f\x37\x31\x50\xf0\xca\x4c\x85\x75\x7b\x14\xf2\xfc\x4d\x56\xd9\xaa\xda\xda\xae\xe3\xa8\x5b\xe7\xa4\x58\x97\xa1\x8e\x8a\xae\x7e\xbc\x08\xdf\x5f\xb8\xea\x7b\xdc\x2a\x93\xcd\x56\x37\x8b\x2e\xb9\x33\xcb\xcf\x8f\xef\x1f\x41\x59\xc2\xdd\xca\x0b\xa1\xeb\xd6\xb2\x4a\xed\x0c\xf8\xf9\x19\xf7\x97\x21\xa9\xac\x82\x7e\x79\x39\x51\x7f\x72\x64\xd6\x45\x76\x3d\xf6\x0f\xd9\x97\x7f\x52\xe9\xf5\x13\xcb\x10\xda\x84\x5f\x74\x79\xfd\x1b\x00\x00\xff\xff\xc2\x92\x0a\x40\x7c\x06\x00\x00")

func templatesConnectionConnectTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesConnectionConnectTemplate,
		"templates/connection/connect.template",
	)
}

func templatesConnectionConnectTemplate() (*asset, error) {
	bytes, err := templatesConnectionConnectTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/connection/connect.template", size: 1660, mode: os.FileMode(420), modTime: time.Unix(1490219988, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesConnectionConnectionTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\x41\x4f\xdc\x4e\x0c\xc5\xef\xfb\x29\x9e\x10\xc7\xfd\x87\xc3\xff\x86\xd4\x03\x62\x11\x42\x20\x40\xed\x4a\x55\x6f\x78\x33\x26\x19\x98\xd8\xd1\x8c\xb3\xdb\x15\xca\x77\xaf\x66\x92\x6d\xd3\xf6\xda\xe3\x78\xec\xf7\x6c\xff\xdc\x53\xfd\x4e\x0d\xa3\x56\x11\xae\xcd\xab\xac\x56\x17\x17\xb8\x56\xc7\x68\x58\x38\x92\xb1\xc3\xee\x08\x6b\x19\xf7\xda\x91\x38\xdc\x2a\xbe\x6c\xee\x71\x3b\x7d\x6b\xac\xb0\x79\xc2\xe3\xd3\x16\x37\x9b\xbb\xed\x5c\x7e\x52\x83\x4f\xa5\xf4\x97\x3e\x74\xf7\xc6\xb5\xc1\x5a\xb2\xf2\xe5\x78\xcf\x41\x7b\x8e\x38\xf8\x10\x40\xce\xc1\x14\x87\x96\x05\x5e\x8c\x9b\x48\xe6\xa5\x01\xc1\x5a\x1f\x1d\x7a\x8a\x76\xcc\x26\x57\xcf\x77\x15\xae\x9c\x03\xc9\x11\xef\x5e\x1c\xf4\x15\x41\xa5\x41\xf0\x7b\x76\xd0\x88\x7a\x48\xa6\x1d\xfe\x3f\x95\xfd\xdd\x46\xca\x1e\x9a\xa5\x13\x92\xc5\xa1\xb6\x2a\x6b\xdf\x50\xdd\xc2\x4b\x32\x92\x9a\xb3\xee\x22\x01\x5f\xef\x1e\x1e\xb0\x63\xa4\x96\x22\x3b\x34\x41\x77\x14\xc2\x71\x8d\xa4\x25\x3c\x44\xce\x13\xe4\x41\xba\xc1\xf8\x3b\xa7\xdc\x0b\x99\x76\xbe\xce\xe2\x79\x56\xca\x3d\xa4\x3c\x65\x64\x08\xb3\x63\x57\xad\xec\xd8\xf3\x72\x77\xb3\xdf\xc7\x0a\x00\xae\xcb\x2c\xcf\x14\xa9\x4b\x25\xf0\xf1\xf1\x1f\x22\x49\xc3\x38\x97\x35\xce\x7b\x5c\x7e\x42\xb5\xa8\x1e\xc7\x92\x36\xa5\xe2\xbc\xaf\x1e\xa9\x63\x8c\xe3\xfc\xda\x66\xb3\x71\xc4\xcb\x5b\x52\xb9\x3c\x9b\x82\x9f\xe9\x30\x67\x9d\xbd\xfc\x34\x61\x71\x59\x6c\x2c\x68\x37\x64\x74\x82\x3a\xf7\x57\x48\xb6\x1a\xdc\x14\x8d\x74\x58\xee\xb9\x2f\x1d\xe3\x35\x6a\x57\xbe\xbd\xd4\xda\x65\xa0\x1d\xa7\x44\x0d\x67\xd1\x6d\xde\x6e\xa1\xbf\x63\xd8\x10\x85\xdd\xc4\x85\x10\x99\xc2\x52\x6e\x3e\xc5\x7c\x80\x71\x10\xf3\x1d\x57\xf8\xa6\x03\x52\xab\x43\x70\x10\xde\x73\x84\xf3\x91\x6b\x0b\xe5\x4c\xf2\x72\x33\x8e\x21\xf1\x44\x71\x02\xbf\x86\x4a\x98\xb4\x22\x37\x43\xa0\xb8\x70\xa9\x70\x95\x90\x86\xba\x5d\x83\xf6\xea\x5d\x66\x59\x6e\x50\x8e\xe8\x63\xe6\x67\x9e\x53\x56\xf5\x36\x63\x2b\x7b\xf9\x0d\xd8\x82\xcf\x9f\x6c\xfe\x39\x9a\x1f\x01\x00\x00\xff\xff\x86\xbf\x40\xa5\xc7\x03\x00\x00")

func templatesConnectionConnectionTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesConnectionConnectionTemplate,
		"templates/connection/connection.template",
	)
}

func templatesConnectionConnectionTemplate() (*asset, error) {
	bytes, err := templatesConnectionConnectionTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/connection/connection.template", size: 967, mode: os.FileMode(420), modTime: time.Unix(1490288327, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServerHttpHandler_xTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x56\x5d\x6f\xdb\x3a\x12\x7d\x96\x7e\xc5\xac\x80\xed\xda\x85\x2b\x61\xfb\xe8\x45\xb0\x68\x93\xa0\x0d\xda\x26\x41\x92\x6d\x1f\x0b\x9a\x1a\x4b\x5c\x53\x1c\x5d\x72\x14\x5d\x23\xf0\x7f\xbf\x18\x52\x76\x72\x0b\xf7\xf3\xa5\x79\x8a\xc8\xe1\x9c\x33\xc3\x33\x87\xee\x95\xde\xa8\x06\xa1\x65\xee\xf3\xbc\xaa\xe0\x94\x6a\x84\x06\x1d\x7a\xc5\x58\xc3\x6a\x0b\xdc\x22\xbc\xa3\x4e\xb9\x1a\xde\x10\xdc\x9e\xbd\x83\x37\x69\x9b\x7c\x09\x67\x57\x70\x79\x75\x07\xe7\x67\x17\x77\x79\x6e\xba\x9e\x3c\xc3\x2c\xcf\x8a\x75\xc7\x45\x9e\x15\xe8\x34\xd5\xc6\x35\xd5\xff\x03\xb9\x22\x07\x00\x28\x0c\x55\x86\x06\x36\x76\xfa\x76\xc8\x95\xc0\x17\x79\xfa\x7e\x78\x80\xf2\x3a\xd1\xba\x21\x62\xd8\xed\x2a\xa5\xd9\x90\x0b\xc5\x57\x03\x34\x39\x87\x31\x28\xc5\xf4\x96\x1a\x28\x1a\xc3\xed\xb0\x2a\x35\x75\xd5\x26\x16\x50\xf5\x76\x68\x8c\x7b\x11\xea\xcd\x8b\x86\x5e\x56\x96\x9a\x29\xe7\x77\x43\x3b\x0c\x41\x35\x58\xe4\xf3\xd8\x26\xe1\x70\xa9\x3a\x84\xdd\xee\xad\x72\xb5\x45\x0f\x26\x80\x82\x36\x7d\xe4\xbc\xed\xf1\x58\x50\x60\x3f\x68\x86\x87\x3c\xd3\xf0\xfc\x91\x75\x79\xaa\x74\x8b\xf9\x2e\xe6\xbe\xc4\xf1\xc8\x49\x8f\x3c\x78\x27\x18\x0e\xc7\x23\xa9\xf3\xf5\xe0\xf4\xf1\xb3\xb3\x23\x58\x73\x78\x7e\x04\xe4\x21\xcf\x12\x0e\x3c\xdb\xef\x1e\x36\x1f\xf2\x2c\xd3\x4b\xd0\x8b\x3c\xdb\x4d\x4c\x6f\xd1\xdf\xe3\xdb\xbb\xbb\xeb\xa9\xee\x10\xc5\xe2\xf1\x8f\x01\x03\x87\xc4\x68\xd6\x1e\x43\x9a\x3f\x9e\x9d\x8d\x51\x7d\xe5\x0d\x86\x9e\x5c\xc0\x4f\xde\x30\xfa\x05\x78\x78\x3e\xad\xc7\x74\xf3\x44\x2e\xc5\xc0\xf2\x04\xa6\x1b\x39\x9c\x13\x7e\xb7\xac\x78\x08\x4b\x28\x68\x53\x44\x9e\xd9\x6a\x01\xe8\xbd\xc4\x27\xd1\x95\x37\xa8\xea\x57\xd6\xce\x7c\xf9\x9a\xea\xed\x3c\xcf\xaa\x0a\xee\xae\xce\xae\x60\x08\x08\x0a\xac\xe9\x0c\x83\x47\x55\xa3\x07\x26\xe8\x3d\xde\xa3\x93\x95\x40\x83\xd7\x08\x8a\x59\xe9\x4d\xf8\x6f\x9e\x99\x75\x4c\xfd\x8f\x13\x70\xc6\x0a\xbb\x6c\x2c\x23\xf9\xb7\xf1\xf4\x2c\xb2\x4f\x8c\x2e\x1c\xa3\x77\xca\xc6\xa2\xfd\xb9\xf7\xe4\xe7\x79\x96\x79\xec\xed\xf6\x93\xe1\x36\xae\xcc\xf6\xd5\x2d\x60\x8c\xac\x53\x88\x5c\x47\x2c\x25\x31\x2e\x4f\x2d\x05\x9c\xcd\x23\xbe\x2f\x3f\x20\xb7\x54\x0b\x89\xe2\xfa\xea\xf6\xae\xf8\x36\x8f\x14\x7d\x49\xfc\xca\x5a\x1a\xb1\xfe\x1e\x89\x75\xc7\x65\x5c\x5e\xcf\x8a\x2e\x21\xfd\x33\x88\xd2\x07\x17\x86\x5e\xa6\x1d\x6b\x58\x93\x87\x34\x2d\xb0\x1f\xd4\xc5\x81\xd9\xfc\x8b\x22\x3a\xb9\x8a\x67\xfb\xbb\xfb\xf8\xef\x87\xdd\xa1\x91\xcb\x13\x10\x9b\x28\xff\xe7\x3a\xe5\x43\xab\xec\x6c\xb5\x80\x6e\xfe\x9f\x1f\xee\xf2\x6b\x55\xef\xc5\xf2\xd3\xcd\xad\x2a\x38\xe0\x46\x15\xaf\xa8\xde\x82\x71\x4c\x49\xd3\xa6\x69\x79\x9a\xde\x18\xfc\x09\x41\xd3\x60\x6b\x50\xf7\x64\xea\x18\xf3\x12\xf0\x4f\x8d\x21\xc4\x2a\x60\x9f\x4b\x2b\x6b\x03\x18\x07\x2d\x7a\x84\xd1\x70\x2b\x2a\x23\x06\x5a\x43\x18\x0d\xeb\xf6\x85\x56\xc1\xb8\x06\xc8\x81\xd8\x46\x88\xf9\x57\x03\xcb\x21\x6e\x4d\x00\xad\x84\xb6\x40\xf4\xe8\xd7\xe4\x3b\xe5\x34\x42\xa3\x8c\x93\xab\x70\xc4\xc0\xad\x62\x68\x3c\x2a\x5e\x80\x18\xb5\xe1\x7f\x05\xb0\xc2\xa5\xd9\x7b\x35\x68\x71\x76\x26\xe8\x94\x71\xac\x8c\x8b\x30\x4c\x50\x13\x18\x4e\x40\xa3\xda\x96\x8f\x03\x61\xd6\x30\x22\x84\x21\xf4\xa8\xa7\x80\xe8\x71\x2b\x62\xb6\xe8\x50\x6f\x16\xd0\x7b\x5a\x1b\x8b\x92\x41\x70\xc3\xa8\x7a\x58\x29\xbd\x81\xa9\x6f\x8f\x15\x22\xa8\xbe\xf7\xa4\x74\x9b\x67\xc6\xf5\x03\x47\x21\x4c\x82\x29\x9f\x38\xc4\x85\x6c\x7e\x53\x16\x5d\x1a\x84\x18\xb8\x80\x98\xec\x27\x54\xf2\xab\xb3\x08\xd3\xdf\x13\xd1\xe8\x3a\x16\xf1\xc4\x5b\xcf\x14\xab\x1f\xe1\x7e\x7a\x38\xb2\x00\x5d\xff\x1e\xf6\x56\xe8\xc9\x4b\x59\x5e\xe2\xf8\x7a\x58\xaf\xd1\x63\xfd\x9e\x9a\x06\xfd\x2c\x1d\x90\xc2\x0e\xfe\xd9\x96\xba\x7c\x83\x3c\xd3\xf5\x02\x6c\xda\xff\xd2\x01\xf7\x20\x3f\xcf\x3e\xd1\x2d\xdf\x53\x03\x27\x60\xcb\x5b\xf6\xc6\x35\xb3\x5f\xa9\x4c\xfe\x4d\xf3\x7c\xae\x74\xbb\x7f\x8c\xc0\x21\xd6\xfb\xc7\xd3\xc6\x1a\x45\xa2\x5a\xf5\x3c\x78\x4c\xf3\x42\x03\xf7\x03\x3f\xea\xbf\xa3\x7b\x4c\xb2\x67\x02\x05\x61\xeb\x74\x79\x4d\x64\xa3\xd2\x1b\xaf\x56\x40\x0e\x61\xed\xa9\x13\xa9\x7b\x04\x14\x40\x36\x5d\x1c\xb3\xa0\xee\x51\x46\x5a\x59\x4b\x5a\x9e\x8b\xaa\x92\x51\x8d\x7b\xca\x6d\xe5\xa8\xbc\x32\x32\xf8\x82\xb1\x84\x33\x8a\xa3\xdc\x10\xa8\x3a\x2e\x1b\xf7\x04\x53\x8c\x83\x06\x86\xc1\xd5\xe8\x03\x2b\x17\x43\x5a\x1a\x05\x7b\x1b\xb3\x8f\xe4\x37\x91\x5b\x5c\xa5\xc3\x6c\x0a\x19\x44\xb9\xac\x29\xb1\x60\x8f\xc6\x5a\xb1\xeb\x41\x59\xbb\x85\x4e\x6d\xe4\xf1\xab\x4d\x14\x81\xb8\xcb\x72\x0e\x17\xd2\x14\xf6\x46\x6f\xb6\x60\x8c\xd7\x93\x35\xb4\x8a\x03\x8c\xed\xf6\x89\x23\xc4\x76\x09\xb2\x14\x90\x3e\x2f\xcf\xf3\x2c\x0d\xb7\x68\xe7\xc8\x98\xbf\x8a\x4b\x32\x2b\xa9\xef\x07\x9d\xa5\xd8\xf2\x66\x70\xb3\xa4\x3f\x93\xe6\xdc\xce\x7f\xc3\x93\xfb\x75\x61\x1e\xb6\xae\x22\x7d\x38\x39\xe8\x67\xf4\xaa\xef\xd1\xff\xed\xa1\x7b\xfc\x71\x13\xf7\x84\xb9\xf8\xc0\x12\x0e\x04\xf2\x2c\xbb\xdb\xf6\xb8\x84\x22\x35\xe0\x73\x60\xe5\x59\x7e\xc5\x64\x1f\xd1\x07\x43\x6e\x09\xc5\xfd\xcb\xc7\x9f\x35\x9f\x61\x32\x97\x0f\x93\xb5\x4c\xb8\x73\x88\xb7\x24\x82\x4c\xaf\x43\x2b\x77\x3e\x22\x68\xe5\xa2\xd9\xaf\xd3\xcd\xa1\xf7\x22\xcb\xaf\x36\xf0\xea\xdd\xfc\xb0\x3b\x5b\xcd\xf3\xdd\x5f\x01\x00\x00\xff\xff\x18\xe7\x97\x6b\x2c\x0c\x00\x00")

func templatesServerHttpHandler_xTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerHttpHandler_xTemplate,
		"templates/server/http/handler_x.template",
	)
}

func templatesServerHttpHandler_xTemplate() (*asset, error) {
	bytes, err := templatesServerHttpHandler_xTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/http/handler_x.template", size: 3116, mode: os.FileMode(420), modTime: time.Unix(1490638445, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServerHttpServerTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\x4d\x6f\xe3\x36\x14\x3c\x93\xbf\x62\x20\x04\x85\x14\xa8\x52\xdb\x63\xb0\x41\xb1\x5d\x2f\x36\xc5\x36\x71\x60\x1b\xd8\x63\x41\x4b\xcf\x12\x77\x25\x52\xe5\x47\x65\x43\xd0\x7f\x2f\x48\x25\xb6\xae\xf5\xc9\xe2\x70\xe6\xf1\xcd\x7b\x33\x88\xea\x87\x68\x08\xad\x73\x03\xe7\x65\x89\x4f\xba\x26\x34\xa4\xc8\x08\x47\x35\x8e\x17\xb8\x96\xf0\x55\xf7\x42\xd5\xf8\xa2\xb1\xdf\x7c\xc5\x97\x05\xd6\xa6\xc0\x66\x8b\x97\xed\x01\x9f\x37\x7f\x1e\x38\x97\xfd\xa0\x8d\x43\xca\x59\xa2\xc8\x95\x41\x33\xe1\x2c\x71\xb2\xa7\x84\x73\x96\x4c\x13\x8a\xd7\xa5\xe0\x4e\x6b\x87\x79\x2e\x2b\xad\x14\x55\x4e\x6a\x95\xf0\x2c\x3e\xe0\x85\xc6\x3d\x99\x7f\xc9\xc0\x90\xf3\x46\x59\x08\x28\x1a\xe3\x0b\x61\x23\xc2\x4f\x5e\x55\xb7\x8b\x69\x85\xfb\x9b\x4e\xf1\x49\x54\x2d\x65\x48\xef\x03\xa3\x58\xae\xe4\x20\x63\xb4\xc9\x30\x71\x56\x96\x38\x6c\x37\x5b\x90\xa8\x5a\x0c\x9d\x6f\xa4\x82\x22\xaa\x43\x21\xaf\xe4\x3f\x9e\x10\xdb\x70\x1a\x74\x1e\xb4\xa5\x48\x39\x7a\x07\xa9\x1c\x19\x25\xba\xee\x92\xa3\x12\x0a\xa2\xeb\xe0\x2d\x41\xa0\xd2\x7d\xaf\x55\xe4\x71\x26\xea\xda\xe0\xe1\x11\xc9\x43\x68\xf8\xe9\x70\x78\x2d\x5e\x83\xe0\x3c\x27\xb7\xea\xbd\xf8\x41\xc1\x5a\x4b\xa8\xb4\x3a\xc9\xc6\x1b\x71\xec\x08\x56\xf7\xd4\xea\x91\x33\x43\xa2\x3e\xc8\x9e\xb4\x77\x41\x2c\x98\x58\xec\xa9\xd2\xaa\xc6\xfd\xf2\xb5\xf1\x46\x84\x8e\xd3\x6b\x99\xdd\x8d\x33\xcf\x19\x67\xa3\x91\x8e\xfe\xaf\xc8\xb7\x15\x29\xa8\x70\xd6\xfb\x73\x60\x47\x3f\xdf\x5d\x7f\xf6\xe7\x34\xe3\x00\x50\x96\xd0\x8a\x70\xd2\x66\xb1\x54\xc4\x31\x44\x68\x9a\x7e\x86\x11\xaa\x21\xdc\xa9\x1c\x77\x43\x50\x29\x3e\x46\xdc\x62\x9e\xe3\x9d\xde\x9f\x8b\x27\xa1\xea\x8e\xd2\xa4\x5c\xb8\xb6\x9c\x26\xdc\x0d\xc5\x4e\x8c\x2f\xa2\xa7\x60\x5c\x1e\xc6\xbd\x9c\x86\xa3\x79\x5e\x28\x26\xad\xb2\xec\x5a\x8a\x54\x1d\x54\x39\xb3\xa1\xd0\x4f\xab\xf9\x4f\x9c\xb1\x8f\x75\x6d\x1e\x70\xfb\x85\x31\xe5\x9c\xb1\x37\xa5\x2b\xd4\xfb\x73\x38\x5e\x79\x19\xa1\xd5\x3c\x02\xbc\x76\x29\xe0\x6b\xab\x03\xfe\x2c\xce\x4f\x24\x6a\x32\x7f\x5c\x1c\xd9\x07\xfc\x8a\x0f\x1f\xf0\xdb\x2f\x39\x67\x73\x98\x6d\xd8\x6c\xd8\x1c\x4a\x76\x7c\x8e\x7b\xff\x97\x6c\x5a\x87\xd1\x88\x61\x20\x03\x61\xb4\x57\xf5\x5b\x04\xa4\x6a\x20\xd4\xb2\xc2\x18\xa5\x6b\x63\x26\x0d\xd9\x41\x2b\x4b\xd0\xc7\xef\x54\x39\xe8\x90\x99\x98\xe3\x18\x0f\x43\x43\x77\xf9\x26\x5d\xfb\x39\xd0\xd2\xeb\xed\x9e\xac\x15\x0d\x15\xbb\xb7\x83\x1c\x4b\xb6\xae\x07\xb1\xb3\x25\x31\xab\xd4\xbc\xf3\x8b\x28\x87\xc7\x00\x2d\xff\xd3\x6c\x85\xee\x9d\x70\xde\xe2\x11\x49\xa4\x26\x9c\x1d\x73\xfc\x1d\xc6\xf1\xdd\x6a\x55\x3c\x0b\x63\x5b\xd1\x5d\x5f\x93\x85\xed\x39\xb4\x64\x08\xd2\x42\x69\xd7\x86\x5e\x47\x8a\xf1\xaa\x35\xe4\x09\xae\x95\x16\x27\x21\x3b\xfb\x3b\x67\xe3\xb2\x9d\xe9\x31\xe3\xf3\x7f\x01\x00\x00\xff\xff\x5a\x40\xdf\x45\xbb\x04\x00\x00")

func templatesServerHttpServerTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerHttpServerTemplate,
		"templates/server/http/server.template",
	)
}

func templatesServerHttpServerTemplate() (*asset, error) {
	bytes, err := templatesServerHttpServerTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/http/server.template", size: 1211, mode: os.FileMode(420), modTime: time.Unix(1490288336, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTriggersTrigger_xTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x4d\x8f\xdb\x46\x0c\x3d\x5b\xbf\x82\x15\xb6\x81\x1c\xc8\x32\x9a\xa3\x1a\x5f\xda\x0d\x82\x20\xc1\x6e\xb1\x6b\xa4\xc7\x66\x2c\x51\xf2\xc4\xd2\x50\x9d\x19\xd9\x75\x0d\xfd\xf7\x62\x3e\x24\xdb\xbb\xb2\x37\x58\xa0\x3e\x8d\x48\x8a\x7c\xef\x91\x43\xb9\x61\xd9\x86\x95\x08\x5a\xf2\xb2\x44\xa9\x82\x60\x3e\x87\xdf\x29\x47\x28\x51\xa0\x64\x1a\x73\x58\xed\x41\xaf\x11\x3e\x53\xcd\x44\x0e\x1f\x09\x1e\x6f\x3f\xc3\x47\xe7\x26\x99\xc0\xed\x3d\xdc\xdd\x2f\xe1\xc3\xed\xa7\x65\x10\xf0\xba\x21\xa9\x21\x0a\x00\x00\x9a\x8a\x4a\x08\x4b\xae\xd7\xed\x2a\xc9\xa8\x9e\x6f\x6c\x8e\x79\x53\xb5\x25\x17\x33\x95\x6f\x66\x25\xbd\x9b\x57\x54\x86\x36\xfe\xe5\xd0\x9c\xab\x86\xe9\x6c\x8d\x32\x0c\xa6\x41\x70\x38\xc0\x8d\x60\x35\x42\xba\x80\xe4\xce\x1c\xba\x2e\x38\x1c\x66\x20\x99\x28\x11\x6e\x44\x0c\x37\x8d\x75\x7e\x12\x4d\xab\x7b\x2f\x2f\xe0\xa6\x49\x3e\x88\xb6\xfe\xc2\x35\x4a\x56\x19\xc7\x7c\x0e\x2e\xc8\xd8\xd5\x69\x16\x1e\xc3\x8d\x2d\x31\xfa\xd2\x80\xa1\xeb\x96\x4e\x45\x9b\xc6\x98\xb1\xc7\x04\x5c\x01\x13\x80\xa2\xad\xbd\xa8\x5b\x56\xb5\x18\x64\x24\x94\x1e\x32\x5c\x4b\xb0\x00\xf7\xec\x6b\x7f\x35\xaf\xf7\x74\x50\xe4\xd7\x8f\xcf\xd4\xb8\x6f\xf5\x0f\xc8\xe1\xa3\x5e\xa9\xc7\xc0\xc6\xa5\x79\x85\x1e\x70\x35\xc5\xab\x15\xf1\x20\x6d\xa2\x73\xc9\x21\xc7\x82\x0b\x54\x76\xde\xb9\xb5\x14\x24\xed\x53\xff\xc2\x11\x53\xa0\xf7\xcd\x98\xdd\x65\x52\x5a\xb6\x99\x86\x83\x9d\xeb\xd3\x1e\xc0\xf9\x48\x76\x9d\x8f\x30\x62\xf6\xd4\xdc\xd3\xd2\xe4\xef\x3a\xf8\xf6\x5d\x91\x48\x43\x67\x7c\x60\x3b\x1f\x15\x7e\x1b\x72\x7b\x62\x17\xa8\xf9\x36\x9e\x72\x23\x67\x7a\x4a\xee\x45\x6e\x3e\xd5\x0f\x90\x3b\x4e\xd8\xff\x44\xef\x08\x0a\x58\xbf\xbe\x2e\xc1\x3e\x07\xfc\x77\x8b\x2d\x42\xb6\x66\x02\xde\x5e\xa2\x68\x03\x8f\xcb\xe6\xe4\x98\xdc\x0e\x47\x8f\xe8\x0e\x77\x23\x25\x25\xea\x56\x0a\x05\x0c\x04\xee\xe0\x70\x78\xea\x6f\x24\x35\x28\xab\x3d\x70\xc1\x35\x67\x15\xff\x17\x73\x30\x0b\x56\x22\xcb\xf7\xa0\x09\x64\x2b\x92\xa0\x68\x45\x36\x5e\x21\xca\xc7\x51\x4d\xc7\x58\x79\xea\x0e\x14\xbc\x79\x1e\xe0\xfc\x83\x3c\x29\xd4\x6c\x83\xd1\x75\x91\x62\xf8\x65\x1a\x0f\xef\x1d\xc1\xa4\x90\x3b\x73\xdf\xb3\x47\xd3\xc1\x1d\xaf\x2a\x50\xed\xaa\xe6\x1a\xd8\xe5\xd9\x22\xa1\xc9\xdf\x3f\x8d\x52\xb0\xca\x01\x8a\x61\xb7\xe6\xd9\xda\x78\x04\xac\xda\xa2\x40\xa9\xc0\x47\xe2\x3f\xa7\x91\x4e\xb2\x48\x8f\xe1\x9e\x5a\x28\x11\xb9\xe4\x05\xcb\xf0\xd0\x4d\xbd\x36\x3a\x71\x83\xf1\x7e\x06\x94\x44\x6f\x2f\x5c\xa3\xa9\xa7\xf4\x80\xcc\x53\x6a\xa8\x31\xbb\x8c\x6b\xac\x81\x8a\x62\x14\xbb\x26\x58\x21\xac\x99\xc8\x31\x7f\x0d\x6a\x53\x2d\x1a\x6d\xac\x57\xed\xac\xbd\xef\x67\x9e\x4b\x2f\xbf\xa6\xc6\x61\xcd\x2a\x52\x78\x45\x5d\x47\x48\xe2\x16\x85\xb6\x73\xfb\x9d\x56\x0a\x0a\x49\x35\xa0\x79\x81\x8b\x32\x79\x41\x5f\x4d\x4d\xd4\x4b\x6a\xcb\x45\x1e\xcc\x74\x40\xc3\xa4\x36\x84\xbe\x50\x0f\x6b\x55\x51\xb6\x89\xed\xe4\x73\x51\x42\x2b\x34\xaf\xcc\xc5\xe1\x15\xd4\xa8\x94\xf9\x83\xc2\x15\x48\xcc\x90\x6f\x31\x8f\xa1\x46\x26\x4c\xe0\x73\x22\xb0\x63\xca\x95\xcd\x5f\xc2\x79\x82\x22\xaa\xec\x5f\x95\xe4\x0b\x39\x27\x4a\x49\xfd\x95\x29\xec\x69\x62\x8e\x7e\x6b\xa6\x0b\xd0\x89\xeb\xc8\x30\xfc\xbc\xe8\xbd\x8b\x85\xc5\x7d\xbc\x4f\xe6\x37\x9f\xc3\x72\xed\x76\x8e\xc0\xea\x04\x64\x0c\x3b\x84\x92\xb4\xfd\x1a\xd6\x8d\xde\xcf\x9c\x7d\x66\xb4\x88\x41\x91\xf1\xaf\x18\xaf\x4c\x7a\xd8\x71\xbd\x06\x41\xc0\x95\x6a\x51\x9d\x55\xf0\xad\x17\xbc\x1a\xcc\x5d\x70\x74\xaa\x86\x84\xb2\xdf\x6c\x2f\x68\xf2\xe0\x6d\xe7\x40\x1f\x35\xd3\xad\x4a\x21\xa4\x4d\x18\x9f\x79\xdc\xa0\xa5\x9e\x66\x3c\x52\x65\x27\x59\xd3\xa0\x34\x45\xde\x3c\xad\xf2\xa7\xf3\x9d\x17\xfb\x8d\xf2\x7d\x3a\x80\x3b\x2f\x67\xbe\x0e\x29\x84\x7e\xb1\xff\xa5\x4c\xbb\x9e\x20\xfa\x8a\x52\x71\x12\x29\x84\xdb\x77\xe1\x29\xa0\xc9\x84\x17\xa6\x87\xae\x53\x27\x4b\xd2\x5e\x7e\x0f\x73\xfa\xab\x0d\xf9\xa9\x6f\xd7\x64\x32\x31\x23\xf0\x87\xe4\x42\x17\x51\xf8\x60\x86\x0d\xb7\x98\xfb\x61\x50\x28\xec\x6c\x7a\x40\xbd\x8c\x29\xfc\xac\xc2\xd8\xc4\x4c\x4d\x06\xdf\x05\x94\x32\x98\x4c\xba\x60\xd2\x05\xdd\x7f\x01\x00\x00\xff\xff\x2b\x55\xb4\x25\x62\x0b\x00\x00")

func templatesTriggersTrigger_xTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesTriggersTrigger_xTemplate,
		"templates/triggers/trigger_x.template",
	)
}

func templatesTriggersTrigger_xTemplate() (*asset, error) {
	bytes, err := templatesTriggersTrigger_xTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/triggers/trigger_x.template", size: 2914, mode: os.FileMode(420), modTime: time.Unix(1490639621, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTriggersTrigger_x_runTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x54\x4d\x6b\xdb\x40\x10\xbd\xeb\x57\x3c\x7c\x28\x52\x70\xa4\xd0\x63\x20\x85\x92\x53\x20\x4d\x42\x1a\x0a\xa1\xf4\xb0\x91\xc6\xf2\xe2\xd5\x8c\xd8\x8f\x14\x63\xf4\xdf\xcb\xae\x24\xd7\x21\x89\x7b\x29\x14\xea\x83\xd1\x6a\xe6\xcd\xc7\x7b\x6f\xd5\xab\x7a\xa3\x5a\x82\xb7\xba\x6d\xc9\xba\x2c\xd3\x5d\x2f\xd6\x23\xcf\x00\xa0\x37\xd2\x62\xd1\x6a\xbf\x0e\x4f\x65\x2d\x5d\xb5\x91\x4e\x71\x53\xf5\x26\xb4\x9a\x4f\x5d\xb3\x39\x6d\xe5\x63\x65\xa4\x5d\xa4\xfc\xc5\x6e\x87\xf2\x6e\xac\x79\x2f\xe2\x31\x0c\x55\x2d\xcc\x54\x7b\x2d\xbc\xc8\x8a\x2c\xab\x2a\x7c\x53\x46\x37\xca\x13\x7e\x6a\x63\xf0\x3c\x9f\xfc\x9a\xa0\xb9\x0f\x1e\xda\xa1\xb7\xd2\x93\x35\x5b\x38\xf2\xa1\x2f\xb3\x55\xe0\x1a\xb9\xc6\x49\xec\x70\xa3\x3a\xc2\x30\x3c\x8c\x43\x5f\x45\x4c\xb1\xaf\x9a\x17\xf8\xfe\x83\xac\x15\x8b\x5d\x1a\x2a\x3d\x3b\x9c\x5f\xa0\x53\x1b\xca\xa7\xe0\x12\x67\x45\x0a\xa7\xbf\xaa\xc2\x65\x70\x5e\xba\x79\x1c\x2d\x8c\x5a\x1a\xc2\x9a\x2c\xcd\x29\x9f\xfb\x9e\xb8\x99\x0b\x2a\x07\x26\x6a\xa8\xc9\xe6\xb8\x25\x1f\x2c\xa7\x93\x5e\xc1\x10\xe7\x63\x6a\x81\x4f\x38\x9b\xa6\x89\xbf\x31\x6f\xaa\x93\xde\x0e\xd9\xc1\x7b\xd6\x26\x1b\xfe\xc4\x94\x04\x7f\x94\x2a\x79\x8b\xaa\xdb\x04\xfa\x3f\xb9\xba\x0f\x0c\x1b\xd8\x25\x76\x26\x3f\x43\x71\x83\x27\x23\xf5\xc6\x21\xb0\xd7\xe6\x45\xb0\x17\x63\x34\xb7\x91\xc3\x5a\xba\xde\x90\x27\x88\x9d\x5b\x8d\x34\xfa\xb7\x68\x2c\x62\xb3\x3c\x1a\x1b\x27\xbf\xed\x5d\x5e\xee\x1f\x97\x93\x91\xf7\xd8\x97\x66\x5d\x22\xde\xab\x78\xb9\xca\x6b\x19\x0b\x1e\x8a\x50\x55\xf8\xa2\x36\x04\x17\x2c\xc1\x0b\x6e\x6f\xae\x1f\x11\x1c\x45\x54\x79\x67\x35\x7b\xc3\x69\xb3\xfd\x79\x15\xd3\x62\x4d\xc5\x5b\xd4\xa3\x38\x1d\x39\xa7\x5a\x72\xcb\x94\xda\x08\x58\x7c\xaa\x12\x29\x60\xb1\x9d\x32\x68\x13\xaa\x25\x9b\xfa\xae\xf6\x13\x4c\x53\x3c\x4a\xb0\x07\xca\x1e\x86\xbc\xee\xa8\xfc\x6a\x88\xfa\x3c\xad\x5a\x5e\xb1\x27\xfb\xac\x4c\x11\xa3\x57\x2b\x6c\x23\x76\x66\x3a\x9a\xc9\xa5\xe6\xb2\x82\x82\x8b\x38\xe8\x09\xb1\x44\xe0\x5a\xba\x8e\xd8\xc3\xaf\xb5\x83\xd1\x4c\xc7\x94\x7e\x20\xe7\x5f\x49\xbd\xc4\x53\xf0\x68\x84\x5c\x5a\x34\x89\x9e\x36\x17\x36\xdb\xd7\xc6\x98\xb5\x17\xa6\xb4\xcb\x71\xb9\x63\xc7\xbf\xab\x77\xfe\xee\xed\x5c\x8e\x5e\x28\xfe\xb1\x19\xa6\xef\xcb\xf9\x05\x3e\xbc\x37\xe9\x6e\xc8\x8e\x18\x65\x92\x4d\xa6\xa5\x92\x7c\xbf\x02\x00\x00\xff\xff\x2e\x80\x1f\x75\x6f\x06\x00\x00")

func templatesTriggersTrigger_x_runTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesTriggersTrigger_x_runTemplate,
		"templates/triggers/trigger_x_run.template",
	)
}

func templatesTriggersTrigger_x_runTemplate() (*asset, error) {
	bytes, err := templatesTriggersTrigger_x_runTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/triggers/trigger_x_run.template", size: 1647, mode: os.FileMode(420), modTime: time.Unix(1490283148, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTypesType_xTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x51\xbb\x6e\xf2\x30\x18\xdd\xfd\x14\x47\x28\xd3\x2f\xfe\x64\x47\x62\x2a\x14\x21\x2a\x90\x0a\xea\x8c\x89\xbf\xd0\xb4\x8e\x1d\xd9\x4e\x2b\x64\xe5\xdd\x2b\x1b\x03\x29\x6a\x97\x6e\xdf\xed\x5c\x7c\xdc\xf2\xf2\x9d\x1f\x09\xee\xd4\x92\x65\xac\x28\xf0\xa0\x05\xe1\x48\x8a\x0c\x77\x24\x70\x38\xc1\xbd\x12\x56\xba\xe1\x4a\x60\xa1\xb1\x9d\xad\xb0\x38\xaf\xb5\xc9\x31\xdb\x60\xbd\xd9\x61\x3e\x5b\xee\x18\xf3\x1e\xd9\x9a\x37\x84\xc9\x14\x79\x2c\xfa\x9e\x79\xff\x1f\x86\xab\x23\x21\x53\x63\x64\x6d\x5c\x3e\xd6\x24\x85\xbd\x5b\xd7\x63\x64\x11\x9b\xb5\xf9\x5c\x75\xcd\x53\xed\xc8\x70\x19\xae\x8a\x02\x57\xf2\xbe\x0f\x25\x5d\x04\x50\x5b\x70\x05\x52\x5d\x93\x3c\x7f\x70\xd9\x11\x2b\xb5\xb2\xee\x77\xd4\x14\xe7\x3e\x89\xbc\x04\xcc\xc5\x0f\x29\x71\xab\xc2\x30\xe9\x7f\x93\x44\xd9\x59\xa7\x9b\x18\xdd\x20\x30\x5d\x55\xd0\x55\x0c\xcd\xb6\x54\xb2\xb8\x1e\x62\xad\x33\x5d\xe9\xe0\x19\x00\xfc\x18\xce\x56\x1b\x47\xe2\x16\xd1\xe5\xb0\xae\x62\x32\xcd\x81\xc4\x6d\x9c\xa6\xeb\x4e\x4a\x7e\x90\x41\xe1\x9f\xf7\xc9\x77\x78\x61\x9b\xef\xc2\xdf\x2e\x95\x23\xa3\xb8\x0c\xcd\x00\x4c\xd2\x0e\xdb\x40\x94\x6c\xfe\x95\x19\xfb\x37\xab\xd5\x64\x74\xbe\x78\xe6\x9f\x89\x70\xb4\xbf\xbe\x23\x85\x7a\xd7\xf6\x5f\x01\x00\x00\xff\xff\x97\x7d\xb6\x0a\x8c\x02\x00\x00")

func templatesTypesType_xTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesTypesType_xTemplate,
		"templates/types/type_x.template",
	)
}

func templatesTypesType_xTemplate() (*asset, error) {
	bytes, err := templatesTypesType_xTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/types/type_x.template", size: 652, mode: os.FileMode(420), modTime: time.Unix(1490288348, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesVendorGitkeep = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func templatesVendorGitkeepBytes() ([]byte, error) {
	return bindataRead(
		_templatesVendorGitkeep,
		"templates/vendor/.gitkeep",
	)
}

func templatesVendorGitkeep() (*asset, error) {
	bytes, err := templatesVendorGitkeepBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/vendor/.gitkeep", size: 0, mode: os.FileMode(420), modTime: time.Unix(1490194044, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/Dockerfile.template": templatesDockerfileTemplate,
	"templates/Makefile.template": templatesMakefileTemplate,
	"templates/actions/action_x.template": templatesActionsAction_xTemplate,
	"templates/actions/action_x_run.template": templatesActionsAction_x_runTemplate,
	"templates/cmd/main.template": templatesCmdMainTemplate,
	"templates/connection/cache.template": templatesConnectionCacheTemplate,
	"templates/connection/connect.template": templatesConnectionConnectTemplate,
	"templates/connection/connection.template": templatesConnectionConnectionTemplate,
	"templates/server/http/handler_x.template": templatesServerHttpHandler_xTemplate,
	"templates/server/http/server.template": templatesServerHttpServerTemplate,
	"templates/triggers/trigger_x.template": templatesTriggersTrigger_xTemplate,
	"templates/triggers/trigger_x_run.template": templatesTriggersTrigger_x_runTemplate,
	"templates/types/type_x.template": templatesTypesType_xTemplate,
	"templates/vendor/.gitkeep": templatesVendorGitkeep,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"Dockerfile.template": &bintree{templatesDockerfileTemplate, map[string]*bintree{}},
		"Makefile.template": &bintree{templatesMakefileTemplate, map[string]*bintree{}},
		"actions": &bintree{nil, map[string]*bintree{
			"action_x.template": &bintree{templatesActionsAction_xTemplate, map[string]*bintree{}},
			"action_x_run.template": &bintree{templatesActionsAction_x_runTemplate, map[string]*bintree{}},
		}},
		"cmd": &bintree{nil, map[string]*bintree{
			"main.template": &bintree{templatesCmdMainTemplate, map[string]*bintree{}},
		}},
		"connection": &bintree{nil, map[string]*bintree{
			"cache.template": &bintree{templatesConnectionCacheTemplate, map[string]*bintree{}},
			"connect.template": &bintree{templatesConnectionConnectTemplate, map[string]*bintree{}},
			"connection.template": &bintree{templatesConnectionConnectionTemplate, map[string]*bintree{}},
		}},
		"server": &bintree{nil, map[string]*bintree{
			"http": &bintree{nil, map[string]*bintree{
				"handler_x.template": &bintree{templatesServerHttpHandler_xTemplate, map[string]*bintree{}},
				"server.template": &bintree{templatesServerHttpServerTemplate, map[string]*bintree{}},
			}},
		}},
		"triggers": &bintree{nil, map[string]*bintree{
			"trigger_x.template": &bintree{templatesTriggersTrigger_xTemplate, map[string]*bintree{}},
			"trigger_x_run.template": &bintree{templatesTriggersTrigger_x_runTemplate, map[string]*bintree{}},
		}},
		"types": &bintree{nil, map[string]*bintree{
			"type_x.template": &bintree{templatesTypesType_xTemplate, map[string]*bintree{}},
		}},
		"vendor": &bintree{nil, map[string]*bintree{
			".gitkeep": &bintree{templatesVendorGitkeep, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

