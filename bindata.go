// Code generated by go-bindata.
// sources:
// templates/Dockerfile.template
// templates/Makefile.template
// templates/actions/action_x.template
// templates/actions/action_x_run.template
// templates/cmd/main.template
// templates/connection/cache.template
// templates/connection/connect.template
// templates/connection/connection.template
// templates/server/http/handler_x.template
// templates/server/http/server.template
// templates/triggers/trigger_x.template
// templates/triggers/trigger_x_run.template
// templates/types/type_x.template
// templates/vendor/.gitkeep
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesDockerfileTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\x4f\x4f\xc3\x20\x18\xc6\xef\x7c\x8a\x37\xbb\x17\x9c\x89\x17\x93\x1e\x66\x8a\xa6\x71\x83\x86\xd4\xa9\x31\x1e\xb0\x45\x42\x18\xd0\xd0\x7a\x98\x0d\xdf\xdd\x2c\xa5\x27\xf5\xc8\xc3\xf3\xe7\xf7\xde\x0b\x7e\x00\x1b\x9c\xf4\x3d\xd1\xa1\x18\x4e\x5f\xda\xf8\xdb\x2b\x7c\x0d\x68\xbf\xbb\xa3\x7b\x08\x51\x4b\x6f\xbe\xe5\x64\x82\x2f\x17\x63\xfe\x19\x7b\x5b\xea\x90\x1f\xd3\x79\x50\xe5\x92\x46\x88\xb2\x23\x3c\xf0\xed\xcd\x91\xb2\x8a\x0b\xfa\xd2\x50\x51\x1f\x28\x6b\xcb\x2d\x42\xe2\x89\x81\xb3\xbd\x89\x50\x0c\x40\xf2\xf2\x12\x1c\xc9\x87\xf1\x68\x57\x55\x80\x81\xe8\x40\xc6\xd8\x91\x79\x06\xdc\xc8\xce\x4a\xad\x44\x08\x13\xa4\x84\x9e\xb9\x78\xac\x6a\xf1\x9f\x25\x25\xb4\x74\xe4\x56\x3c\x0e\xaa\xc3\x67\xe9\x4e\xf0\x4b\xc9\x38\xd2\x2a\x58\xd9\x2f\x42\x74\x50\xc4\xcf\x75\xe0\x72\x4f\x2b\x5e\x1b\x5e\xb3\x16\xde\x36\x7f\x30\x93\x79\xc6\x4c\x3a\x95\xd2\xe6\x1d\xfd\x04\x00\x00\xff\xff\xc4\x7a\x21\x4f\x52\x01\x00\x00")

func templatesDockerfileTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesDockerfileTemplate,
		"templates/Dockerfile.template",
	)
}

func templatesDockerfileTemplate() (*asset, error) {
	bytes, err := templatesDockerfileTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/Dockerfile.template", size: 338, mode: os.FileMode(420), modTime: time.Unix(1488814111, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesMakefileTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x6d\x6f\xdb\x36\x10\xfe\xac\xfb\x15\x57\xcf\xb0\xad\xa0\x14\xe3\x60\xdd\x00\x6d\x6e\x53\xc4\x41\x5a\x14\xb3\x8d\x24\x6d\x31\x4c\x6b\xc1\x48\xb4\x44\x58\x22\x05\x8a\x72\x96\xc4\xf9\xef\x03\xf5\xe2\x97\x38\x71\xb1\x0f\xfb\x62\xd8\x77\xc7\xbb\xe7\xb9\x7b\x78\xf4\x97\xf3\xcb\xab\x8f\xd3\xc9\xbb\x51\x77\x50\x24\x3c\x4d\x31\xd6\x3c\xc7\xfe\xb7\x25\xd7\x85\x50\xd2\xc7\x3e\xe6\x69\x19\x0b\xe9\x15\x39\x0f\xbd\x3b\x96\xa5\xb8\xc2\x82\x47\xd8\x2f\xe8\x3a\x88\xd2\xbe\x0b\x93\xf7\x7f\x9c\xef\xe5\x91\x2c\xe3\x87\x93\xd4\x11\x55\x86\xf3\xc9\xd9\x74\xfc\x71\x72\xe1\xaf\xb3\xdc\xb0\x82\xff\xf2\x33\x8a\x50\x49\x2f\x97\x31\x9e\xbc\xa5\x11\x5f\x52\x59\xa6\x9b\x0c\x2b\xba\x0a\x02\xba\x8a\xfb\xb8\x42\xa3\x91\x44\xd8\x0f\x64\xdf\x85\x2f\xe7\x93\xf1\xf4\xf2\x19\x66\x32\x52\xfa\x47\xc4\xea\x98\x0a\xd5\xd9\xd7\xf1\xbb\x1d\x40\x16\x31\x76\x07\xb3\xaf\x63\xd7\x85\xef\xbb\xb4\x79\x98\x28\xec\x0e\xac\xd1\xc5\x15\xb2\xdb\x05\xf6\x1f\x30\xd7\x42\x1a\x34\xaa\xcc\x73\xae\x07\x45\x79\x53\x18\x3d\xe8\x76\x8f\x5f\x0f\x5f\x0f\x5d\x17\x8d\x4a\xd5\xed\xae\xe3\xc4\x75\xf1\xb1\xef\x02\xcc\x3e\x5d\x8c\xba\x83\x9a\x8b\x4b\x9a\xcc\xc4\x5a\xaa\xc1\xb9\x9e\x61\xda\x8b\xef\x01\xc6\x57\xd7\xef\x46\x74\xa1\x32\x26\x23\x5a\x53\x2b\xe8\x8d\x90\x00\x97\xe7\xb3\xe9\xe8\xe1\x01\xbd\x19\x0b\x17\x2c\xe6\x97\x4a\x19\x7c\x7c\x04\x31\x97\x11\x9f\xa3\x75\x83\x53\x05\x35\xe9\x81\xcb\x48\xcc\x01\x58\x9a\xfa\x55\xef\x51\x64\x2c\xe6\x98\xd7\xe7\x51\x97\x52\x72\x0d\x50\x57\xf1\x51\xc8\xc2\xb0\x34\x05\xb8\x29\x45\x1a\xf9\xe0\x9c\x56\x6d\xe8\x7c\x2e\x84\x8c\x51\xf3\xdc\xb6\xc4\x16\x70\x3b\xe0\x18\x5e\x18\x3b\xa4\xee\xe0\x62\x3a\x7b\x7f\xfd\xc1\xa5\x85\x0e\x69\xe3\xc7\xd5\x0a\x53\x89\xa4\x68\xfa\xfb\x42\x14\x38\xd9\x22\x12\x1a\x49\x8e\x96\xa1\x13\x2b\xac\x4a\x23\x51\xd6\x40\xdb\x01\x3c\x7b\x9a\x86\x59\x44\x33\x26\xa4\x17\x2b\x80\x06\xbb\x5f\x27\x00\x27\xcc\x91\xe8\x27\x49\xc6\x57\xd7\x2e\x80\x6d\x84\xe5\x56\x13\x98\x6f\x44\xd9\xeb\x61\x00\x8e\x95\x0e\x11\xde\x4d\x89\x1d\xfa\xcd\xfa\x68\x41\x83\x41\x75\x08\x03\xd7\x3b\xa2\xc1\x30\xe8\x44\xcc\x30\xbf\x6a\x66\x40\x73\x19\xff\x56\xeb\xfb\x75\x77\xd0\x4a\xdf\x0d\x3a\xb4\xf3\x8c\x32\xad\xb4\x4b\x0e\xce\xa9\xce\x6c\xed\x23\x5b\xa7\x35\x42\x33\x17\x1f\x1c\xeb\xd5\x73\xdb\xbc\x4f\x17\x2e\x38\x86\x69\x24\xe1\xf2\xbe\xb5\x20\x21\xfc\x9f\x30\x2d\x23\x3e\x6a\x0c\x47\x00\x15\x1c\x1f\x9c\x48\x85\x0b\xae\xdb\x46\x92\xdc\xde\x31\x62\x70\x2d\xbe\xb6\x21\xfe\x46\x7c\xe8\xad\x8f\x19\x16\x1f\x0e\xdd\x77\xa6\xcc\xb6\x12\x40\xf3\x98\x4b\xae\x99\xe1\x6b\xe9\x5c\xd4\x06\x2b\x1f\xc9\x6f\x9b\x7e\x60\xb1\xe0\x29\x37\x4a\xae\x87\x10\xa1\xe7\xad\xe7\xb4\x5a\x61\xb6\xb4\xcd\xa9\x6c\x67\x56\x3d\x1b\x2f\x38\xa7\xb7\x89\x08\x13\xac\x2f\x08\x0e\xb7\x16\x49\xaf\xd7\x5a\x9b\x3a\x2d\x1c\x8c\xd5\xfe\x28\x08\xc9\x99\x69\xf3\x98\x2c\xdf\x9a\x4d\x05\x7d\xba\xe4\x3a\x65\x77\x16\xfa\x13\xd8\x68\x14\x9a\x84\x63\x58\x6a\xcd\xa5\xc1\x48\x68\x1e\x1a\xa5\xef\xb6\xf8\x6c\xd2\xf6\x7a\x18\x89\xf9\x1c\x49\x39\xd1\xdb\x34\xd7\x11\x14\xdf\xb6\x9b\xc6\xab\x22\x37\x40\x5a\x89\xee\xb8\x7b\x3d\xcc\x99\x09\x13\x7b\xbb\x48\x3e\xc4\xdf\x5f\x3a\xdd\x4a\x4c\x69\x11\xe3\x51\xed\x3d\xf2\xe2\xfb\xbd\x02\x4f\xe0\x36\xe2\xdb\xef\x0c\xd4\x0b\xc3\x6f\x0b\x12\x5d\xca\xd6\x48\x12\x63\xf2\x1d\x4f\x65\x01\xd8\xb2\x58\x59\x54\x2b\x74\x8e\x9d\x9f\x5e\xd9\xa5\x46\x8b\x24\x90\x8d\xf2\x74\x29\x91\x10\x5b\x9c\x48\x6e\x46\x89\xb2\xd0\xc4\x61\x31\x06\xdd\xee\x69\x07\xdf\xe2\xba\xad\x15\x24\xe7\x34\x4c\x32\x15\xe1\xaf\x6f\xde\xec\x79\xea\x8d\xf6\x17\xf9\x1b\x3f\x17\x7c\xd7\x8b\x84\x24\x3c\xcd\xed\x78\xed\x2f\x3b\xe2\x46\x35\x9d\x1d\x1a\x35\xd5\xff\xce\x25\xc7\xe1\xf1\xf1\xf1\x90\x9c\xd8\x4f\xbf\xfa\xfe\x43\x82\xb6\xd4\x1e\xc1\xba\xb3\x2f\xb2\x6c\xdd\x07\xa8\x56\x21\x07\xf9\x5a\xcf\xf6\x96\xf4\x3c\x6a\x94\x4a\x0b\x6a\x1d\x5e\x7e\x67\x45\x51\x17\x38\x4b\x78\xb8\x40\x7b\xb1\xd0\x46\xa0\x54\x06\x85\xac\xb6\x53\x84\x42\x62\x58\x16\x46\x65\x5c\xb7\xcf\x4b\xf1\xaa\x73\x28\xaf\x95\xf7\x9d\x49\x94\x3c\xd9\xf7\x79\xf4\xe9\x35\x06\x58\xb2\x54\x44\xcd\xce\xd9\x4b\x1a\x5a\x6c\xdf\xab\xe8\xff\x01\xf2\x6e\xf6\xe7\x80\xef\x46\x3c\x07\xdf\x9b\x7d\x98\x4e\xfe\xf4\x91\xd9\x3f\x25\xd5\xca\x6e\x5f\xe7\xe6\xad\xae\x77\xcf\x66\xb7\xc2\xbf\x01\x00\x00\xff\xff\x69\x91\xfa\xae\xeb\x09\x00\x00")

func templatesMakefileTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesMakefileTemplate,
		"templates/Makefile.template",
	)
}

func templatesMakefileTemplate() (*asset, error) {
	bytes, err := templatesMakefileTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/Makefile.template", size: 2539, mode: os.FileMode(420), modTime: time.Unix(1490125134, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesActionsAction_xTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\x5f\x6f\xba\x30\x14\x7d\xe7\x53\x9c\x18\x1e\xfd\xc9\xbb\x89\x0f\xfc\xb6\xaa\x64\x0c\x16\xc5\x2d\xbe\xd9\x60\x75\x6c\x5a\x08\x2d\x5b\x16\xd2\xef\xbe\x94\x16\xc3\x86\x89\xc6\x64\x6f\xf7\xcf\x39\xb7\xe7\x9e\x36\x2d\x68\xfa\x4e\xf7\x0c\x34\x95\x59\xce\x85\xe3\x78\x1e\xee\x63\x44\x71\x82\x47\xff\x81\xe0\x6e\xee\x47\x33\xb2\x44\x12\x23\x99\x07\x4b\x4c\x83\x90\x0c\x91\xcc\xc9\x1a\x2f\x41\x18\xe2\x3f\x41\x18\x2f\x13\x04\x53\xac\xe3\x15\x16\x64\x46\x22\xb2\xf0\x13\xa2\x31\x78\x0a\x57\xb3\x20\x72\xea\x1a\x2e\xa7\x47\x86\xf1\x04\xa3\x48\x07\x4a\x39\x75\xfd\x0f\x25\xe5\x7b\x06\x97\x0f\xe1\x16\x4d\x33\xe0\x45\x25\xdb\x6e\xb6\x83\x5b\x8c\x08\xaf\x8e\x61\x26\x59\x49\x0f\xba\xe1\x79\x30\x20\x5d\x17\xdd\x29\xd9\x10\x6e\x73\xc4\x59\xd2\x49\x83\x52\x0d\x5f\xe7\xac\x15\x83\x4c\x80\x72\x30\x5e\x1d\x59\x49\x25\xdb\xe2\x83\x1e\x2a\xe6\xa4\x39\x17\xf2\x02\x75\x02\x93\xdb\xe3\x9e\x35\xb1\xdd\x80\xf1\x6d\x27\xec\x17\x7b\xfb\xc7\x95\xbc\xc2\x00\x8b\xba\xdd\x01\x33\xe0\x36\x0b\xce\x71\xaf\xf7\xe0\x57\x68\x75\xb5\x83\xcc\xcd\x66\x02\xf2\x95\x21\x6b\x92\x5d\x5e\x76\x11\x8e\xfc\x2a\x58\x9f\x22\x64\x59\xa5\x12\xb5\x03\x00\x5d\x67\xf1\xf3\x69\x29\x65\x11\xda\xa2\x56\xbd\xc9\x12\x3d\x58\x29\x6c\xde\x44\xce\xc7\x03\x53\x5c\xd0\x4f\x8b\x1a\x6c\x4e\xb3\xad\xf6\x9e\x7a\x7b\x2d\x56\x7e\x6e\xb2\x4b\xfa\x2d\xe9\x8a\x05\x0c\xf2\x4f\x37\xf0\x9b\x5f\xc0\x3e\x05\xf3\x25\xf4\x04\x5b\x4c\x2b\x58\x7d\x07\x00\x00\xff\xff\xe0\x17\x20\xd4\x42\x04\x00\x00")

func templatesActionsAction_xTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesActionsAction_xTemplate,
		"templates/actions/action_x.template",
	)
}

func templatesActionsAction_xTemplate() (*asset, error) {
	bytes, err := templatesActionsAction_xTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/actions/action_x.template", size: 1090, mode: os.FileMode(420), modTime: time.Unix(1490024398, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesActionsAction_x_runTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x52\x4d\x6b\xdb\x40\x10\xbd\xeb\x57\x3c\x7c\x28\x92\x71\xa4\xd0\x63\x20\x85\x90\x53\x20\x4d\x4a\x28\x85\x50\x7a\xd8\x4a\xa3\xf5\xe2\xd5\x8e\xd8\x0f\x87\x60\xf4\xdf\xcb\xae\x24\x7f\xc4\xd0\x9e\x72\x29\xf1\xc1\xec\xcc\xbc\x99\x79\x7a\x6f\x7a\x51\x6f\x84\x24\x88\xda\x2b\x36\x2e\xcb\x54\xd7\xb3\xf5\xc8\x33\x00\x58\xec\x76\x28\xbf\x8d\x90\x27\x66\x8f\x61\xa8\x6a\x36\x86\x12\x7a\x31\x62\xa4\xf2\xeb\xf0\xbb\xac\xb9\xab\x36\xdc\x09\xd3\x54\xbd\x0e\x52\x99\x0b\xd7\x6c\x2e\x24\x7f\xae\x34\xcb\x45\x56\x64\x59\x55\xe1\x87\xd0\xaa\x11\x9e\xf0\xa2\xb4\xc6\x76\x8e\xfc\x9a\xa0\x4c\x1f\x3c\x94\x43\x6f\xb9\x27\xab\x5f\xe1\xc8\x87\xbe\xcc\xda\x60\x6a\xe4\x0a\xcb\x48\xe6\x41\x74\x84\x61\xb8\x8b\xe0\x62\x3f\x2e\x2f\xf0\xf3\x17\x59\xcb\x16\xbb\x44\x8a\xac\x75\xb8\xba\x46\x27\x36\x94\x4f\xa5\x15\x2e\x8b\x54\x4c\x7f\x55\x85\xdb\xe0\x3c\x77\x33\x0b\xc5\x06\x35\x37\x84\x35\x59\x9a\x21\x37\x7d\x4f\xa6\x41\xea\x77\x10\x0e\x86\xa8\xa1\x26\x9b\xeb\x96\x7c\xb0\x26\x45\xaa\x85\x26\x93\xc7\xcd\x05\xbe\xe0\x72\x62\x12\x7f\x23\x2a\x91\x4a\xb9\x21\x3b\xca\x1a\xa5\xb3\xe1\x5f\xe2\x70\xf0\x7f\x55\x87\x4f\xd4\x79\x4c\xe8\xff\x4d\x9e\xa7\x60\x46\x65\x6c\x30\x49\x94\xf1\x66\xf1\xa2\xfc\x3a\xc5\x52\x6d\xc9\x4c\x77\xc4\x5b\xb2\x47\xc9\xc3\xd1\x4e\x82\x89\x13\xc1\x6e\x52\xa9\x88\x2b\xf2\x08\xc5\xf2\xd0\x50\xde\xee\x9f\xab\x69\xf8\xd9\x25\xae\xa0\x59\x62\xa9\x59\x96\xf7\x2c\x25\xd9\x02\xf9\xb9\x21\xab\x51\xa8\x62\xfa\xf4\xc9\xd3\xab\x6b\x7c\x3a\x83\xee\x86\x59\xc2\x67\x0e\xf6\x48\xf8\x39\xfd\x55\x6c\x08\x2e\x58\x82\x67\x3c\x3e\xdc\x3f\x23\x38\x8a\x2c\xca\x3b\xd3\x32\x84\x69\xf6\x41\x1b\x21\x91\x9f\x30\xaf\xa8\x47\x53\xe3\xc0\x37\x2e\xcd\x7c\x62\xab\xe1\x91\x2a\x5a\xb6\x70\xa1\xae\xc9\xb9\x37\x68\xa3\x74\x82\x1e\x70\xad\x50\x3a\xcc\x14\x4f\x66\xae\x8e\x5c\xfc\x4e\xce\x8f\x36\xfa\xf8\x7a\x1f\x1f\xe3\x92\x0f\x23\xdf\xcd\xc8\x3f\x01\x00\x00\xff\xff\x46\xdc\xf3\xd2\x35\x06\x00\x00")

func templatesActionsAction_x_runTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesActionsAction_x_runTemplate,
		"templates/actions/action_x_run.template",
	)
}

func templatesActionsAction_x_runTemplate() (*asset, error) {
	bytes, err := templatesActionsAction_x_runTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/actions/action_x_run.template", size: 1589, mode: os.FileMode(420), modTime: time.Unix(1489759902, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCmdMainTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x59\xef\x6e\xdc\x36\x12\xff\x2c\x3d\xc5\x9c\x90\x3f\x52\xbb\xd1\x36\xf9\xb8\x3d\xe3\x90\xda\x4e\x62\x9c\x63\x07\xb6\xd3\xa2\x48\x82\x82\x96\x66\xb5\xbc\xa5\x48\x81\xa4\xbc\x75\x8d\x05\xfa\x10\xf9\x78\x0f\x70\xcf\x95\x27\x39\x0c\x49\xfd\x59\x7b\x37\x4e\x72\x77\x1f\xae\x05\x62\x89\x1c\xcd\x0c\xe7\xef\x6f\xb8\x0d\x2b\x96\xac\x42\xa8\x19\x97\x71\x3c\x9d\xc2\xc1\x29\x9c\x9c\x5e\xc0\xeb\xe7\x7f\x3f\x84\xfd\x57\xcf\x4f\x5e\x1e\x9e\xc3\xc5\x29\x5c\xbc\x3a\x3a\x87\x17\x47\xc7\x87\x13\xb8\x78\x75\xf8\x2b\xfc\x72\x74\x7c\x0c\x3f\x1d\xc2\xf1\xe9\xf9\x05\x1c\xbd\x80\x5f\x4f\xdf\xc2\xd9\xe1\xcb\xc3\x93\xc3\xb3\xe7\x17\x87\x44\x03\x6f\x8e\xdf\xbe\x3c\x3a\x89\x63\x5e\x37\x4a\x5b\x48\xe3\x28\x41\x59\xa8\x92\xcb\x6a\xfa\x0f\xa3\x64\x12\x47\xc9\xbc\xb6\xf4\x47\xa8\x8a\xfe\x28\x93\xc4\x71\xc4\xa4\xe1\x90\x54\xdc\x2e\xda\xcb\xbc\x50\xf5\xb4\xae\x5a\xfb\xc7\x94\x96\x69\x7b\xbc\xb3\x54\x35\x93\xe5\xb4\x11\x6d\xc5\xe5\x13\x53\x2e\x9f\x54\xea\xd9\xb4\xe4\xa6\x61\xb6\x58\xa0\x4e\x62\x00\x80\x46\xa8\x0a\xee\xff\x2c\x28\x71\x2f\x5d\x8d\xc6\xb0\x0a\x49\x97\x9b\x9b\x27\xc0\xe7\x90\x3f\x2f\x2c\x57\xd2\xc0\x7a\x1d\x47\xc9\xcd\x0d\xe4\x6f\xbc\x59\xcf\x94\xb2\xb0\x5e\x4f\x99\xdf\x4f\xfc\x17\x28\xcb\x9d\x94\x85\x92\x12\x1d\x75\xb2\x9d\xc0\xa0\xbe\x42\x3d\x5d\x58\xdb\x24\x83\x02\x17\x9a\x57\x15\xea\xdd\x1a\xd8\x40\xb0\xa9\x42\x16\xc7\x57\x4c\x93\x6b\xa6\x53\x38\x61\x35\x82\x3f\x2b\x48\x56\x63\x1c\xb9\x95\x3d\x70\xfc\xdc\xf3\x7a\x9d\x38\xd2\x9f\x51\x96\x4a\x77\xc4\x57\xee\x2d\x8e\xc2\x6a\xf8\x20\xbc\x0d\x9f\x68\xc3\x95\x1c\xbe\x71\xaf\xce\x3f\xdd\x56\xff\xa1\x7f\xed\xbe\x3c\x40\x53\x68\xde\xd8\xd1\xd7\xe5\xb0\xe4\x38\x8c\x49\x02\x97\xf1\x12\x71\xca\x5c\x74\x5f\x2c\xd0\x20\x94\x38\xe7\x12\xe1\x8a\x69\xae\x5a\x03\x85\x12\x4a\x43\xa1\xa4\xb1\x4c\x5a\x03\x9d\x4d\x04\xaf\x11\x60\x0f\x28\xf2\xf2\x7d\x22\xda\x57\x25\xa6\x49\xa5\x11\xe5\xf7\x8b\xd9\xa5\x60\xc5\x32\xc9\xe2\x48\x63\x09\xdb\x08\x35\x96\xb4\xed\xe8\x77\xf1\xf1\xdf\x1b\xb4\x5b\xbf\x37\x68\x93\x8c\x74\xb7\xd7\x0d\x42\x21\xf8\x73\x5d\x19\x30\x56\xb7\x85\xbd\x89\xa3\x7d\x55\x53\x84\xd2\x02\x97\x55\x1c\x9d\xb7\x97\x61\xc9\xc0\xbb\x0f\xdd\xea\x6b\x1f\xb0\xf0\x5d\x88\xdc\xfc\xe7\xa7\xf1\x3a\x8e\xe7\xad\x2c\xa0\x42\x4b\x2c\x5f\x68\x55\xef\x1f\x1f\xa5\x19\xa4\xdf\x05\x29\x13\x40\xad\x95\xce\xe0\x26\x8e\xf8\x1c\x04\xca\x54\x99\x9c\x76\x32\xf8\xeb\x1e\x3c\xa5\xf5\x48\xa3\x6d\xb5\x04\xc9\x45\x20\x37\xf9\x09\xae\xd2\xe4\x5a\xb5\x50\xb7\xc6\x82\x69\xb0\xe0\xf3\x6b\x28\x82\xa6\x56\x01\x97\x57\x6a\x89\xc0\x82\x33\xc9\x00\xeb\x38\x62\x74\xb0\xd9\x1e\x3c\x0a\xe2\x89\x7b\x38\xcb\x0c\x82\xe0\x77\x4f\x3f\x4c\xe2\x68\x7c\xca\x61\xeb\xd9\xcc\xed\x85\xb3\xce\xe0\xd1\x70\xd8\x9b\xf5\xc4\x89\x30\x96\xd9\x09\xfc\x46\x52\x94\xc9\xcf\x6d\xc9\x65\x7e\x6e\x99\x4d\x33\x98\x4e\xe1\xf0\xf7\x46\xf0\x82\x5b\x71\x0d\xbc\x92\x8a\x7c\xea\x4e\xe4\x4e\x9f\xd2\xb7\xf9\x6b\xf2\x4a\x06\x8f\xe8\x73\x7a\xde\x5f\x30\x7d\x80\x57\xbc\xc0\x0c\xf6\xf6\xe0\x07\xb8\x71\xd1\x18\xb9\x40\xe3\x06\x6a\x64\xd2\x80\x5d\xa0\x46\xe0\x06\x4a\x66\x19\x19\xa0\xe1\x0d\x02\x97\xa0\xae\x50\x83\x21\x35\x26\x60\x14\x08\xb4\x8f\x0d\x94\x0a\xb8\x8d\xa3\xa8\xc4\x82\x14\xa5\x42\x49\x26\x3d\xc0\x42\x95\xa8\xd3\x4e\xf1\x2c\x8e\x48\x2f\xd4\x9a\xa8\x4a\x2c\x72\x4f\x91\x92\x1d\xf3\x60\x85\xec\x47\x47\xf0\x97\x3d\x72\x90\xf3\xd7\x6d\x87\xc5\x11\x19\x66\x1d\x77\xeb\xcc\x39\x5e\x72\xd1\x07\x08\x35\x86\xd4\x05\x01\xeb\x82\x82\x24\xde\x8e\x9b\xb8\xd3\x66\x24\x4c\xa8\x2a\x7f\xc1\x2c\x13\x29\x6a\xed\xbd\x6c\x56\xdc\x16\x0b\x27\x26\xef\x82\xf7\x26\x8e\x0a\x66\x10\x92\x05\x8a\x26\x99\x75\x6f\x5c\xce\x15\xbd\x45\x8d\xe6\xd2\x8e\xd2\x99\x84\x79\x12\xc3\xea\x46\xa0\x23\x0a\x11\xea\x18\x8f\xe2\xa3\xf7\x4b\x34\x56\x27\xf9\xb5\x0b\xcf\x46\xab\x2b\x5e\x22\x30\x09\xbe\x46\x83\xd2\x10\x6a\x25\xb9\xaa\x42\x89\x9a\x59\x04\x2f\x0a\xb8\x6c\x5a\xfb\x5e\x1e\xfe\x3e\xeb\x56\xea\xeb\xdf\xfc\x97\x14\xc7\x74\x44\xaf\xef\xb9\xdb\x3d\x22\xf2\x3b\x4a\xbd\xfb\xe1\x43\x7f\x04\x57\xc7\x67\x14\x7f\x07\x0c\x6b\x25\xf9\x1f\x08\xcc\x00\x2d\xc7\x51\x34\xd8\x9b\x16\x28\x0e\xce\x5d\xf9\x4f\x87\x36\x41\x8b\xfb\xac\x58\x60\x9a\x8d\x62\x62\xec\xf2\xdb\x6e\x70\x4a\xce\x6b\x9b\xbf\x21\x45\x85\x4c\x93\x37\xbe\xaa\x8e\xca\x3c\x5c\x2a\x65\xb9\xac\xe0\xd5\xc5\xc5\x9b\xa0\x5a\x9e\xe7\xee\x8c\x5d\x74\xaf\xb8\x10\x70\x29\x54\xb1\x84\x56\x5a\x2e\x28\xd0\xc1\xb7\x27\x30\x8b\xd6\x52\x2c\xaf\xe4\x46\x9c\x9a\xfc\x98\x1b\x8b\xf2\xb9\x2c\xdd\x41\xd2\x2d\x11\xba\x4d\x5d\x6f\x2b\xdd\x4a\xe7\xeb\x39\x13\xc2\x2e\xb4\x6a\xab\x45\x1c\x95\x38\x67\xad\xb0\x33\xaf\xd8\x2f\xf8\x58\x23\xe8\x56\x4a\x52\x1e\x39\xe5\xde\xe0\xdc\x09\x79\x97\x75\xfe\xf5\x9a\x8d\xf3\x85\x82\x65\x8b\x1e\x43\x35\xeb\xc3\x05\x42\x75\x81\x4b\x55\x5e\xc3\x15\x67\x70\x7e\x71\x70\x74\x42\x21\xa3\x5b\xb9\x35\x9c\xfa\xf8\x18\xe7\x40\x10\x9c\x5f\x50\x79\x27\xb1\xfe\xa4\x21\xa2\xe8\x50\x23\xeb\xe9\x56\x9e\x4a\x3c\x9d\xcf\x3d\xdc\xd8\x16\x57\x13\xb8\x27\xff\xef\x9a\xd7\xe9\xe4\xc5\x76\x9a\x3a\xb9\x9f\x75\x73\x97\x22\x1b\x7e\xde\x54\x35\x40\x12\x1f\x3b\xff\x4d\x5d\x47\x1e\x1f\x28\xe6\x69\xd2\xca\xa5\x54\x2b\xd9\xbb\xc6\xb5\xcc\x87\x26\x99\xdc\x35\x75\xd6\xd5\xbd\xae\xca\xdd\x36\x6d\xad\x4a\x0c\x5d\x75\x02\xf5\xb8\x73\x66\xbe\x2b\x90\x86\xdb\xd0\x5f\x51\xfa\x26\x36\xe4\xe7\x01\xb3\xec\x66\x1d\x47\x82\x36\x08\x8a\x52\xc6\x1e\x2b\xb2\x0d\x55\x32\x47\x3f\x20\x56\x2a\xa8\x67\x6c\x95\xd6\xf9\x4f\xaa\xbc\xce\x0f\xfa\x8d\xcc\x85\x3a\x6a\x10\xf9\x0b\xd1\x9a\x45\xe8\x04\xde\x30\x1a\x4d\xa3\xa4\x41\xe2\xd5\xa9\x7a\x16\xd6\xc8\x94\xd4\xe5\x5a\x33\x83\x44\x2d\x13\xdf\x0b\xa7\x53\x78\x2b\x6b\xa6\xcd\x82\x79\x8f\xba\x40\xe6\xd2\x2a\xf7\xa6\x79\xb5\xb0\x01\x67\xc4\x3e\xb1\xa0\x50\xad\x28\x81\x5d\x29\x5e\x3a\x9a\x67\x80\xbf\x17\x68\x8c\xeb\x51\xd0\xf1\x2a\x98\x10\x86\xba\x9b\xeb\x7a\x2b\x6e\x17\xc0\x40\x28\x0b\x6a\x0e\x3e\xf2\x9f\x14\xcc\x50\x76\x2a\xe9\x5c\x64\x1c\xff\xcb\xd6\xd2\x47\x96\x22\x8e\x82\x71\xe2\x44\x34\xa8\xe7\x4a\xd7\x4c\x16\x08\x15\xe3\x92\xba\xa8\x54\x16\xec\x82\x59\xa8\x34\x52\x3f\xa7\x16\xc2\xa9\x73\x0a\xd2\x25\x14\x6c\x87\xe7\x4a\xa4\x7c\xa4\x06\x66\x69\xba\x21\x31\x56\xf9\x06\xeb\x05\xad\xd8\x75\xee\x96\x2f\x4e\x0f\x4e\xc9\x95\x2b\x04\xd3\x12\x64\x09\x04\xdc\x00\x83\x4b\x65\xad\x40\x89\xc5\x72\x42\x05\x60\xce\xa9\x0f\x58\x27\xd7\xac\x58\x03\x97\xac\x58\x42\xb0\xdb\x70\x42\x04\xd6\x34\x5a\xb1\x62\xd1\x77\xbd\xe0\x53\x1f\x2e\x5d\x00\x69\x26\x2b\x84\x07\x72\x02\x0f\x1a\x72\xdf\x66\x34\xb9\xb4\xbc\xb9\x81\x07\x4d\x7e\xc6\x56\x1d\x06\x77\x0d\x8f\x5a\x8b\x8b\xb5\x30\x5c\xe4\x9e\x2c\xd0\xb8\xce\x43\x61\x37\x4a\x4a\x87\x25\x7a\xaf\x77\x21\xe6\x28\x27\xbe\xb3\xed\x06\x0c\x3d\x56\xb8\x97\xdf\x7e\x1f\xfa\x13\x28\xca\x2f\xe1\x48\xc9\xd2\x37\xba\x51\xe6\x04\x4e\x69\x51\x4e\x40\xec\x68\x6e\x77\x98\xb1\xdd\x36\xf1\x96\x75\x46\xd1\xad\x7c\x8d\x76\xa1\x5c\xf6\xb1\xfc\xac\x0d\x7d\xca\xe5\xfd\xde\x1e\x24\x16\x8d\x4d\x82\x88\x9e\x96\x48\x2f\xd0\xd8\x20\xaa\xcb\xba\xfc\xb4\xb5\xce\x86\xa4\x9c\xab\x7d\x9e\x3e\xf5\x07\xe3\xde\xc0\xbb\x4f\x10\xb8\xf8\x24\xa5\xf9\xc5\x55\x98\x64\x63\xf3\xd0\x15\x9d\x3d\xfa\xda\x3f\xa7\x5d\x3b\x99\x4e\xfb\xf2\xe1\x53\x17\x4d\x2b\x1c\x82\xcc\xcf\x51\x96\x69\xc7\x22\xdb\x1c\x3e\x47\x55\x34\xd8\x90\x20\x81\x63\x3d\xaa\xa5\xa1\x8b\xb9\x2a\xba\x11\xbe\x1e\xce\x05\x86\xeb\x01\x40\x8e\xa1\xe3\x9d\x26\xf0\x55\x55\x75\x63\xa4\xfd\x1f\x96\xd5\xaf\x4c\xcf\x4d\xb5\xbe\x24\x3f\xbb\xd1\x3b\x1f\xe1\xab\xc0\xe5\xff\x29\x4b\x7d\x13\xe0\x75\x8d\x25\x67\x16\xc5\x35\xcc\xa9\x0f\xb9\x98\x1b\xfc\x02\x42\x55\x34\xcc\x70\x0b\x05\x93\x70\x89\x80\x35\xb7\x16\xcb\xae\x42\x52\x7f\x40\x4d\xdd\x80\xde\x58\x43\x43\x17\x73\x83\xbc\x87\x1c\x01\x58\x94\x4a\x3e\xb6\x20\x11\x4b\x98\x42\x6b\xd0\x51\x73\x69\x51\x4b\x26\xe0\xb2\x9d\xcf\x91\x26\x34\xe1\x1c\xde\x97\xda\x89\xeb\x23\x83\x36\x06\x16\xec\xca\x75\x81\x95\xd2\x4b\x2f\x81\x4b\xaa\xe8\x0b\x68\x04\x2b\xd0\xb8\xc9\x6b\x85\x50\x22\x13\xbe\x5b\xf9\xc2\x2f\x81\x81\x92\xf8\x44\xcd\xe7\x30\x67\x66\x41\x47\xa3\x8e\xf6\x35\xe5\x6a\x5b\xa7\xfe\xa2\x1a\xe6\xe2\xa6\x0f\x9b\x13\x5c\x6d\x94\xb1\x60\xa2\xb4\xcc\x76\xd7\x2c\xd5\x2b\x68\x5d\xc5\x1a\x97\xa2\xec\xc7\x80\xd5\xee\x02\xae\x0d\x4d\x9c\x2a\xce\x27\x2a\x74\x7d\x72\x07\x75\x6e\xab\xdc\x7c\x00\x6d\x13\x2a\x0e\x2b\x85\x52\x8d\x6b\x89\xb7\x91\x62\x87\xc6\xa8\xaf\x2b\x69\xda\x1a\xcb\xc0\x76\x4e\xd8\x18\x8d\x75\xd5\x60\xe5\x03\xa5\x8b\x92\x21\x73\xa1\xe4\x1a\x0b\x2b\xa8\x53\xf7\x35\x4d\x65\x9b\xb3\xec\x10\xa2\xe7\x96\x69\xdb\x6b\x05\xa4\x56\x1c\x45\x95\x02\x9b\xbb\xad\x33\x64\xe5\xb1\x52\x4d\x1a\x26\x99\xb3\x56\xde\x45\xb8\x14\xbc\x8a\xe6\x37\x8b\x06\xa6\x1e\xe4\x06\x8c\x1b\x64\x5a\x6a\x19\x1b\x46\xfd\x96\xea\xda\xa1\xe8\xaf\x2e\xaf\x1d\x36\xe7\x06\x1a\x8d\xd6\x5e\xc3\x82\x15\xcb\xeb\x89\x03\x47\xa6\xd5\x48\x15\xb4\xbf\x77\x60\x70\x89\xd6\xa2\x26\xbc\xe3\x12\x64\xae\x55\xed\x6c\x84\xb2\xe2\x12\x27\x74\xe0\x52\xa1\xa1\x94\x13\x4a\x2d\x89\xbf\xe0\x4b\x74\x78\x88\x8e\xc4\xe4\x35\x2c\xb9\x2c\x29\x6d\x13\x02\x6d\x09\xcc\x05\xab\xba\x84\x19\xfb\x2b\xcf\x73\x62\x47\x6c\x4c\x60\x42\x60\x8d\x52\x4c\xb9\x4b\x10\x6f\x99\xd8\x83\x31\x06\x05\x6a\x42\x67\x0e\x0a\x7a\x30\xa7\xd1\xa5\x26\x71\x51\x52\x10\x28\xed\x89\x16\x4c\x97\x84\xeb\x4a\xe0\xee\xb2\xae\x40\x93\xc3\xb9\xf2\x60\x51\x11\x3a\x0d\x85\xc0\x1f\xbb\x21\xd8\x37\x9d\x3a\xae\x44\x21\x71\xb5\x85\x22\x87\xa3\xc7\xb5\xab\x4b\x2e\xb6\x17\x6e\x43\x30\x8b\x9a\xe0\xec\xc2\x35\x00\x66\xe1\x12\x8d\x0d\xf1\x41\x63\x20\x4a\x50\x64\xe1\x15\x37\xe8\xdb\xdd\xdd\x6e\xe3\x2e\x7c\x6a\xd6\xbc\xf3\x3d\xef\x83\xab\x5f\x73\x56\xe0\xcd\x3a\x1b\x9b\x6c\x68\x47\xe1\xb2\xad\xd5\x62\x02\x6a\xe9\x7a\x18\xb3\xec\x5d\xf2\xf6\xec\x38\xf9\xf0\x23\x2d\xdd\xb8\xbb\x2a\xe7\x37\xea\xce\x2d\x13\xe2\xda\x39\xc9\xc0\x33\xb8\x62\xa2\xa5\x9a\x46\x4e\x5e\xa1\x37\x9f\x2f\x9e\xdc\x50\x39\xfb\xdb\x10\x8f\x23\xf1\x27\xb8\xa2\x31\x3f\x6d\xb5\xc8\x53\xaf\x6a\x96\x8d\x6f\x85\x36\x69\xcf\x6d\xa9\x5a\x9b\x66\x7d\x9f\xbf\x7b\x41\x43\xc7\x98\x4e\xe1\xa5\x03\xe3\x02\x8e\xe4\x5c\xc1\x14\x5e\x21\x2b\x69\xec\xf6\x08\x85\x0e\x97\xbc\x97\x49\xff\xfe\xfd\x9e\x4b\x92\x73\xc7\x6e\x9e\x26\x54\xee\x66\x10\xfe\x7b\x68\xe8\xff\x4f\xff\xfc\xd7\x7b\x99\x4c\xc0\xdd\x9c\x4e\xdc\x8d\xf5\x04\xdc\x2d\x69\xb6\x93\x8d\xbf\x87\x9e\x7d\x86\x8d\xa7\xf8\x02\x46\xee\x5e\x7a\xf6\x39\x46\x8e\xe2\x5e\x4e\x23\x5b\xcd\xb6\x73\x1a\x51\xf4\xdc\x76\x40\x23\xea\x0d\x54\x48\x0a\xd5\x4a\x67\xd4\x54\xa0\x1c\x68\x32\x47\x34\xea\xac\xe4\x8c\x9d\x9a\xbd\xef\xee\xa3\xb7\x6d\xf6\x62\xd3\x87\xe6\x61\xf9\xd0\x64\x33\x18\xeb\x4c\xda\x8d\x34\x59\xaf\x07\x3b\x8c\x90\x14\x9f\xc0\x03\x7b\x17\x49\xed\x10\xf9\xe9\xe3\xc7\x4f\x1f\xff\xfc\xf4\xf1\xcf\x60\x26\x27\xda\x64\x63\xb1\x89\x97\xdb\xff\x40\x11\xa4\x0e\x1b\xb7\x7e\x09\xd8\xd4\xaa\x2b\xd8\xa3\xe7\xed\x83\x3d\x99\xd9\xa3\xe1\x5b\x86\x0e\x44\xbd\x9d\x03\x7e\xfc\x76\x33\x77\x52\x77\x59\x79\x53\x8f\xcf\x98\x99\xdd\x99\x27\xff\x53\x2b\xb3\x5d\x56\x66\xdf\x60\xe5\xfe\x0a\x32\xf5\x6a\xdd\x2a\x28\x1b\x37\xa8\xde\xa6\xa1\x36\x0d\xb3\x02\x35\xe0\x9f\xae\x2d\x0e\xf7\xa4\x0e\xed\xbe\x0e\x58\xf7\xce\xb8\xb0\xf5\x9a\x7a\x0c\x7a\xd6\x71\x54\x8f\x2f\x51\x7e\x7e\x4a\x14\x7d\xe6\x27\x57\x4f\x93\x49\x1c\x45\xd4\xa9\x67\x3d\x11\xbd\x79\xc2\xc8\x1b\x7b\xd6\xdd\x37\xd2\xd2\x80\xb4\x67\x30\xe8\x4b\x3b\xaf\xd1\xb2\x19\xd4\x6c\x89\xe9\x8e\x26\xe1\xc8\x86\xee\x70\x3f\x71\xf7\x4b\x47\xb8\x62\xdc\x36\xca\x6c\x8f\x8c\x61\x92\x61\xb7\x27\x99\xda\xdf\x4e\xee\xf5\xd7\x92\x34\x65\xbb\xa7\xcf\x98\x7e\x3c\x80\xb3\x5b\x97\x12\x5f\x0a\x83\xc7\xa3\x0f\xcd\xde\x83\xcc\x0d\x68\x74\x7f\x71\x19\x0e\x67\x77\x1f\xae\xbb\xfc\x24\xfc\xed\x1f\x3f\x73\xbc\xf1\x4c\x37\xd4\x9e\xcd\xa9\xee\x1b\x8f\x39\x16\xbe\x71\xce\x11\xa6\x1c\x5f\x7b\xbe\xdd\x1c\xd5\x47\xbf\x5f\xf8\xbb\xcf\x01\x4f\x76\xf9\xbf\xf5\x48\x47\xb2\x44\x69\xd3\x47\xf5\x04\x12\x48\xe8\x1f\x48\xbe\x24\x5d\xc6\x3f\x24\xf8\xa0\xec\xd2\x39\xdb\x44\xad\xff\x0e\x00\x00\xff\xff\x6a\x94\x0b\x0b\x6a\x20\x00\x00")

func templatesCmdMainTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesCmdMainTemplate,
		"templates/cmd/main.template",
	)
}

func templatesCmdMainTemplate() (*asset, error) {
	bytes, err := templatesCmdMainTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cmd/main.template", size: 8298, mode: os.FileMode(420), modTime: time.Unix(1490145779, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesConnectionCacheTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x93\x41\x6f\xdb\x38\x10\x85\xcf\xd6\xaf\x78\xeb\xc3\x42\x0e\x54\x19\xd8\x63\x17\x39\x64\x13\x37\x31\xea\xda\x45\xe3\x60\x51\x14\x3d\xd0\xd4\x48\x22\x4c\x0d\x55\x72\x54\xad\x36\xc8\x7f\x5f\x50\x72\x12\xb7\xd8\xde\x28\x0e\xf9\xe6\x9b\xc7\xa7\x56\xe9\xa3\xaa\x08\xda\x31\x93\x16\xe3\x38\x49\x96\x4b\xdc\xec\xb0\xdd\xed\xf1\xe1\xea\xfd\x0a\xd7\x77\x57\xdb\xdb\xd5\x3d\xf6\x3b\xec\xef\xd6\xf7\x78\xb7\xde\xac\x32\xec\xef\x56\x9f\xf1\xf7\x7a\xb3\xc1\x5f\x2b\x6c\x76\xf7\x7b\xac\xdf\xe1\xf3\xee\x01\x9f\x56\xb7\xab\xed\xea\xd3\xd5\x7e\x15\xcf\xe0\xe3\xe6\xe1\x76\xbd\x4d\x12\xd3\xb4\xce\x0b\xd2\x04\x00\xe6\x65\x23\xf3\x69\x15\x06\xd6\xf3\x64\x5c\xb7\xd6\x55\x98\x57\x46\xea\xee\x90\x6b\xd7\x2c\x8f\xae\x51\x5c\x2c\x5b\xdb\x55\x86\xdf\x84\xe2\xf8\xa6\x72\x7f\x2c\xad\xab\xe6\xc9\x62\xc4\xbc\x56\xba\x26\x98\x00\x85\x60\x9a\xd6\x12\x7a\xaf\xda\x96\x3c\x94\x77\x1d\x17\x50\x68\x54\x8b\xde\x48\x1d\x97\x9d\xd0\x3f\x19\xc4\x21\x88\xf3\xe7\x33\x07\x18\x4e\x64\x68\xe9\xa4\x18\xc4\x77\x5a\xf0\x38\x62\x45\xc2\xfc\x43\xbc\x3b\x7e\x16\x4a\x46\xd5\x2f\x41\xbc\xe1\xea\xeb\xc5\xf5\xab\x75\x4f\x23\xd5\x96\xfa\x49\xc6\x93\x74\x9e\x23\x1d\x53\x7f\xd6\x0e\x3a\x96\x93\xb2\x63\xfd\x72\x38\x5d\xe0\x62\xba\xf5\x98\xcc\xa6\x8b\xf8\x7d\xdc\x78\x4c\x66\xb3\xd8\xf4\x2d\x1a\x75\xa4\xf4\xff\x5b\x2f\xb2\x64\xf6\x74\xea\x7f\x4b\x82\xde\x58\x8b\x8a\x04\xce\xc3\xb0\x11\x48\x3d\x0d\x9c\x63\x2d\x38\x58\xa7\x8f\x01\x1d\x8b\xb1\x2f\x95\xe8\xa3\x27\x55\x0c\x51\x63\xbf\xbb\xd9\x41\x6a\x13\x26\xa5\x03\xe1\x3b\xf9\x01\x86\xa9\x2c\x8d\x36\xc4\x82\x43\x27\xe8\x09\x4c\x14\x7d\xee\xd5\x10\x9d\xb5\xce\x1d\xbb\xf6\xdc\xda\xa8\x66\x18\x0a\x52\x47\xf5\xa0\x4a\x42\xa3\x98\xc9\x67\x50\x5c\xc0\xb1\x1d\x46\x44\xa3\xac\xf9\x97\x22\x4e\x03\xc7\x9a\xf2\xc9\xf9\x1d\x6b\x42\xef\x3a\x5b\x44\x8a\xca\xb9\x22\x2a\x9e\x9a\x07\x89\x74\x27\x84\xd6\x2a\x4d\x11\x62\xb4\xf7\x9c\x21\x8b\xaa\x3c\xc2\x4d\xfa\x5d\x8b\xc3\x00\x85\x23\x8d\xd3\xbe\x0e\xea\xe9\x5b\x67\x3c\xa1\xed\x44\x0c\x57\x50\x78\x4f\x43\xba\x40\x43\x52\xbb\x08\xfb\x62\xd7\xe9\x29\x0d\x0b\xf9\x52\x69\xca\xd0\xd7\x46\xd7\x51\xae\x7f\x81\x12\x77\x0a\x41\x4c\xe8\xf8\x68\x90\x5a\x49\xb4\x5a\xbb\xa6\x75\x81\x0a\xb8\xf2\x5c\x6f\x8c\x57\xe8\x74\x3d\x1d\x5c\x4b\x14\xd4\x8a\xd1\xb1\xf9\xd6\x51\xf4\xaa\x20\x16\x53\x0e\x3f\x93\xf4\x84\x5e\xb1\x3c\xbf\x02\xba\x36\x9f\x22\x96\xea\x53\xb4\x16\x31\x1a\xa9\x2e\x70\x71\xa3\x44\x65\xb0\xb8\x88\xff\x5c\xbe\x71\x55\x45\x7e\x81\xf4\x2c\x50\x19\xc8\x7b\xe7\x17\x31\x8e\xdf\x95\x47\xc0\x79\xd0\xc7\x2d\x77\xc4\xc1\x39\x9b\xcc\x74\xbe\x71\xfa\x98\x2e\x92\x99\x29\x11\xb2\x58\xb8\x84\xce\xe3\x28\x5f\x74\x91\x8f\x0e\x7e\xfd\x33\x6e\xc7\x2c\xeb\xfc\x81\xed\xe9\xfc\x73\xd2\x43\x06\x36\x36\x46\x78\x56\x36\x92\x7f\xf4\x86\xc5\x72\x3a\xdf\x52\x8f\xd7\xb6\xd8\x9b\x86\xe6\x8b\x64\x16\x46\x3a\xbc\xbd\x7c\x2e\xa6\xba\xc8\x60\x27\x80\x58\xf9\xed\x32\xea\xfd\xb2\x1d\x1b\x3b\x2a\x8c\x0d\x7f\x06\xc5\x25\x42\xf2\xc3\xb5\x1f\x21\x9f\xfe\x0b\x00\x00\xff\xff\x8e\xec\x68\x68\x34\x05\x00\x00")

func templatesConnectionCacheTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesConnectionCacheTemplate,
		"templates/connection/cache.template",
	)
}

func templatesConnectionCacheTemplate() (*asset, error) {
	bytes, err := templatesConnectionCacheTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/connection/cache.template", size: 1332, mode: os.FileMode(420), modTime: time.Unix(1490122053, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesConnectionConnectTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x94\x4f\x8f\xdb\x36\x10\xc5\xcf\xd5\xa7\x78\xc8\xa1\xb5\x17\x5e\x1b\xcd\xb1\x40\x2f\xdd\x20\x40\xd1\xa4\xce\x21\x28\x10\x14\x3d\x8c\xc9\x91\xc4\x9a\x22\x55\xfe\x89\x56\x35\xf6\xbb\x17\x43\x5a\xfe\xd3\x45\x2e\x86\x25\x0d\xdf\xcc\xfc\xde\x70\x46\x52\x47\xea\x18\xca\x3b\xc7\x2a\x19\xef\x9a\xc6\x0c\xa3\x0f\x09\xab\x06\x00\x46\xeb\x3b\xbc\xe9\x4c\xea\xf3\x61\xab\xfc\xb0\x3b\xfa\x81\x9c\xde\x8d\x36\x77\xc6\x3d\x46\x7d\x7c\xec\xfc\xdb\x9d\xf5\xdd\x9b\x66\xdd\x34\xbb\x1d\x9e\x72\x4c\x7e\xf8\x44\x81\x86\x08\x13\x31\xf5\x1c\x18\xb3\xcf\x48\x3d\x43\xf3\x57\xb6\x7e\xe4\x80\xc9\x58\x8b\x56\x7e\x8c\x03\xb9\x19\xaa\x1c\xc4\x18\xe4\x73\x32\x1c\x37\x98\x7a\xa3\xfa\x72\x76\xf2\xd9\x6a\x38\x66\x2d\x39\x92\x47\x8e\x0c\x1f\x30\xf9\x70\xc4\x64\x52\x2f\x2a\x4f\xb5\x8b\x2d\xf6\x8e\xc1\xcf\x34\x8c\x96\x31\x98\xae\x4f\x38\x70\xcd\x61\x0d\xbb\x04\x6b\x0e\x81\x82\xe1\x28\x12\x31\x8f\xd2\xb0\x71\xdd\x4d\x6e\xb4\x67\x71\xe3\x3a\xc9\x58\x52\x48\x03\xaf\x14\xa4\x3a\xa9\x6b\x83\x43\x4e\xd0\xde\xfd\x90\x30\x91\x4b\x52\xa4\xf5\x91\x61\xda\x12\x13\xb8\x63\xc7\x81\x12\x17\x9d\x0a\xb0\x49\xf3\xc8\xf7\xc8\x62\x0a\x59\x25\x9c\x0a\xfe\xdd\x0e\x5f\x7c\x0e\xaf\xd9\xe0\xc0\xd6\x4f\xcd\x4b\x45\x5e\xfb\x16\xda\xa5\xc4\x1a\xac\xbc\xe6\xd2\xc6\x3d\xf7\xe4\x31\x05\x23\x55\x78\xb4\xd9\xda\x19\xc6\x99\x64\xc8\x9a\x7f\x85\x91\x46\xe0\x94\x83\x03\x89\x72\x60\xd2\xf3\x82\xfb\xe9\x32\x24\xf0\x87\xbf\x05\x74\xd3\x66\xa7\x96\xf7\x2b\xa5\xf1\xf0\x8e\x12\x6d\x20\x43\xf3\x20\xa3\xb3\xfd\xe0\xbb\x8e\xc3\x1a\xab\x87\xeb\xe9\x0d\x38\x04\x1f\xd6\xe7\x1e\x65\xf6\xf0\xd3\xcf\xf8\xfe\x1a\x71\x7a\xb9\xef\x5e\x3a\x91\x31\x5a\xde\x7e\xa6\x63\xa5\x78\x9d\x5b\x68\x4a\x54\xea\x2f\xd5\x9b\x04\xe3\x92\x2f\x41\xaf\xea\xbe\xc8\xf4\xec\x36\xf7\xed\xcf\x88\x89\x12\x6f\x10\xb3\xea\x41\x15\x28\xa9\x94\xc9\x82\x46\x73\x9b\xf0\xac\x9e\x7a\x13\x34\x46\x0a\x69\x5e\x74\xdf\x1b\x47\xd6\xce\x1b\x8c\x14\x23\x0e\xa4\x8e\xff\x2b\x76\x03\x67\x6c\xf1\x26\x66\xa5\x38\xc6\xe5\xe4\x3e\xf5\x1c\x26\x13\xb9\x44\x9c\x41\x95\xc0\x96\x8c\xcd\x81\x9b\x25\xf2\xa3\x20\x88\x39\x14\x1f\xf7\xbf\x7f\xf8\x52\x2c\x12\xe4\xbf\xba\xd6\x17\x10\xcb\x43\x5b\x47\xb1\xbb\xbd\x65\x82\xb4\x6a\x9d\xed\x96\xe2\x4a\xd2\xf3\x4c\xfd\x41\xd6\x68\x19\xd6\x72\x4f\xd9\xd5\x54\xf7\x34\x27\x8a\x50\x81\x29\xb1\x86\xf2\x21\xb0\x4a\x76\xae\x33\xb1\x52\xb8\x71\x7c\x7d\x91\x5b\xad\xf1\xe7\x5f\xb5\xab\xd3\x37\x3c\x6e\xbe\x3b\x97\x74\x2d\xe6\x37\x9e\xa1\xfc\x30\x06\x13\x39\x96\x36\x5a\xc3\x56\xc7\x72\xf1\x58\x4b\x7f\x83\xf0\xc8\x23\x08\xd9\x99\x7f\x32\xe3\x2b\xd9\x5c\xe7\x9f\x49\xf5\x30\xd1\x25\x72\x8a\xe1\x5b\xd0\xed\xbe\x13\xbf\x24\xa8\xae\x8b\x0d\xde\x62\xe0\x18\xa9\xe3\x78\xbd\xf4\x91\x86\x6a\x9f\xf8\x5c\x2e\x69\x5f\xf6\x51\xec\x29\x30\x7e\xbc\x73\x56\xc8\x0b\x33\x11\x96\x8d\x20\xe7\x1d\x3f\xa7\x45\xb6\xaa\x6a\xd3\xb6\x1c\x64\x93\x9c\x15\xeb\x82\x13\x0f\xe9\xe6\xe3\x55\x78\x7b\xe5\x2a\x77\x6c\x2d\x4c\x56\x6b\xd9\x16\xb2\xb8\x2e\x2c\x3f\xef\xdf\xed\x41\x39\xf9\xc7\x85\x17\x7c\xdb\x2e\x61\x95\xda\x05\xf0\xe9\x84\xed\xd5\x24\x91\x15\xd0\x2f\x2f\x67\xea\x9f\x2c\xa9\x65\x39\xdd\xda\xfe\x3e\xbb\xf2\x27\x96\x5e\x3f\x72\xea\xbd\x8e\xf8\x45\x16\xd2\x7f\x01\x00\x00\xff\xff\x9c\x06\xdf\xa5\x50\x06\x00\x00")

func templatesConnectionConnectTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesConnectionConnectTemplate,
		"templates/connection/connect.template",
	)
}

func templatesConnectionConnectTemplate() (*asset, error) {
	bytes, err := templatesConnectionConnectTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/connection/connect.template", size: 1616, mode: os.FileMode(420), modTime: time.Unix(1490122073, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesConnectionConnectionTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\x41\x4f\xdc\x30\x10\x85\xef\xfb\x2b\x9e\x10\xc7\x6d\x38\xf4\x86\xd4\x43\x0a\x01\x22\xb6\xbb\x88\x0d\xaa\xb8\x31\x6b\x0f\x89\xc1\xb1\x23\xdb\xd9\x6d\xb4\xca\x7f\xaf\xec\x2c\x28\x6d\xaf\x3d\x66\x32\x7e\x6f\xe6\x7d\xd3\x91\x78\xa7\x9a\x21\xac\x31\x2c\x82\xb2\x66\xb1\xb8\xb8\xc0\xf5\x06\xeb\x4d\x85\x1f\xf9\x7d\x81\xab\xbb\x7c\x7d\x5b\x6c\x51\x6d\x50\xdd\x95\x5b\xdc\x94\xab\x62\x89\xea\xae\x78\xc6\xcf\x72\xb5\xc2\xf7\x02\xab\xcd\xb6\x42\x79\x83\xe7\xcd\x13\x1e\x8b\xdb\x62\x5d\x3c\xe6\x55\x11\x7b\xf0\xb0\x7a\xba\x2d\xd7\x49\xf4\xea\xd3\x03\xca\x23\x34\x73\x57\xd8\xdd\x1b\x8b\x80\xd0\x50\x48\xbf\x24\xef\x59\xdb\x8e\x1d\x0e\x4a\x6b\x90\x94\x08\x16\x87\x86\x0d\x94\x09\x5c\x3b\x0a\xca\xd4\x20\x84\x46\x39\x89\x8e\x5c\x18\xa2\x49\xfe\x50\x66\xc8\xa5\x04\x99\x01\xef\xca\x48\xd8\x57\x68\x6b\x6a\x68\xb5\x67\x09\xeb\x20\x7a\x1f\x6c\x8b\xaf\x1f\xcf\xfe\x1d\xc3\x47\x0f\x1b\xa5\x3d\x7c\x70\xbd\x08\x59\xd4\x2e\x48\x34\x50\xc6\x07\x32\x82\xa3\xee\xac\x61\xca\x62\xc7\xf0\x0d\x39\x96\xa8\xb5\xdd\x91\xd6\xc3\x12\xde\xa6\x72\xef\x38\x6e\x10\x17\x69\xfb\xc0\xbf\xd8\xc7\x59\x28\xd8\x56\x89\x28\x1e\x77\xa5\x38\x83\x8f\x5b\x3a\x86\x61\x96\x2c\xb3\x45\x18\x3a\x9e\x67\x77\xf2\x3b\x2e\x00\xe0\x2a\xed\xf2\x40\x8e\x5a\x9f\x0a\xc7\xe3\x17\x38\x32\x35\xe3\xdc\x2c\x71\xde\xe1\xf2\x1b\xb2\xd9\xeb\x71\x4c\x6d\x53\x2b\xce\xbb\x6c\x4d\x2d\x63\x1c\x4f\x5f\x55\x34\x1b\x47\xbc\xbc\x79\x6b\x2e\xcf\xa6\xe2\x23\x1d\x4e\x5d\x67\x2f\x9f\x26\x6c\x64\x14\x1b\xa7\x7b\xa1\x40\x1f\x50\x4f\xf3\x25\x92\x8d\xd5\x72\xaa\x3a\x3a\xcc\x73\xee\xd2\xc4\x78\x75\xb6\x4d\xbf\x95\x11\xb6\x8d\x40\x5b\xf6\x9e\x6a\x8e\xa2\x55\x4c\x37\xd1\xdf\x31\x42\xef\x0c\xcb\x89\x0b\xc1\x31\xe9\xb9\xdc\x6e\x48\x2a\xdb\xeb\x7b\xb8\xde\x04\xd5\x72\x86\x67\xdb\xc3\x37\xb6\xd7\x12\x86\xf7\xec\x20\x95\x63\x11\x74\x3a\x93\x18\x6e\xc4\xd1\x7b\x9e\x28\x4e\xe0\x97\xb0\x46\x4f\x5a\x8e\xeb\x5e\x93\x9b\xb9\x64\xc8\x3d\x7c\x2f\x9a\x25\x68\x6f\x95\x8c\x2c\xd3\x0d\x9a\x01\x9d\x8b\xfc\x82\x62\x1f\x55\x55\x38\x61\x4b\xb9\xfc\x01\x6c\xc6\xe7\x6f\x36\xff\x1d\xcd\xef\x00\x00\x00\xff\xff\x6b\x29\x21\x24\xdd\x03\x00\x00")

func templatesConnectionConnectionTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesConnectionConnectionTemplate,
		"templates/connection/connection.template",
	)
}

func templatesConnectionConnectionTemplate() (*asset, error) {
	bytes, err := templatesConnectionConnectionTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/connection/connection.template", size: 989, mode: os.FileMode(420), modTime: time.Unix(1490121984, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServerHttpHandler_xTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x56\x5d\x6f\xe3\xba\x11\x7d\xb6\x7e\xc5\x54\x40\xb7\xf2\xc2\x2b\xa1\xfb\x98\x22\x28\xb2\x89\x37\x31\x9a\xb5\x83\xc4\xdb\x60\x9f\x0a\x9a\x1a\x49\xac\x29\x52\x25\x47\x51\x8d\x20\xff\xfd\x62\x48\xd9\xc9\x5d\x78\x3f\x71\xb1\xd7\x4f\x16\x39\x9c\x39\x33\x3c\x67\x86\x9d\x90\x5b\x51\x23\x34\x44\x5d\x92\x14\x05\x5c\xac\x60\xb9\x5a\xc3\x87\xb3\x7f\xcd\xe1\xfc\xea\x6c\x79\x39\xbf\x83\xf5\x0a\xd6\x57\x8b\x3b\x78\xbf\xb8\x9e\xcf\x60\x7d\x35\xff\x04\xf7\x8b\xeb\x6b\x78\x37\x87\xeb\xd5\xdd\x1a\x16\xef\xe1\xd3\xea\x23\xdc\xce\x2f\xe7\xcb\xf9\xed\xd9\x7a\xce\x36\x70\x73\xfd\xf1\x72\xb1\x4c\x12\xd5\x76\xd6\x11\x64\xc9\x24\xad\x5a\x4a\x93\x49\x8a\x46\xda\x52\x99\xba\xf8\xaf\xb7\x26\x4d\x00\x00\x52\x65\x0b\x65\x7b\x52\x7a\xfc\x36\x48\x05\x83\x4a\x93\xf8\xfd\xf8\x08\xf9\x4d\x04\x7b\x6b\x2d\xc1\xd3\x53\x21\x24\x29\x6b\x7c\xfa\x45\x03\x69\x8d\xc1\x60\x14\x6d\x3a\x6d\x6b\x48\x6b\x45\x4d\xbf\xc9\xa5\x6d\x8b\xad\x6d\x85\x29\x8b\x4e\xf7\xb5\x32\x6f\x7c\xb9\x7d\x53\xdb\xb7\x85\xb6\xf5\xe8\xf3\x9b\xa6\x2d\x7a\x2f\x6a\x4c\x93\x69\x28\x1e\x63\x58\x8a\x16\xe1\xe9\xe9\x4a\x98\x52\xa3\x03\xe5\x41\x40\x13\x3f\x12\xda\x75\x78\xcc\xc8\x93\xeb\x25\xc1\x63\x32\x91\xf0\xfa\x19\x75\x7e\x2e\x64\x83\xc9\x53\xf0\xbd\xc4\xe1\xc8\x49\x87\xd4\x3b\xc3\x31\x0c\x0e\x47\x5c\x27\x55\x6f\xe4\xf1\xb3\xd9\x91\x58\x53\x78\x7d\x24\xc8\x63\x32\x89\x71\xe0\xd5\x7e\xf7\xb0\xf9\x98\x4c\x26\xf2\x04\xe4\x2c\x99\x3c\x8d\x48\xef\xd0\x3d\xe0\xd5\x7a\x7d\x33\xe6\xed\x81\x1a\x04\x87\xff\xeb\xd1\x93\x8f\x88\xb2\xe6\x58\xa4\xe9\xf3\xd9\x6c\x08\x9c\xcc\x6f\xd1\x77\xd6\x78\xbc\x77\x8a\xd0\xcd\xc0\xc1\xeb\x71\x3d\xb8\x9b\x46\x70\xd1\x06\x4e\x4e\x61\xbc\x91\x7c\xd5\x53\xd7\x13\xa3\xbb\x23\x41\xbd\x3f\x81\xd4\x6e\xd3\x80\x72\xb2\x99\x01\x3a\xc7\xd6\x91\x72\xf9\x2d\x8a\xf2\x4c\xeb\xcc\xe5\xef\x6c\xb9\x9b\x26\x93\xa2\x80\xf5\xea\x62\x05\xbd\x47\x10\xa0\x55\xab\x08\x1c\x8a\x12\x1d\x90\x85\xce\xe1\x03\x1a\x5e\xf1\xb6\x77\x12\x41\x10\x09\xb9\xf5\xff\x4c\x26\xaa\x0a\xae\xff\x72\x0a\x46\x69\xc6\x36\x19\xf2\x00\xfd\x2a\x9c\xce\x02\xf6\x88\x68\x61\x08\x9d\x11\x3a\xa4\xec\xe6\xce\x59\x37\x4d\x26\x13\x87\x9d\xde\xdd\x2b\x6a\xc2\x4a\xb6\xcf\x6d\x06\x43\x40\x1d\x4d\xf8\x32\x42\x2a\x11\x71\x7e\xae\xad\xc7\x6c\x1a\xe2\xbb\xfc\x03\x52\x63\x4b\x06\x91\xde\xac\xee\xd6\xe9\xd7\x71\x44\xeb\xa5\xa5\x33\xad\xed\x80\xe5\xb7\x40\x54\x2d\xe5\x61\xb9\xca\xd2\x36\x46\xfa\xab\x67\x9e\xf7\xc6\xf7\x1d\x6b\x1d\x4b\xa8\xac\x83\xa8\x15\xd8\xcb\x74\x76\x40\x36\xfd\x2c\x89\x96\xaf\xe2\xd5\xfe\xe6\xfe\xfd\xf7\xc7\xa7\x43\x21\x4f\x4e\x81\x9b\x44\xfe\xd1\xb4\xc2\xf9\x46\xe8\x6c\x33\x83\x76\xfa\x8f\xef\xae\xf2\x3b\x51\xee\xa9\xf2\xc3\xc5\x2d\x0a\x38\xc4\x0d\x1c\xde\xd8\x72\x07\xca\x90\x8d\x8c\x56\x75\x43\xa3\x76\x83\xf1\x3d\x82\xb4\xbd\x2e\x41\x3c\x58\x55\x06\x9b\xb7\x80\xff\x97\xe8\x7d\xc8\x02\xf6\xbe\xa4\xd0\xda\x83\x32\xd0\xa0\x43\x18\x14\x35\xcc\x32\x4b\x60\x2b\xf0\x83\x22\xd9\xbc\x91\xc2\x2b\x53\x83\x35\xc0\x4d\xc3\x07\xff\x9b\x9e\xf8\x10\x35\xca\x83\x14\x0c\x9b\x43\x74\xe8\x2a\xeb\x5a\x61\x24\x42\x2d\x94\xe1\xab\x30\x96\x80\x1a\x41\x50\x3b\x14\x34\x03\x61\x4a\x50\xf4\x37\x0f\x9a\xb1\xd4\x68\xd0\x09\xb2\x0e\xa4\x2d\x91\x19\xdd\x0a\x65\x48\x28\x13\xc2\x90\x85\xd2\x82\xa2\x18\x68\x10\xbb\xfc\x59\x10\xaa\x82\x01\xc1\xf7\xbe\x43\x39\x1a\x84\x0e\xb7\xb1\x44\x1a\x0d\xca\xed\x0c\x3a\x67\x2b\xa5\x91\x3d\x70\x5c\x3f\x88\x0e\x36\x42\x6e\x61\xac\xdb\x73\x86\x08\xa2\xeb\x9c\x15\xb2\x49\x26\xca\x74\x3d\x05\x22\x8c\x84\xc9\x5f\xf4\x87\x05\x6f\x7e\x95\x16\x6d\x14\x42\x30\x9c\x41\x70\xf6\x03\x2c\xf9\x59\x2d\xc2\xf8\x7b\x41\x1a\x59\x86\x24\x5e\x74\xd6\x0b\x41\xe2\x7b\xb0\x9f\x1f\x8e\xcc\x40\x96\x7f\x0e\x7a\xcd\xf0\x78\x4e\xe6\x4b\x1c\xae\x6d\x5d\xa3\xcb\xa2\x21\x27\x74\xe8\x9b\x4d\x2e\xf3\x4b\xa4\x4c\x96\x33\xd0\x71\xff\xf3\xce\xb7\x77\xfe\xe3\xa8\x23\xcc\xfc\xda\xd6\x70\x0a\x3a\xbf\x23\xa7\x4c\x9d\xfd\x4c\x46\xfc\x37\xea\x78\x2e\x64\xb3\x1f\x41\x60\x10\xcb\xfd\xc8\xd4\x21\x47\xa6\xa6\x14\x1d\xf5\x0e\xa3\x4e\x6c\x18\x1f\xcf\xbc\x6f\xed\x03\x46\xba\x93\x05\x01\x7e\x67\x64\x7e\x63\xad\x0e\x0c\xaf\x9d\xd8\x80\x35\x08\x95\xb3\x2d\x53\xdc\x21\x20\x07\x24\xd5\x06\x79\x79\xf1\x80\x2c\x65\xa1\xb5\x95\x3c\x26\x8a\x82\x25\x1a\xf6\x84\xd9\xf1\x51\x9e\x2e\x2c\x78\x8e\x71\x02\x17\x36\x48\xb8\xb6\x20\xca\xb0\xac\xcc\x8b\x98\xdc\x30\x6c\x4f\xd0\x9b\x12\x9d\x27\x61\x82\x49\x63\x07\x8e\xbd\x0b\xde\x07\xeb\xb6\x01\x5b\x58\xb5\x07\x4d\x32\x18\x44\xbe\xac\xd1\x31\xc7\x1e\x94\xd6\xdc\xa6\x7b\xa1\xf5\x0e\x5a\xb1\xe5\xa1\x57\xaa\xaa\x42\x87\xdc\x55\x4e\xa6\xb0\xe0\xa2\x90\x53\x72\xbb\x03\xa5\x9c\x1c\x5b\x42\x23\xc8\xc3\xd0\xec\x5e\x74\x82\x50\x2e\x8e\xcc\x09\xc4\xcf\xe5\x3c\x99\x44\x51\x33\x77\x8e\xc8\xfb\x2c\x2c\xb1\x46\x62\xdd\x0f\x3c\x8b\xb6\xf9\x6d\x6f\xb2\xc8\x3f\x15\xf5\xad\xa7\xc9\xd7\x88\xf2\xab\xa7\xb0\xaa\x60\x7c\x53\x8c\xda\xfe\x30\x2a\x3b\xa6\xf3\x0b\xa4\xfc\xfb\x47\xc1\xbe\x32\xf1\x11\x04\xa7\x07\x3a\x6f\x66\xf0\x9f\x43\x03\xda\x83\xdc\x9b\x4f\x21\x5c\x29\xb3\x37\x8e\x90\x86\x09\x32\x20\x48\x61\xc2\x44\xa8\xe2\x35\xa3\x73\xcc\xe1\x31\x87\x6c\x33\xe5\x77\x5f\x78\xd5\x7d\x01\xe6\xe1\x51\x76\xfb\x8c\xfb\xf8\xeb\x8e\xcb\x84\x21\xe9\x97\xef\xba\xf8\xdc\x80\x53\xde\x8a\xff\xb3\x97\xf7\x1f\x2b\x07\xa7\x90\x86\xa3\xe9\x1f\x94\x66\x25\x94\xfe\x3c\xcf\xdf\x02\x00\x00\xff\xff\x01\x05\x66\x72\x2f\x0d\x00\x00")

func templatesServerHttpHandler_xTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerHttpHandler_xTemplate,
		"templates/server/http/handler_x.template",
	)
}

func templatesServerHttpHandler_xTemplate() (*asset, error) {
	bytes, err := templatesServerHttpHandler_xTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/http/handler_x.template", size: 3375, mode: os.FileMode(420), modTime: time.Unix(1490145809, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServerHttpServerTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x52\x41\x6f\x9b\x4c\x14\x3c\xef\xfe\x8a\x11\x8a\x3e\x41\xc4\x07\x6d\x8f\x56\x7a\x70\x12\x12\x5b\x75\x8c\x65\x13\x45\x39\x6e\xe0\xc5\x46\x81\x5d\xba\xec\xd6\x8e\x10\xff\xbd\x5a\x68\x6d\xae\xf5\xcd\x3b\x6f\x66\xde\x9b\xa1\x11\xf9\x87\xd8\x13\x0e\xc6\x34\x9c\xc7\x31\xee\x53\xac\xd3\x0c\x4f\xf3\x1f\x09\xee\x16\xf3\xf5\x63\xb2\x43\x96\x22\x5b\x2c\x77\x78\x58\xae\x92\x10\xd9\x22\x79\xc5\xcb\x72\xb5\xc2\x6d\x82\x55\xba\xcb\xb0\x7c\xc0\x6b\xfa\x8c\x6d\xf2\x98\xac\x93\xed\x3c\x4b\xdc\x0c\x36\xab\xe7\xc7\xe5\x9a\xf3\xb2\x6e\x94\x36\xf0\x39\xf3\x24\x99\xd8\x39\x79\x9c\x79\xa6\xac\xc9\xe3\x9c\x79\x5d\x87\x68\x33\xae\xb1\x55\xca\xa0\xef\xe3\x5c\x49\x49\xb9\x29\x95\xf4\x78\x30\xac\xb5\xa6\xe3\x8e\xf4\x2f\xd2\xd0\x64\xac\x96\x2d\x04\x24\x1d\x87\xbd\xd1\x0e\x08\x7f\xb7\x32\xbf\x0c\xfa\x39\xae\x2f\x3a\xd1\x9d\xc8\x0f\x14\xc0\xbf\x76\x8c\x68\x1c\x09\x41\x5a\x2b\x1d\xa0\xe3\x2c\x8e\x91\xa5\xf7\x29\x48\xe4\x07\x34\x95\xdd\x97\x12\x92\xa8\x70\x46\x56\x96\x3f\x2d\x61\x38\xc3\x28\xd0\xa9\x51\x2d\x0d\x94\x37\x6b\x50\x4a\x43\x5a\x8a\xaa\xfa\x0c\x91\x0b\x09\x51\x55\xb0\x2d\x41\x20\x57\x75\xad\xe4\xc0\xe3\x4c\x14\x85\xc6\xec\x3b\xbc\x99\x3b\x78\x91\x65\x9b\x68\xe3\x04\xfb\xde\xbb\xb8\xd7\xe2\x83\x60\x0e\xd4\x12\x72\x25\xdf\xcb\xbd\xd5\xe2\xad\x22\xb4\xaa\xa6\x83\x3a\x72\xa6\x49\x14\x59\x59\x93\xb2\xc6\x89\xb9\x10\xa3\x1d\xe5\x4a\x16\xb8\x1e\xff\xdd\x5b\x2d\xdc\xc5\xfe\xd9\x66\x7b\xe1\xf4\x7d\xc0\xd9\x51\x97\x86\xfe\x55\xe4\x65\x42\x72\x2a\x9c\xd5\xf6\xe4\xd8\x43\x9e\x7f\x53\x7f\xb2\x27\x3f\xe0\x00\x10\xc7\x50\x92\xf0\xae\xf4\x18\xa9\x18\x6a\x18\xa0\xae\xfb\x1f\x5a\xc8\x3d\xe1\x4a\x86\xb8\x6a\x9c\x4a\x34\x1f\xf0\x16\x7d\x3f\xcc\xd4\xf6\x14\x2d\x84\x2c\x2a\xf2\xbd\x78\xe4\xb6\x71\xd7\xe1\xaa\x89\xb6\xe2\xb8\x16\x35\xb9\xe0\x42\x57\xf7\xf8\xea\x9e\xfa\x7e\xa4\x68\x3f\x0f\x82\xb3\x15\xc9\xc2\xa9\x72\xd6\x3a\xa3\xff\x26\xfd\x77\x9c\xb1\x79\x51\xe8\x19\x2e\x3f\x57\x53\xc8\x19\xfb\xa3\x74\x86\x6a\x7b\x72\xcf\x93\x2c\x07\x68\xd2\x87\x83\xa7\x29\x39\x7c\x1a\xb5\xc3\x9f\xc4\x69\x41\xa2\x20\x7d\xfb\x69\xa8\x9d\xe1\x2b\x6e\x6e\xf0\xed\x4b\xc8\x59\xef\xba\x75\x5f\x36\xda\x10\xb2\xac\x78\xff\x3b\x00\x00\xff\xff\x50\xce\x19\x27\x9b\x03\x00\x00")

func templatesServerHttpServerTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerHttpServerTemplate,
		"templates/server/http/server.template",
	)
}

func templatesServerHttpServerTemplate() (*asset, error) {
	bytes, err := templatesServerHttpServerTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/http/server.template", size: 923, mode: os.FileMode(420), modTime: time.Unix(1489677189, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTriggersTrigger_xTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x51\x6f\xdb\x36\x10\x7e\xb6\x7e\xc5\x37\x23\x1b\xe4\x42\xb6\xb1\x3d\x7a\xcd\x43\xb6\xaa\x89\x31\xcf\x2e\x12\x77\x43\xdf\x4a\x4b\x27\x99\x8d\x44\x6a\x24\x15\x2f\x33\xf4\xdf\x07\x8a\x94\xec\x34\x4e\x52\x04\x68\x9e\xa8\xbb\xe3\xdd\xf7\x7d\x77\xbc\xb8\x62\xc9\x2d\xcb\x09\x46\xf1\x3c\x27\xa5\x83\x60\x3a\xc5\xbb\x15\x96\xab\x35\xfe\xbc\xf8\x23\xc6\xef\x57\x17\xcb\xcb\xf8\x06\xeb\x15\xd6\x57\xf3\x1b\xbc\x9f\x2f\xe2\x08\xeb\xab\xf8\x13\xfe\x9e\x2f\x16\xf8\x2d\xc6\x62\x75\xb3\xc6\xfc\x3d\x3e\xad\x3e\xe2\x3a\xbe\x8c\x97\xf1\xf5\xc5\x3a\xb6\x31\xf8\xb0\xf8\x78\x39\x5f\x06\x01\x2f\x2b\xa9\x0c\xc2\x00\x00\x86\x85\xcc\x87\x81\x3b\xe6\xdc\x6c\xeb\xcd\x24\x91\xe5\xf4\x56\x96\x4c\xa4\xd3\xaa\xa8\x73\x2e\xc6\x3a\xbd\x1d\xe7\xf2\x97\x69\xca\x75\xc5\x4c\xb2\x25\x35\x0c\x46\x41\xb0\xdf\xe3\x4c\xb0\x92\x30\x3b\xc7\x64\x69\x0f\x4d\x13\xec\xf7\x63\x28\x26\x72\xc2\x99\x88\x70\x56\xb5\xce\xb9\xa8\x6a\xd3\x79\x79\x86\xb3\x6a\x12\x8b\xba\x5c\x70\x43\x8a\x15\xd6\x31\x9d\xc2\x05\x59\xbb\x3e\xce\xc2\x23\x9c\xb5\x25\x4e\x5e\xea\x31\x34\xcd\xda\xc9\xd6\xa6\xb1\x66\xea\x30\x81\x6b\x30\x01\x12\x75\x49\x8a\x19\x4a\x71\xc7\x8a\x9a\x82\x44\x0a\x6d\xfa\x0c\xcf\x25\x38\x87\xfb\xf6\xb5\xff\xb2\xd7\x3b\x3a\x24\xd2\xe7\x8f\x8f\xd4\x58\xd5\xe6\x1b\xe4\xf0\x51\xaf\xd4\xa3\x67\xe3\xd2\xbc\x42\x0f\x3c\x9b\xe2\xd5\x8a\x78\x90\x6d\xa2\x87\x92\x23\xa5\x8c\x0b\xd2\x30\x5b\x02\x6f\x2d\x99\x54\xed\x57\x77\xe1\x80\x29\x30\xf7\xd5\x29\xbb\xcb\xa4\x8d\xaa\x13\x83\x7d\x3b\xd7\xc7\x3d\xc0\xc3\x91\x6c\x1a\x1f\x61\xc5\xec\xa8\xb9\xaf\xb5\xcd\xdf\x34\xf8\xfc\x45\x4b\x31\x1b\x3a\xe3\x35\xdb\xf9\xa8\xe1\xe7\x3e\xb7\x27\xf6\x04\x35\xdf\xc6\x63\x6e\xd2\x99\xbe\x26\xf7\x22\x37\x9f\xea\x1b\xc8\x1d\x26\xec\x3b\xd1\x3b\x80\x02\xeb\xf6\xd5\x53\xb0\x1f\x02\xfe\xa7\xa6\x9a\x90\x6c\x99\xc0\x9b\xa7\x28\xb6\x81\x87\x65\x73\x74\x9c\xbc\xeb\x8f\x1e\xd1\x92\x76\x27\x4a\x2a\x32\xb5\x12\x1a\x0c\x82\x76\xd8\xef\xbf\xf6\x57\x4a\x56\xa4\x8a\x7b\x70\xc1\x0d\x67\x05\xff\x8f\x52\x30\x91\x42\x11\x4b\xef\x61\x24\x54\x2d\x26\x41\x56\x8b\xe4\x74\x85\x30\x3d\x8d\x6a\x74\x8a\x95\xa7\xee\x40\xe1\xa7\xc7\x01\xce\xdf\xcb\x33\x43\xc9\x6e\x29\x7c\x5e\xa4\x08\x3f\x8f\xa2\xfe\xde\x01\xcc\x0c\xa9\x33\x77\x3d\xbb\xb1\x1d\xdc\xf1\xa2\x80\xae\x37\x25\x37\x60\x4f\xcf\x96\x14\x46\xfa\xf7\x67\x48\x09\x56\x38\x40\x11\x76\x5b\x9e\x6c\xad\x47\x60\x53\x67\x19\x29\x0d\x1f\x49\xff\x1e\x47\x3a\xc9\x42\x73\x0a\xf7\xa8\x85\x12\x4a\x97\x3c\x63\x09\xed\x9b\x91\xd7\xc6\x4c\xdc\x60\xbc\x1d\x43\x4e\xc2\x37\x4f\x3c\xa3\x91\xa7\x74\x4d\xcc\x53\xaa\x64\x65\x77\x19\x37\x54\x42\x66\xd9\x49\xec\x46\x62\x43\xd8\x32\x91\x52\xfa\x1a\xd4\xb6\x5a\x78\xb2\xb1\x5e\xb5\x07\xed\x7d\x3b\xf6\x5c\x3a\xf9\x8d\xac\x1c\xd6\xa4\x90\x9a\x9e\x51\xd7\x11\x52\x74\x47\xc2\xb4\x73\xfb\x45\x6e\x34\x32\x25\x4b\x90\xbd\xc0\x45\x3e\x79\x41\x5f\x23\xab\xb0\x93\xb4\x2d\x17\x7a\x30\xa3\x1e\x0d\x53\xc6\x12\x5a\xc8\x0e\xd6\xa6\x90\xc9\x6d\xd4\x4e\x3e\x17\x39\x6a\x61\x78\x61\x1f\x0e\x2f\x50\x92\xd6\xf6\x17\x09\xd7\x50\x94\x10\xbf\xa3\x34\x42\x49\x4c\xd8\xc0\xc7\x44\xb0\x63\xda\x95\x4d\x5f\xc2\x79\x84\x22\x1c\x81\x94\x92\xdd\x2b\xc9\xda\xd3\xc0\x1e\xfd\xa2\x9c\x9d\xc3\x4c\x5c\x13\xfa\x79\xe7\x59\xe7\x3d\x3f\x6f\xa1\x1e\x9e\x90\xfd\x9b\x4e\xb1\xde\xba\x35\x23\xa8\x38\xc2\x15\x61\x47\xc8\xa5\x69\xff\x01\x96\x95\xb9\x1f\x3b\xfb\xd8\xd2\x8f\xa0\xa5\xf5\x6f\x18\x2f\x6c\x7a\xec\xb8\xd9\x42\x48\x70\xad\x6b\xd2\x0f\x2a\xf8\x6e\x0b\x5e\xf4\xe6\x26\x18\x0c\x78\x66\xc9\x38\xc8\x47\x0b\xc2\x0d\xbe\x9b\xe1\x5f\xdb\x88\x1f\x3a\xd8\x83\xc1\xa0\x90\xf9\xe4\x83\xe2\xc2\x64\xe1\xf0\xda\xea\x4c\x77\x94\x7a\x51\x34\x89\xb6\x2d\x7e\xc9\x76\x2d\x99\xe1\x47\x3d\x8c\x6c\xcc\xc8\x66\xf0\x68\x48\xa9\x60\x30\x68\x82\x41\x13\x34\xff\x07\x00\x00\xff\xff\x8b\x69\x0a\x56\x4e\x0a\x00\x00")

func templatesTriggersTrigger_xTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesTriggersTrigger_xTemplate,
		"templates/triggers/trigger_x.template",
	)
}

func templatesTriggersTrigger_xTemplate() (*asset, error) {
	bytes, err := templatesTriggersTrigger_xTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/triggers/trigger_x.template", size: 2638, mode: os.FileMode(420), modTime: time.Unix(1490024127, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTriggersTrigger_x_runTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x93\xcf\x6b\xdb\x4e\x10\xc5\xef\xfb\x57\x3c\x72\xf8\x22\x05\x7f\xad\x9c\x03\x29\x84\x9c\x7a\x69\x4b\x08\x85\x52\x7a\xd8\x48\x63\x79\xf1\x6a\x46\xec\x8f\x14\x63\xf4\xbf\x97\x5d\xad\x5c\x37\x71\xd2\x43\x0f\x85\xfa\x60\xa4\x9d\xd9\x7d\x4f\x9f\x37\x3b\xea\x76\xa7\x7b\x42\x70\xa6\xef\xc9\x79\xa5\xcc\x30\x8a\x0b\xa8\x14\x00\x5c\x1c\x0e\x58\x7f\x9a\x7b\xee\x45\x02\xa6\xa9\x69\x85\x99\xda\x60\x84\x2f\x54\xad\x54\xd3\xe0\xb3\xb6\xa6\xd3\x81\xf0\xdd\x58\x8b\xa7\xe5\x2d\x6c\x09\x86\xc7\x18\x60\x3c\x46\x27\x23\x39\xbb\x87\xa7\x10\xc7\xb5\xda\x44\x6e\x51\x19\x5c\x26\x85\x0f\x7a\x20\x4c\xd3\xc3\x6c\xe2\x7d\xda\x53\x1f\x4f\xad\x6a\x7c\xfd\x46\xce\x89\xc3\x21\x9b\xca\xcf\x1e\xd7\x37\x18\xf4\x8e\xaa\x52\x5c\xe1\xaa\xce\xe5\xfc\xd7\x34\xb8\x8b\x3e\xc8\xb0\xd8\x31\xc2\x68\xa5\x23\x6c\xc9\xd1\xd2\x72\x3b\x8e\xc4\xdd\x72\xa0\xf6\x60\xa2\x8e\x3a\xb5\xd4\x1d\x85\xe8\x38\xbf\x99\x0d\x2c\x71\x35\xb7\xd6\x78\x87\xab\xe2\x26\xfd\xe6\xbe\x72\x4e\x5e\x9d\xd4\xc9\x3a\x1b\xab\xa6\xdf\x91\x92\x18\xde\x44\x25\xe7\x50\x7d\xcc\x9b\xfe\x4d\x56\xf7\x91\xe1\x22\xfb\x4c\xa7\xcc\x27\x34\x77\x78\xb4\xd2\xee\x3c\x22\x07\x63\x7f\x29\x8e\x62\xad\xe1\x3e\x31\x6c\x65\x18\x2d\x05\x82\xb8\x45\x6a\xc6\x18\xce\x61\xac\x93\x58\x95\x06\x1b\x97\x3f\xc7\x7b\x7d\x77\x7c\x5c\x95\x41\x3e\xee\x7d\x3e\xac\xa7\xcc\x9b\x06\xa5\xe8\xd1\x09\x58\x02\xb6\xfa\x69\x4e\xd9\x27\x5d\x2b\x7d\x9f\x7c\xb6\xc2\x2d\x39\x4e\x30\x6f\xb3\x8c\xc7\xff\xd8\x4b\xc4\xa0\xf7\xa9\x09\xd1\xa7\x36\x1f\x34\x77\xda\x75\xd8\x0c\x21\x03\x48\xa5\x72\x71\x67\x82\x9b\xa3\x76\xd1\xff\x22\xd1\x3d\x8b\x70\x52\xe7\x31\x3f\x90\x0f\x2f\x38\xaf\xf0\x18\x03\x3a\x21\x9f\xed\x67\xe2\x59\x5a\xd8\xee\x5f\xa6\xb2\x80\x17\x26\x04\x33\xd0\xdb\xac\x93\xe2\x1f\xc1\xae\x5e\xbd\x09\xab\x39\x88\xfa\xaf\x25\x51\x6e\xf1\xf5\x0d\xfe\x7b\xcd\xe3\x61\x52\xe7\x53\x3a\xcd\x47\xca\xe7\xe4\x9c\x7e\x04\x00\x00\xff\xff\xa2\x00\xd3\xf1\xa5\x05\x00\x00")

func templatesTriggersTrigger_x_runTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesTriggersTrigger_x_runTemplate,
		"templates/triggers/trigger_x_run.template",
	)
}

func templatesTriggersTrigger_x_runTemplate() (*asset, error) {
	bytes, err := templatesTriggersTrigger_x_runTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/triggers/trigger_x_run.template", size: 1445, mode: os.FileMode(420), modTime: time.Unix(1489673184, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTypesType_xTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x51\xcb\x8e\x9b\x30\x14\xdd\xfb\x2b\x8e\x22\x56\x55\x1a\xf6\x91\xb2\x48\x5b\x27\x41\xa5\x50\x05\xd2\x2a\xbb\x38\x70\x49\x69\x8d\x41\xd8\x74\x34\x42\xfc\xfb\xc8\xc4\x79\x4c\x34\xb3\x99\xdd\x7d\x9c\xc7\xf5\x71\x23\xb2\x7f\xe2\x44\x30\xcf\x0d\x69\xc6\x7c\x1f\xdf\x62\x44\x71\x8a\x1f\xcb\xef\x1c\x5f\x37\xcb\x68\xcd\x13\xa4\x31\xd2\x4d\x90\x60\x15\x84\x7c\x8a\x74\xc3\xf7\xf8\x1d\x84\x21\xbe\x70\x84\x71\x92\x22\x58\x61\x1f\xef\xb0\xe5\x6b\x1e\xf1\xed\x32\xe5\x16\x83\x9f\xe1\x6e\x1d\x44\x8c\xf5\x3d\xbc\x48\x54\x84\xf9\x02\xb3\xb1\x18\x06\xd6\xf7\x9f\xd1\x0a\x75\x22\x78\x6a\x0a\xaf\x19\x97\xab\x92\x64\xae\x1f\xd6\xe5\x14\xde\xc8\xf5\x9a\x19\x57\x5d\x15\x96\x86\x5a\x21\x2d\xca\xf7\x71\x15\x1f\x06\x5b\xd2\xc5\x00\xa5\x86\x50\x20\xd5\x55\xd4\x0a\x43\x39\xfe\x0b\xd9\x11\xcb\x6a\xa5\xcd\xfb\xac\x05\xce\xbd\x33\xf9\x65\x39\x97\x7b\x48\xe5\xb7\xca\x0e\x9d\xff\x2b\x4b\x64\x9d\x36\x75\x35\x06\x8a\x13\x29\x67\x5e\x17\x05\xea\x02\xe6\x0f\x41\x37\x94\xb1\x71\x7d\xcf\xd5\xa6\xed\x32\x83\x9e\x01\xc0\x9b\xe1\x24\x75\x6b\x28\xbf\x45\x74\x01\x96\xc5\x98\x4c\x75\xa4\xfc\x36\x76\xd3\xa8\x93\x52\x1c\xa5\x75\xf8\xd4\xf7\xee\x6e\xfb\xc2\x66\x96\xda\x1f\x0f\x94\xa1\x56\x09\x69\x9b\x3b\x32\x49\x7d\xdf\x5a\x21\x77\xe6\x47\x95\x71\xf8\xab\x6b\x35\x9f\x9c\x11\x5b\xf1\xe4\x04\x27\x87\xeb\x3b\x5c\xa8\x0f\xed\xf0\x12\x00\x00\xff\xff\x9b\x9b\x4a\x47\xa2\x02\x00\x00")

func templatesTypesType_xTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesTypesType_xTemplate,
		"templates/types/type_x.template",
	)
}

func templatesTypesType_xTemplate() (*asset, error) {
	bytes, err := templatesTypesType_xTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/types/type_x.template", size: 674, mode: os.FileMode(420), modTime: time.Unix(1490136819, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesVendorGitkeep = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func templatesVendorGitkeepBytes() ([]byte, error) {
	return bindataRead(
		_templatesVendorGitkeep,
		"templates/vendor/.gitkeep",
	)
}

func templatesVendorGitkeep() (*asset, error) {
	bytes, err := templatesVendorGitkeepBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/vendor/.gitkeep", size: 0, mode: os.FileMode(420), modTime: time.Unix(1488419629, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/Dockerfile.template": templatesDockerfileTemplate,
	"templates/Makefile.template": templatesMakefileTemplate,
	"templates/actions/action_x.template": templatesActionsAction_xTemplate,
	"templates/actions/action_x_run.template": templatesActionsAction_x_runTemplate,
	"templates/cmd/main.template": templatesCmdMainTemplate,
	"templates/connection/cache.template": templatesConnectionCacheTemplate,
	"templates/connection/connect.template": templatesConnectionConnectTemplate,
	"templates/connection/connection.template": templatesConnectionConnectionTemplate,
	"templates/server/http/handler_x.template": templatesServerHttpHandler_xTemplate,
	"templates/server/http/server.template": templatesServerHttpServerTemplate,
	"templates/triggers/trigger_x.template": templatesTriggersTrigger_xTemplate,
	"templates/triggers/trigger_x_run.template": templatesTriggersTrigger_x_runTemplate,
	"templates/types/type_x.template": templatesTypesType_xTemplate,
	"templates/vendor/.gitkeep": templatesVendorGitkeep,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"Dockerfile.template": &bintree{templatesDockerfileTemplate, map[string]*bintree{}},
		"Makefile.template": &bintree{templatesMakefileTemplate, map[string]*bintree{}},
		"actions": &bintree{nil, map[string]*bintree{
			"action_x.template": &bintree{templatesActionsAction_xTemplate, map[string]*bintree{}},
			"action_x_run.template": &bintree{templatesActionsAction_x_runTemplate, map[string]*bintree{}},
		}},
		"cmd": &bintree{nil, map[string]*bintree{
			"main.template": &bintree{templatesCmdMainTemplate, map[string]*bintree{}},
		}},
		"connection": &bintree{nil, map[string]*bintree{
			"cache.template": &bintree{templatesConnectionCacheTemplate, map[string]*bintree{}},
			"connect.template": &bintree{templatesConnectionConnectTemplate, map[string]*bintree{}},
			"connection.template": &bintree{templatesConnectionConnectionTemplate, map[string]*bintree{}},
		}},
		"server": &bintree{nil, map[string]*bintree{
			"http": &bintree{nil, map[string]*bintree{
				"handler_x.template": &bintree{templatesServerHttpHandler_xTemplate, map[string]*bintree{}},
				"server.template": &bintree{templatesServerHttpServerTemplate, map[string]*bintree{}},
			}},
		}},
		"triggers": &bintree{nil, map[string]*bintree{
			"trigger_x.template": &bintree{templatesTriggersTrigger_xTemplate, map[string]*bintree{}},
			"trigger_x_run.template": &bintree{templatesTriggersTrigger_x_runTemplate, map[string]*bintree{}},
		}},
		"types": &bintree{nil, map[string]*bintree{
			"type_x.template": &bintree{templatesTypesType_xTemplate, map[string]*bintree{}},
		}},
		"vendor": &bintree{nil, map[string]*bintree{
			".gitkeep": &bintree{templatesVendorGitkeep, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

