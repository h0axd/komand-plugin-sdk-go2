// Code generated by go-bindata.
// sources:
// templates/Dockerfile.template
// templates/Makefile.template
// templates/actions/action_x.template
// templates/actions/action_x_custom.template
// templates/cmd/main.template
// templates/connection/cache.template
// templates/connection/connection.template
// templates/connection/connection_custom.template
// templates/server/http/handler_x.template
// templates/server/http/server.template
// templates/triggers/trigger_x.template
// templates/triggers/trigger_x_custom.template
// templates/types/sdk_file.template
// templates/types/type_x.template
// templates/vendor/.gitkeep
// DO NOT EDIT!

package sdk

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesDockerfileTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\x4f\x4f\xc3\x20\x18\xc6\xef\x7c\x8a\x37\xbb\x17\x9c\x89\x17\x93\x1e\x66\x8a\xa6\x71\x83\x86\xd4\xa9\x31\x1e\xb0\x45\x42\x18\xd0\xd0\x7a\x98\x0d\xdf\xdd\x2c\xa5\x27\xf5\xc8\xc3\xf3\xe7\xf7\xde\x0b\x7e\x00\x1b\x9c\xf4\x3d\xd1\xa1\x18\x4e\x5f\xda\xf8\xdb\x2b\x7c\x0d\x68\xbf\xbb\xa3\x7b\x08\x51\x4b\x6f\xbe\xe5\x64\x82\x2f\x17\x63\xfe\x19\x7b\x5b\xea\x90\x1f\xd3\x79\x50\xe5\x92\x46\x88\xb2\x23\x3c\xf0\xed\xcd\x91\xb2\x8a\x0b\xfa\xd2\x50\x51\x1f\x28\x6b\xcb\x2d\x42\xe2\x89\x81\xb3\xbd\x89\x50\x0c\x40\xf2\xf2\x12\x1c\xc9\x87\xf1\x68\x57\x55\x80\x81\xe8\x40\xc6\xd8\x91\x79\x06\xdc\xc8\xce\x4a\xad\x44\x08\x13\xa4\x84\x9e\xb9\x78\xac\x6a\xf1\x9f\x25\x25\xb4\x74\xe4\x56\x3c\x0e\xaa\xc3\x67\xe9\x4e\xf0\x4b\xc9\x38\xd2\x2a\x58\xd9\x2f\x42\x74\x50\xc4\xcf\x75\xe0\x72\x4f\x2b\x5e\x1b\x5e\xb3\x16\xde\x36\x7f\x30\x93\x79\xc6\x4c\x3a\x95\xd2\xe6\x1d\xfd\x04\x00\x00\xff\xff\xc4\x7a\x21\x4f\x52\x01\x00\x00")

func templatesDockerfileTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesDockerfileTemplate,
		"templates/Dockerfile.template",
	)
}

func templatesDockerfileTemplate() (*asset, error) {
	bytes, err := templatesDockerfileTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/Dockerfile.template", size: 338, mode: os.FileMode(420), modTime: time.Unix(1490194044, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesMakefileTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x6d\x6f\xdb\x36\x10\xfe\xac\xfb\x15\x57\xcf\xb0\xad\xa0\x14\xe3\x60\xdd\x00\x6d\x79\x29\xe2\x20\x2d\x8a\xd9\x46\x92\xb6\x18\xa6\xb5\x60\x24\x5a\x22\x2c\x91\x02\x45\x39\x4b\xe2\xfc\xf7\x81\x7a\xf1\x4b\x9c\xb8\xfb\xb2\x2f\x86\x7d\x77\xbc\x7b\x9e\xbb\x87\x47\x7f\xb9\xb8\xba\xfe\x38\x19\x9f\x1e\x77\x07\x45\xc2\xd3\x14\x63\xcd\x73\xec\x7f\x5b\x70\x5d\x08\x25\x7d\xec\x63\x9e\x96\xb1\x90\x5e\x91\xf3\xd0\xbb\x67\x59\x8a\x4b\x2c\x78\x84\xfd\x82\xae\x82\x28\xed\xbb\x30\x7e\xff\xc7\xc5\x4e\x1e\xc9\x32\xbe\x3f\x49\x1d\x51\x65\xb8\x18\x9f\x4f\x46\x1f\xc7\x97\xfe\x2a\xcb\x2d\x2b\xf8\x2f\x3f\xa3\x08\x95\xf4\x72\x19\xe3\xd1\x09\x8d\xf8\x82\xca\x32\x5d\x67\x58\xd2\x65\x10\xd0\x65\xdc\xc7\x25\x1a\x8d\x24\xc2\x7e\x20\xfb\x2e\x7c\xb9\x18\x8f\x26\x57\x2f\x30\x93\x91\xd2\x3f\x22\x56\xc7\x54\xa8\xce\xbf\x8e\x4e\xb7\x00\x59\xc4\xd8\x1d\x4c\xbf\x8e\x5c\x17\xbe\x6f\xd3\xe6\x61\xa2\xb0\x3b\xb0\x46\x17\x97\xc8\xee\xe6\xd8\x7f\xc4\x5c\x0b\x69\xd0\xa8\x32\xcf\xb9\x1e\x14\xe5\x6d\x61\xf4\xa0\xdb\x3d\x7c\x3b\x7c\x3b\x74\x5d\x34\x2a\x55\x77\xdb\x8e\x23\xd7\xc5\xa7\xbe\x0b\x30\xfd\x74\x79\xdc\x1d\xd4\x5c\x5c\xd2\x64\x26\xd6\x52\x0d\xce\xf5\x0c\xd3\x5e\xfc\x00\x30\xba\xbe\x39\x3d\xa6\x73\x95\x31\x19\xd1\x9a\x5a\x41\x6f\x85\x04\xb8\xba\x98\x4e\x8e\x1f\x1f\xd1\x9b\xb2\x70\xce\x62\x7e\xa5\x94\xc1\xa7\x27\x10\x33\x19\xf1\x19\x5a\x37\x38\x55\x50\x93\x1e\xb8\x8c\xc4\x0c\x80\xa5\xa9\x5f\xf5\x1e\x45\xc6\x62\x8e\x79\x7d\x1e\x75\x29\x25\xd7\x00\x75\x15\x1f\x85\x2c\x0c\x4b\x53\x80\xdb\x52\xa4\x91\x0f\xce\x59\xd5\x86\xce\xe7\x42\xc8\x18\x35\xcf\x6d\x4b\x6c\x01\xb7\x03\x8e\xe1\x85\xb1\x43\xea\x0e\x2e\x27\xd3\xf7\x37\x1f\x5c\x5a\xe8\x90\x36\x7e\x5c\x2e\x31\x95\x48\x8a\xa6\xbf\xaf\x44\x81\x93\xcd\x23\xa1\x91\xe4\x68\x19\x3a\xb1\xc2\xaa\x34\x12\x65\x0d\xb4\x1d\xc0\x8b\xa7\x69\x98\x45\x34\x63\x42\x7a\xb1\x02\x68\xb0\xfb\x75\x02\x70\xc2\x1c\x89\x7e\x96\x64\x74\x7d\xe3\x02\xd8\x46\x58\x6e\x35\x81\xd9\x5a\x94\xbd\x1e\x06\xe0\x58\xe9\x10\xe1\xdd\x96\xd8\xa1\xdf\xac\x8f\x16\x34\x18\x54\x87\x30\x70\xbd\x03\x1a\x0c\x83\x4e\xc4\x0c\xf3\xab\x66\x06\x34\x97\xf1\x6f\xb5\xbe\xdf\x76\x07\xad\xf4\xdd\xa0\x43\x3b\x2f\x28\xd3\x4a\xbb\xe4\xe0\x9c\xe9\xcc\xd6\x3e\xb0\x75\x5a\x23\x34\x73\xf1\xc1\xb1\x5e\x3d\xb3\xcd\xfb\x74\xe9\x82\x63\x98\x46\x12\x2e\x1e\x5a\x0b\x12\xc2\xff\x09\xd3\x32\xe2\xc7\x8d\xe1\x00\xa0\x82\xe3\x83\x13\xa9\x70\xce\x75\xdb\x48\x92\xdb\x3b\x46\x0c\xae\xc4\xd7\x36\xc4\x5f\x8b\x0f\xbd\xd5\x31\xc3\xe2\xfd\xa1\xbb\xce\x94\xd9\x56\x02\x68\x1e\x73\xc9\x35\x33\x7c\x25\x9d\xcb\xda\x60\xe5\x23\xf9\x5d\xd3\x0f\x2c\xe6\x3c\xe5\x46\xc9\xd5\x10\x22\xf4\xbc\xd5\x9c\x96\x4b\xcc\x16\xb6\x39\x95\xed\xdc\xaa\x67\xed\x05\xe7\xec\x2e\x11\x61\x82\xf5\x05\xc1\xe1\xc6\x22\xe9\xf5\x5a\x6b\x53\xa7\x85\x83\xb1\xda\x1d\x05\x21\x39\x33\x6d\x1e\x93\xe5\x1b\xb3\xa9\xa0\x4f\x16\x5c\xa7\xec\xde\x42\x7f\x06\x1b\x8d\x42\x93\x70\x0c\x4b\xad\xb9\x34\x18\x09\xcd\x43\xa3\xf4\xfd\x06\x9f\x75\xda\x5e\x0f\x23\x31\x9b\x21\x29\xc7\x7a\x93\xe6\x2a\x82\xe2\x49\xbb\x69\xbc\x2a\x72\x0d\xa4\x95\xe8\x96\xbb\xd7\xc3\x9c\x99\x30\xb1\xb7\x8b\xe4\x43\xfc\xfd\xb5\xd3\xad\xc4\x94\x16\x31\x1e\xd4\xde\x03\x2f\x7e\xd8\x29\xf0\x0c\x6e\x23\xbe\xdd\xce\x40\xbd\x30\xfc\xb6\x20\xd1\xa5\x6c\x8d\x24\x31\x26\xdf\xf2\x54\x16\x80\x0d\x8b\x95\x45\xb5\x42\x67\xd8\xf9\xe9\x8d\x5d\x6a\xb4\x48\x02\xd9\x28\x4f\x97\x12\x09\xb1\xc5\xc5\x7e\x05\x06\xdd\xee\x59\x07\x4f\x70\xd5\xcb\x0a\x87\x73\x16\x26\x99\x8a\xf0\xd7\x77\xef\x76\x3c\xf5\x1a\xfb\x8b\xfc\x8d\x9f\x0b\xbe\xed\x45\x42\x12\x9e\xe6\x76\xa6\xf6\x97\x9d\x6b\x23\x95\xce\x16\xf6\x9a\xdf\x7f\x24\x90\xe3\xf0\xf0\xf0\x70\x48\x8e\xec\xa7\x5f\x7d\xff\x21\x2b\x9b\x7f\x87\x55\xdd\xc3\x57\xa9\xb5\xee\x3d\xfc\xaa\x90\xbd\x24\xad\x67\x73\x1f\x7a\x1e\x35\x4a\xa5\x05\xb5\x0e\x2f\xbf\xb7\xe3\xaf\x0b\x9c\x27\x3c\x9c\xa3\xbd\x42\x68\x23\x50\x2a\x83\x42\x56\x7b\x28\x42\x21\x31\x2c\x0b\xa3\x32\xae\xdb\x87\xa4\x78\xd3\xd9\x97\xd7\x0a\xf9\xde\x24\x4a\x1e\xed\xfa\x3c\xfa\xfc\xc2\x02\x2c\x58\x2a\xa2\x66\xbb\xec\x24\x0d\x2d\xb6\xef\x55\xf4\xff\x00\x79\x3b\xfb\x4b\xc0\xb7\x23\x5e\x82\xef\x4d\x3f\x4c\xc6\x7f\xfa\xc8\xec\xdf\x8f\x6a\x39\xb7\xef\x70\xf3\x2a\xd7\x5b\x66\xbd\x45\xe1\xdf\x00\x00\x00\xff\xff\x1f\x34\x42\x85\xd5\x09\x00\x00")

func templatesMakefileTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesMakefileTemplate,
		"templates/Makefile.template",
	)
}

func templatesMakefileTemplate() (*asset, error) {
	bytes, err := templatesMakefileTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/Makefile.template", size: 2517, mode: os.FileMode(420), modTime: time.Unix(1490303952, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesActionsAction_xTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x53\x51\x6b\xf2\x30\x14\x7d\xcf\xaf\x38\x48\x1f\xfd\xec\xbb\xe0\xc3\xc7\xa7\x88\xf8\xa1\xb0\xc9\x9e\xcd\xda\x6b\x97\x69\x6f\x4a\x9b\x6e\x48\xc9\x7f\x1f\x4d\x52\xe9\x56\x41\x11\xf6\x96\x9b\x7b\xce\xcd\x39\x27\x49\x21\x93\xa3\xcc\x08\x32\x31\x4a\x73\x25\x44\x1c\xe3\x9f\x4e\x09\x19\x31\x95\xd2\x50\x8a\xd7\x33\xcc\x1b\x61\xad\x73\xc9\x29\x96\x1a\xcf\xf3\x35\x96\xbe\xad\xcb\x09\xe6\x5b\x6c\xb6\x3b\x2c\xe6\xab\x9d\x10\x4d\x83\x88\x65\x4e\x98\xce\x30\xd9\xb4\x0b\x6b\x45\xd3\xfc\x41\x29\x39\x23\x44\x3c\x46\x54\xb8\xe6\x8a\x8b\xda\x74\x5d\x75\x40\x54\x4c\x16\x5c\xe7\xff\x95\xa1\x52\x9e\xda\x46\x1c\xc3\x83\xda\xfd\xaa\x3f\x45\x8d\x11\xb9\x23\xae\x92\x2e\x1a\xac\x75\xfc\xb6\xa6\x4e\x0c\x54\x05\xc9\x20\xae\xf3\xe0\xef\x43\x9e\x6a\x12\x89\xe6\xca\xdc\xa0\xce\xe0\xeb\x70\xdc\x4b\x4b\xec\x1c\x10\xa7\xbd\xe5\x70\x73\xe0\x7f\x5b\x9b\x3b\x02\x08\xa8\xc7\x13\xf0\x03\x1e\x8b\xe0\x1a\xf7\xfe\x0c\x7e\x2c\x83\xae\x6e\x90\xbf\x59\x55\xb9\xb7\xa5\x5c\x71\xd0\x65\x1f\x21\xcc\xb9\xa0\x21\xa5\x32\x65\x9d\x18\x34\x02\x00\xfa\xc9\xe2\xfb\xd3\xb2\x36\x20\xda\x88\x3a\xf5\xbe\xda\xb5\x83\xad\xc5\xfe\xbd\xd2\x3c\x1d\xf9\xcd\x27\xf9\x19\x50\xa3\xfd\x65\x76\xd0\x3e\x50\x1f\xae\x25\xc8\xd7\xbe\xba\xa5\x3f\x90\xee\x30\xe0\x91\xbf\xea\xe0\xaf\xfb\xf0\xe1\x29\xf8\xdf\xef\xbc\x14\xa7\x3a\x53\x8c\x44\x32\x8c\x3c\xd2\xc0\x44\xe0\x75\x26\xec\x57\x00\x00\x00\xff\xff\x17\x16\x94\x79\x41\x04\x00\x00")

func templatesActionsAction_xTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesActionsAction_xTemplate,
		"templates/actions/action_x.template",
	)
}

func templatesActionsAction_xTemplate() (*asset, error) {
	bytes, err := templatesActionsAction_xTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/actions/action_x.template", size: 1089, mode: os.FileMode(420), modTime: time.Unix(1490844495, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesActionsAction_x_customTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x54\x5d\xab\xdb\x46\x10\x7d\xd7\xaf\x38\xf8\xa1\x58\x41\x91\x42\x1f\x03\x29\x5c\x02\x85\x40\x69\x42\x68\x0b\xa1\x14\xb2\xd6\x8e\xa4\xb9\x5e\xed\x88\xfd\xb0\x31\xc6\xff\xbd\xec\x4a\xf2\x47\x2f\xb4\xd0\xb7\x7e\x5c\xb8\x46\x3b\x73\x34\x3b\x73\xe6\xe8\x4c\xaa\xdd\xab\x9e\xa0\xda\xc0\x62\x7d\x51\xf0\x38\x89\x0b\xd8\x16\x00\xb0\x39\x9f\x51\x7f\x9a\x21\x9f\x45\x02\x2e\x97\xa6\x15\x6b\x29\xa3\x37\x19\x33\x19\xe9\xb1\xe9\x39\x0c\x71\x57\xb7\x32\x36\x7b\x19\x95\xd5\xcd\x64\x62\xcf\xf6\xb5\xd7\xfb\xd7\xbd\x7c\xdb\x18\xe9\x37\x45\x59\x14\x4d\x83\x5f\x94\x61\xad\x02\xe1\xc8\xc6\xe0\xb0\x9e\xc2\x40\x60\x3b\xc5\x00\xf6\x98\x9c\x4c\xe4\xcc\x09\x9e\x42\x9c\x70\xe4\x30\xe0\x38\xa8\x40\x07\x72\x70\xd1\x90\xc7\x49\x22\x32\xda\xa6\xa2\x5f\x24\xa2\x55\x16\x86\xd4\x21\xd5\x62\x8f\x9d\x51\x76\x0f\xee\x32\xf2\xa8\x6c\x40\x90\x0a\xbb\xf4\xca\x1c\xb3\x44\x1a\x41\x40\xb6\x13\xd7\x12\x1c\xf9\xe0\x78\x61\xa2\x69\x30\x90\xa3\xd4\xcc\x31\x3f\x9c\x96\x1b\x1c\x85\xe8\x2c\x14\x6c\x1c\x77\xe4\x20\x1d\xc8\x39\x71\xbe\xc6\xc7\x30\x90\x3b\xb2\xa7\x6a\x45\x59\x36\xe8\xc4\xc1\xc7\xb6\x25\xef\x8b\x2e\xda\x16\x5b\xc6\xab\xc4\xec\x8f\x6a\x24\x5c\x2e\x1f\xd2\xd0\xe5\x95\x96\x6d\x89\x5f\x7f\xcb\x15\x71\xce\x0c\x93\x73\x1e\x6f\xdf\x61\x54\x7b\xda\x2e\xa9\x0a\x6f\xca\x9c\xcc\x3f\x4d\x83\xf7\xd1\x07\x19\x57\x36\x59\x2c\x5a\xd1\x94\x47\x58\x21\x4f\xd3\x44\x56\x2f\xcd\x42\xf9\x3c\x3f\xe9\x62\xcd\xcf\x2d\xe7\x13\x77\x30\x64\xb7\xe9\xe6\x12\xdf\xe1\xcd\xd2\x49\xfa\x5b\x06\x4b\xa9\x1c\xbb\x14\x77\x51\xcb\xa6\xb8\xfc\xd5\x92\x25\x86\xff\xc4\x96\xe5\x61\xcb\x1f\xf3\xd4\xff\xb6\x35\x7f\x8e\x76\xde\xb0\x8b\x36\x2f\x77\x36\x92\x79\x95\xe9\xdc\xf3\x81\xec\xf2\x5d\x4b\x5a\xeb\x2d\x78\x73\x92\x85\x30\xf5\x40\xd8\x53\x4e\x95\xe9\x8a\x6d\x82\xe2\xd5\xed\x85\xfa\xfd\xf5\xb1\x5a\x8a\xbf\xf8\xa2\x2a\x24\x67\x4a\xf6\x54\xff\x20\x7d\x4f\xae\xc4\xf6\xe5\x42\xaa\x99\xa8\x72\x19\x7d\xd1\xe6\xdb\x77\xf8\xe6\x05\xf4\x7c\x59\x29\xfc\x22\xd1\xdd\x11\xbf\x86\x7f\xf6\xb3\xc0\xbf\x1a\xe9\xbf\x42\x76\xcf\xd4\x06\x4c\xca\x7b\xd2\x60\x1b\x24\x27\x97\xce\x31\x52\x18\x44\x43\xd9\xf4\x7f\x4a\xbd\xf6\x6c\x7b\x70\x52\xe9\x98\x57\xbb\x96\xcd\xfc\xee\x68\x21\x9f\xf4\x8d\xdc\x91\xbc\x4f\xee\xcd\x33\xf7\x69\xde\x8e\xc9\xe8\x07\x8d\x72\xb8\x56\xd0\xec\x5b\xe5\x34\xe9\xfa\x0f\x6a\x58\xe7\x4e\xdd\x58\x99\x29\x79\x50\xf4\x23\x3a\xe9\x5d\xad\x1a\xcb\xb8\x4e\xb1\x89\x2b\x15\x0f\x35\xab\x3b\xb5\xfc\x44\x7e\x69\x26\xa4\xa7\xbf\xad\x97\x3a\x15\xfb\x5e\x5c\x76\x80\x2a\x7f\xb3\x7e\x90\x68\x34\x34\x79\xee\xed\xbd\xcd\x38\xf2\xd1\x24\x53\x48\x04\x44\x7f\x4f\x5f\x6a\xc2\xaf\xe4\xa5\x43\x03\xcd\x8e\xda\x20\xee\x54\xaf\x76\xa3\x05\x56\xc2\xd5\x45\x9a\xf5\xa6\xfb\x20\xdb\x83\xec\x69\x9d\x27\x2a\x83\xa7\x4f\x1f\xaa\xd9\x9f\xd8\xe3\x39\xfa\x90\x59\x4a\x77\xb0\xed\xeb\x3f\xd5\x7b\x22\xe9\x7f\xc1\xff\xe3\x05\xff\x7b\x00\x00\x00\xff\xff\x09\x17\xbb\x06\x5a\x09\x00\x00")

func templatesActionsAction_x_customTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesActionsAction_x_customTemplate,
		"templates/actions/action_x_custom.template",
	)
}

func templatesActionsAction_x_customTemplate() (*asset, error) {
	bytes, err := templatesActionsAction_x_customTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/actions/action_x_custom.template", size: 2394, mode: os.FileMode(420), modTime: time.Unix(1490838947, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCmdMainTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x5a\xef\x8e\x1c\xb7\x91\xff\xdc\xfd\x14\x75\x0d\x2b\xea\xb9\xb4\x7a\x22\xdf\xb7\x89\xf7\x02\x6b\x57\xb6\x17\xb6\x56\xc2\xee\xc6\xc1\x41\x12\x12\x4e\x37\x67\x9a\x37\x6c\xb2\x41\xb2\x77\x3c\x59\x0c\x90\x87\xf0\xc7\x7b\x80\x7b\x2e\x3f\xc9\xa1\x8a\xec\x7f\xf3\x67\x25\x3b\xc8\x25\x80\xb5\x4d\x16\x8b\xc5\xfa\xfb\x2b\x72\x1a\x56\x6c\xd8\x9a\x43\xcd\x84\x8a\xe3\xf9\x1c\x2e\x75\xc9\x61\xcd\x15\x37\xcc\xf1\x12\x96\x3b\x70\x15\x87\xef\x75\xcd\x54\x09\xdf\x6a\xb8\xbb\xfa\x1e\xbe\xf5\xd3\xda\xe4\x70\xf5\x16\x6e\xde\xde\xc3\xeb\xab\xeb\xfb\x38\x16\x75\xa3\x8d\x83\x34\x8e\x12\xae\x0a\x5d\x0a\xb5\x9e\xff\xb7\xd5\x2a\x89\xa3\x64\x55\x3b\xfc\x47\xea\x35\xfe\xa3\x6d\x12\xc7\x11\x53\x56\x40\xb2\x16\xae\x6a\x97\x79\xa1\xeb\x79\xbd\x6e\xdd\xdf\xe7\x38\x8c\xd3\xe3\x99\x0d\x09\x30\x6f\x64\xbb\x16\xea\x85\x2d\x37\x2f\xd6\xfa\xcb\x79\x29\x6c\xc3\x5c\x51\x71\x93\xc4\x00\x00\x8d\xd4\x6b\xf8\xf4\xb2\x20\xc4\x27\xe9\x6a\x6e\x2d\x5b\x73\x94\xe5\xf1\xf1\x05\x88\x15\xe4\x5f\x17\x4e\x68\x65\x61\xbf\x8f\xa3\xe4\xf1\x11\xf2\x77\x5e\x81\xb7\x5a\x3b\xd8\xef\xe7\xcc\xcf\x27\x7e\x05\x57\xe5\x59\xca\x42\x2b\xc5\x89\x3a\x39\x4d\x60\xb9\x79\xe0\x66\x5e\x39\xd7\x24\x83\x00\xf7\x46\xac\xd7\xdc\x9c\x97\xc0\x05\x82\xa9\x08\xb3\x38\x7e\x60\x06\x4d\x33\x9f\xc3\x0d\xab\x39\xf8\xb3\x82\x62\x35\x8f\x23\x1a\xb9\x00\xe2\x47\x7f\xef\xf7\x09\x91\xfe\xc8\x55\xa9\x4d\x47\xfc\x40\x5f\x71\x14\x46\xc3\x82\xf0\x35\x2c\x31\x56\x68\x35\xac\xa1\x4f\xb2\x4f\x37\xd5\x2f\xf4\x9f\xdd\xca\x2b\x6e\x0b\x23\x1a\x37\x5a\x5d\x0e\x43\xc4\x61\x4c\x12\xb8\x8c\x87\x90\xd3\x8c\xfc\xf8\xbe\xe2\x96\x43\xc9\x57\x42\x71\x78\x60\x46\xe8\xd6\x42\xa1\xa5\x36\x50\x68\x65\x1d\x53\xce\x42\xa7\x13\x29\x6a\x0e\x70\x01\xe8\x79\xf9\x25\x12\x61\x18\xa4\xc9\xda\x70\xae\x7e\x5f\x2d\x96\x92\x15\x9b\x64\x16\x47\x86\x97\x70\x8a\xd0\xf0\x12\xa7\x89\xfe\x1c\x1f\xbf\xde\x72\x77\x72\xbd\xe5\x2e\x99\xa1\xec\x6e\xd7\x70\x28\xa4\xf8\xda\xac\x2d\x58\x67\xda\xc2\xc1\x63\x1c\x5d\xea\x9a\x42\x10\xff\x67\x9d\x11\x6a\x1d\x47\x77\xed\x32\x0c\x5b\x78\xff\x31\x8c\xee\xe3\x78\xd5\xaa\x02\xd6\xdc\x21\x8b\x6f\x8c\xae\x2f\x7f\xb8\x4e\x67\x90\xfe\x7b\xe0\x9a\x01\x37\x46\x9b\x19\xb2\x15\x2b\x90\x5c\xa5\xda\xe6\x38\x33\x83\xaf\x2e\xe0\x25\x8e\x47\x86\xbb\xd6\x28\x50\x42\x06\x72\x9b\xdf\xf0\x6d\x9a\xec\x74\x0b\x75\x6b\x1d\xd8\x86\x17\x62\xb5\x83\x22\x08\xe6\x34\x08\xf5\xa0\x37\x1c\x58\x30\x1e\x1e\x78\x1f\x47\x0c\x0f\xb2\xb8\x80\xdf\x85\xed\x91\x7b\x10\x7b\x41\xc7\x09\x9b\xbf\x7f\xf9\x31\x8b\xa3\xf1\xa1\x16\xfd\xd4\x97\x0b\x9c\xdb\xc7\x9d\x58\x8c\x8e\xa1\x84\x1c\x1f\xf7\x8d\x0f\x57\x3c\xf1\x9d\x2b\x85\xa2\x33\x87\x18\xce\x7f\x7c\x99\x41\xff\xf1\x4a\x97\x3b\x1c\x18\xf4\xb0\x24\x09\xa7\xf3\x8f\xfb\x38\xaa\x27\xe3\x3f\xbe\x44\xe1\x71\x76\x01\xb0\xcc\xe6\x73\xb8\xe3\xbc\x04\xe1\x60\x2b\x5c\x05\x0c\xc8\x78\x56\x43\xcd\x8c\xad\x98\x94\x42\xad\x61\xab\xcd\xc6\x92\xf0\x25\x2f\x90\x1d\xa6\x44\x54\xe6\x15\x2f\x74\xc9\x0d\x2a\x9f\xe4\x9d\x91\x39\xb8\x31\x48\x54\xf2\x22\xf7\x04\x69\x3d\xfb\x23\x8d\xfe\xdb\x05\x9e\x98\xac\x83\x0e\x6e\x76\xb0\x32\xba\xee\x75\xf4\x1f\x1f\x61\x5b\x89\xa2\x02\x61\x61\x5b\x71\xc3\x29\x73\xb7\x22\x58\x23\x77\x1c\xad\xc6\x79\x6d\xd1\x56\x16\x13\x83\xab\x78\xed\xb9\x31\x0b\x5b\x2e\x25\xfe\xdb\x25\x90\x3f\xc1\x7d\x25\xd4\xda\xfa\x5d\x90\x17\x57\x6b\x8c\xa6\x52\xab\xe7\x9e\x13\x32\x62\x72\xcb\x76\x16\x5a\xcb\xc1\xe2\x29\xe2\x68\x74\x0a\x3a\xea\x9f\x55\x50\x47\xfa\xfe\xe3\x72\xe7\x78\x3a\x48\x3c\xcb\x4e\x1c\x6e\xe2\x7b\x9d\x03\xc6\x11\x6a\x70\xf0\x80\x3a\x83\xe5\xd4\x03\x1a\x2d\xe5\x9d\x58\x2b\x26\x6d\x5a\x30\x55\x70\x89\x91\xee\xf8\x4f\x2e\xbf\xa4\xcf\x6f\x5a\x55\x64\x50\x40\x51\x31\x85\x5a\xf3\xc4\x64\xfe\xe8\xab\x17\x45\x1c\x45\x7e\x59\x3a\xeb\x79\x62\x59\x4c\x89\x82\x75\x81\x83\xc7\x3a\x8c\xad\xde\x70\xa3\x53\x48\xbd\xce\xbf\x61\x8e\xc9\x94\x1b\xe3\x23\x81\xac\xc6\x1a\xd2\xa5\x50\x8e\x1b\xd3\x36\xce\xc6\x91\x75\xba\xb9\x44\xa1\x16\x17\x50\xb3\x0d\x4f\xa7\x12\x66\xf0\x72\x16\x47\x96\xfe\xce\x6f\xb4\x13\xab\x5d\xda\x2d\xc9\xc0\xee\x6c\xc1\xa4\xcc\xef\xae\xbf\xbd\x7f\x7d\xfb\x66\x32\x70\x7d\x73\x3f\xa3\x6d\x2f\x0d\x67\x0e\x23\x33\x68\x24\x0b\xae\xb2\x15\x52\xc2\x92\xa3\xf5\x28\x82\x83\xde\x9c\x37\xbc\x14\x1b\xde\xbb\x03\x08\xe5\x9d\xe0\x81\x2b\x07\x7a\x05\x0c\xbc\x48\x71\x54\xb8\x9f\xb2\x6e\xe9\xe2\xa2\xd7\xfa\x5f\x84\xab\xbc\xe6\xd3\x6e\xe8\x15\x2b\x36\x6b\xa3\x5b\x55\xa6\x33\x2f\xd9\xf7\xa2\xd8\x80\x5e\x21\xbb\xb5\x36\xba\x75\xe8\x61\x4e\x43\xc5\x54\x29\xbd\x0b\xfb\x6d\x2c\x30\xef\xb1\x61\x27\xc9\xa8\x28\x44\x6b\x7d\xc2\xf2\x19\x74\x0a\xf2\xbb\x5c\xfb\xcc\x44\xab\x7d\x72\x89\x23\xbb\x15\xae\xa8\x28\x95\xe4\x5d\x76\x7d\x8c\xa3\x82\x59\x0e\x49\xa8\x5a\xc9\x22\x8e\xa2\xc6\x08\xe5\x42\xad\x42\x5b\x7b\x8a\x8a\xcb\x66\x98\xfe\x8e\xcb\x66\x98\x13\x6a\xa5\x87\xb9\x51\x81\x1a\x48\x2c\xab\x1b\xc9\x89\x28\xe4\x60\x12\x64\x94\xfd\x66\x70\x71\x01\x7f\xf0\x11\x31\x38\x53\xf2\x5f\x5d\x02\x6e\x8c\x7e\x10\x25\x07\xa6\xc0\xa3\x0e\xd0\xa6\xb3\x16\x6a\xb0\x03\x71\xe0\xb7\x02\xa1\x9a\xd6\x7d\x50\xaf\x7f\x5a\x74\x23\xf5\xee\xaf\x7e\x25\x66\x6a\x74\x50\x2f\xef\x1d\xcd\x5e\x23\xf9\x91\x50\xef\xff\xf0\x71\xd0\x00\x22\x93\x05\x60\xe1\x66\xbc\xd6\x4a\xfc\x9d\x63\xfe\xc0\xe1\x38\x8a\x86\x68\xc1\x01\xcc\x77\x77\x04\x68\xd2\x01\xf8\xe0\xe0\x25\x2b\x2a\x4e\xce\x70\x22\x86\x8e\x82\x88\x84\x5c\xd5\x2e\x7f\x87\x82\x4a\x95\x26\xef\x3c\x4e\x18\x01\x17\x58\x6a\xed\x30\xf1\x7e\x77\x7f\xff\x2e\x88\x96\xe7\x39\x9d\x91\x80\x01\xe6\x47\xf2\x7b\xa9\x8b\x0d\xb4\xca\x09\xe9\xfd\x8c\xe4\x03\x5b\xb5\xce\x42\xa9\xb7\xd3\x54\x66\xf3\x1f\x84\x75\x5c\x7d\xad\x4a\x3a\x48\x7a\x22\x71\x9d\x12\xd7\xeb\xca\xb4\xde\x97\x56\x4c\x4a\x57\x19\xdd\xae\x2b\xac\x07\x2b\xd6\x4a\xb7\xf0\x82\xfd\x85\x3f\x37\x1c\x4c\xab\x14\x0a\xcf\x85\xab\xb8\x19\x8c\x9b\xa1\x75\x59\x67\xdf\x38\x8a\x7c\x02\x1c\x12\xd2\x71\xf5\xfb\x84\x4a\x57\xa3\x62\xde\xfb\x12\x84\x52\x07\x4b\x5d\xee\xe0\x41\x30\xb8\xbb\xbf\xba\xbe\x41\x7f\x32\xad\x3a\xe9\x6b\x0b\x78\x66\x13\x92\x24\x7f\x8d\xf5\xd4\x1b\x13\x0d\x15\x22\xac\xce\xef\xb1\x2c\x3e\x52\x82\x45\x65\x78\x16\x7f\xb5\x8e\x19\x47\x5a\x19\xa9\xd9\xb4\xea\xad\xe2\x6f\x57\x2b\x8f\xb4\xd3\x71\x78\x66\xb0\x3c\x50\x3a\x50\xc7\xe2\x63\xd7\x56\xba\x95\x25\x66\x33\xd3\x7a\x75\x61\xc5\x43\xee\xc7\x76\x21\xf1\xbc\x30\xe1\x14\x63\x69\x9e\xf4\x92\x2e\xc2\x26\x6e\x32\x3d\x40\xc0\xe8\xde\xf5\x52\xca\x8e\xff\xc2\x63\x8c\xbc\x68\x62\xdc\x56\x6d\x94\xde\xaa\xde\xa2\x84\x4d\xc8\x54\xde\x20\xb3\xae\xa4\x76\xc5\xee\x50\xf5\x35\xb6\x82\x1e\x55\x66\xb0\x3c\x44\x4f\x33\x8f\x9e\xd0\xac\xa7\x9a\xa3\xa2\xf4\x98\x6f\x08\xf6\x2b\xe6\x18\x42\x2a\xaa\x11\xd8\xa9\x61\xf8\xbf\x6a\x57\x2b\x6e\x78\xf9\x83\x46\x8d\xa1\xcf\xd2\xba\xa1\xb1\x43\x7f\xbe\x65\xdb\x74\x99\x5f\xf5\x63\x33\x0a\x1d\x6e\x40\xe6\xdf\xc8\xd6\x56\x01\x41\x79\xa5\x18\x6e\x1b\xad\x2c\x9f\x00\xb7\xdb\x30\x88\x3e\xf8\x86\x3b\xb6\x80\x00\x45\xfe\xf6\xb8\xff\xdb\x8c\x60\xa7\x63\xae\xb5\x0b\x48\xf4\x26\xc9\xba\x6a\xdd\x23\x17\xb2\x3c\x85\x84\x50\x4e\xd3\x97\x11\xeb\xca\x05\x80\x1e\xfb\xf8\x85\x82\x4c\xc7\x1e\xb4\xf0\x95\xea\x4b\xe0\x3f\x15\xdc\x5a\xc2\x41\x1d\x28\x04\xac\xce\x54\x4e\x09\xa4\x05\xe4\x28\x35\x15\x55\x1f\x32\x2f\x0a\x66\x31\x09\x68\x45\x56\xb3\xc4\x7f\xd9\x3a\x5f\x83\x85\x05\x74\xdd\x8c\xb6\x68\xb8\x59\x69\x53\x63\xd5\x83\x35\x13\x0a\xd1\x9f\xd2\x0e\x5c\xc5\x1c\xac\xb1\xec\x67\x54\x38\x85\x7b\x6e\x41\xa2\x2c\xeb\xae\x7b\x07\x44\x97\x18\xd9\x88\x72\x1c\x43\xe8\x36\x9f\xe3\x77\xa9\x11\xd2\xd2\x46\x5b\xb6\xcb\x3d\x70\x79\x7b\xf5\x16\x8d\xbc\xe5\x60\x5b\xc4\xfe\x81\x40\x58\x60\xb0\xd4\xce\x49\xae\x78\xb1\xc9\x30\x95\xac\x04\x96\x1b\x47\xfb\xda\x2d\x6b\x60\xc9\x8a\x0d\x04\xbd\x0d\x27\xe4\xc0\x9a\xc6\x68\x56\x54\x7d\x31\x5e\x06\x1f\xea\xbc\xca\x30\xb5\xe6\xf0\x85\xca\xe0\x8b\x06\x0d\x3a\x75\x31\x8a\xdf\xc7\x47\xf8\xa2\xc9\x6f\xd9\xb6\xeb\x5b\xa9\xa4\x62\xf1\x22\x0f\x08\x0d\x79\xee\xc9\x02\x0d\xd5\x36\xf4\xc5\xf3\x50\x75\x99\x13\x51\xe6\xcb\xe6\x79\x90\xda\x43\xd3\xa7\x58\x5d\xf6\x51\x90\x41\x51\x7e\x0e\x33\x8c\x9b\x3e\xbb\x8f\x82\x28\x70\x4a\x8b\x32\x03\x79\x26\xc3\x1f\x31\x63\xe7\x35\xe1\xf5\x49\xaa\x30\xad\x7a\xc3\x5d\xa5\x29\x00\x59\x7e\xdb\x86\xfa\x47\x69\xe0\xe2\x02\x12\xcc\x43\x49\xd8\xa2\xa7\x45\xd2\x7b\x9f\xa0\x88\x49\x08\xb4\xfc\x6d\xeb\x48\x7d\x28\x1c\x25\x45\x4f\x9f\xfa\x83\x09\xaf\xdb\xf3\x27\x08\x5c\x7c\x54\x62\xa7\x4f\xc9\x26\x99\x4c\x52\xb5\x81\x8b\x71\xe5\x09\x52\xcc\xe7\x7d\x06\xf1\xb1\xca\x6d\x2b\x51\xc4\xad\x61\x4d\xc3\xcd\x89\xa6\x2e\x74\x75\x1d\x73\x4c\x09\x11\x66\xc9\x45\x5f\xae\x08\xf8\x26\x34\x11\xc0\xe0\x02\x92\x87\x97\x34\x42\x79\x38\xbf\xe3\xaa\x4c\xc3\x16\xb3\xe9\x0d\xd0\x28\x49\x07\xf3\x20\x8a\x21\xa9\x47\xa9\x3a\xd4\x56\x4a\xd2\x5d\x28\xf8\xd6\x21\xf0\xda\x0f\x0d\xd0\xb8\xf5\x39\x55\x73\x86\xe6\xa7\x83\xfc\xbf\x3a\x9f\x4f\xee\x9a\xe6\x73\x78\xc3\xa8\xbb\x97\xda\x43\x90\x49\x22\xbf\xc1\x24\x24\x87\x34\x4e\xbd\xb1\x11\x4c\x22\x2a\xf4\xb8\xbb\x73\x62\x28\x99\x63\xa3\x44\xca\xb6\x7d\x1a\x3d\x5f\x35\xfe\x89\xe8\x1a\xc7\x83\x3f\xc8\x8d\xde\x66\xc0\xad\x63\x4b\x29\x2c\x66\xdf\x07\x26\x45\x39\x12\x31\xfe\xec\x00\x3c\xf6\xde\xe3\xed\xbe\xe5\x8e\x4e\x3a\x54\x35\x78\xe1\xc1\x45\xd7\x85\x77\x45\xda\x62\xdd\xb7\xd4\x60\x11\x14\x75\xa5\x6e\x1d\x62\x80\x46\x5b\xc7\x4b\x3f\xea\x01\xf6\xe7\xd5\xc9\x23\x33\xd4\xdc\x31\x6f\x00\xb6\x44\xde\x63\x48\xd3\x9b\x84\x88\x3a\x9b\xd0\x07\x76\xa6\xc1\x5d\x82\x57\xbc\xc6\x70\xc0\x5a\xfa\x09\xeb\x20\x49\x86\xd1\xe6\xd8\x27\x4d\xd3\x57\x81\xb0\xc7\xd9\x32\x30\xf1\xcc\x27\xea\x40\xe7\xb4\xbe\xe3\xc6\x9a\x40\x35\xa9\xd7\x88\x70\xc3\xa1\xbb\xf3\x8e\x8a\x47\xd7\xfb\xe6\xa3\xf6\x22\x6c\xfd\x2f\x29\x21\xf3\x39\xbc\x6a\x85\x2c\xc7\x56\x89\xa3\x88\x84\xe9\x65\xb9\xe1\xdb\x49\x0a\x0f\x02\xa5\x65\x46\x76\x9b\x9d\xce\xda\x08\x31\x31\x4f\xd3\x44\x46\xd7\x35\xb4\x09\x0d\x51\x6a\x0e\xc8\xf7\x4e\x20\x94\x38\x98\x83\x52\x73\xab\x9e\x3b\x50\x9c\x97\xc0\xa8\x17\xd0\x06\x0c\x67\x25\x48\xad\x9b\xb0\x76\xcb\x11\x3b\x78\xac\x64\xba\xbb\x2f\x84\x35\xfe\x99\x01\x47\x86\x74\x4c\xf0\x27\x2c\x1c\xf5\xe7\xb8\x6b\x06\x0d\xb3\x76\x44\x6b\xa1\xf7\x4c\x0f\x66\xb1\xfb\xe6\x06\x30\xfb\x05\x16\xae\xe2\xaa\x5b\xc6\x5c\x4f\xd8\x9b\x77\x08\x15\x5c\x10\x92\x35\x6e\x76\x4b\x3b\x84\xf6\x29\x75\x54\xcd\x0e\xcb\x14\xb5\x34\xe3\xcc\xdb\xdb\xeb\x0e\xdb\x86\x20\xe9\xa0\x8c\xb5\x06\x97\xdf\x72\x56\xfe\xa0\x75\xe3\x3b\x00\x19\xfa\xcf\xdb\x56\x1d\x37\x16\xc2\x41\xa1\xb1\xeb\x76\xdc\xc2\xdc\xf7\x16\xa1\xb5\x08\x9b\x3a\x2c\xc8\x03\xb7\xa3\x32\xfa\xeb\x8b\x4d\x17\xf5\x4f\x57\x9b\x50\x0b\x10\x52\x4e\xa3\x6e\xac\x8c\x81\xbe\xab\x48\xc7\x8a\xd5\xfe\xca\x6b\xc5\x0a\xfe\xb8\xf7\x99\x35\x5c\xbf\x8e\xee\x68\x31\x2e\x7e\x23\x80\xf7\x80\x63\x01\xfa\x34\x9a\x17\x2b\x38\x4e\x3e\x4f\x02\x89\x27\x40\xc8\x3e\x7e\x02\x49\x1c\x03\x89\x80\x23\xba\x4e\x73\x00\x12\x87\x38\x62\x50\x6b\x60\x8f\xfa\xec\xba\x51\x61\xa1\x31\xdc\xb9\x1d\x54\xac\xd8\xec\x32\xb2\x89\x6d\x0d\x47\xfb\x38\xea\x25\x3c\x18\xe7\xce\x71\x83\xc8\x9d\x5a\x86\x83\xdb\xdb\x0c\x7d\xad\x8b\x66\xa9\xf5\x06\xf9\xd3\x45\xdf\x96\xfb\x72\xc4\xd4\x0e\x36\x42\x95\x18\xb7\x09\xb6\x1f\x09\xac\x24\x5b\xfb\x46\x65\x1a\x49\x79\x9e\x23\x3b\x64\x13\x6e\x0b\xb7\x18\x7b\x3e\x0d\x08\x0b\xc1\x11\x63\xdf\x56\x30\x28\xb8\xc1\x3e\x83\x9a\x1a\xdf\x96\x18\xde\x48\x56\x50\x22\xd6\x4a\x62\x7b\xd5\x13\x55\xcc\x94\xd8\xa1\x94\x20\xe8\xbd\xa6\xe0\x36\x87\x3b\xed\xdb\x1e\x8d\x7d\x56\xe8\x1e\xfc\xb1\x1b\x6c\x60\xe6\xf3\xfe\x96\x50\xf1\xed\x09\x8a\x1c\xae\x9f\xd7\xd4\x81\xf9\x64\x44\x13\x92\x39\x6e\xb0\x31\xab\xa8\xce\x30\x07\x4b\x4c\x7d\x3e\x34\x1b\xa3\x1f\xb8\x02\x8d\x1a\xde\x0a\xcb\xbd\x7f\x1f\x17\x5e\xaa\xa9\x35\x6b\xde\x7b\x84\xf5\x71\xe4\xed\xb3\xb1\xca\x86\xf2\x1c\xde\x5f\x5a\x23\x33\xd0\x1b\x2a\xe7\xcc\xb1\xf7\x49\x6b\x64\xf2\xf1\x8f\x38\x44\x59\xfb\xb5\xbf\x75\x67\x85\x6b\x99\x94\x3b\x32\x92\x85\x2f\x11\xb3\xb4\xdc\x66\x64\xe4\x2d\xf7\xea\xf3\x69\x5d\x58\xd0\x8a\xff\x69\x08\xff\xd1\xf6\x37\x7c\xfb\xdd\xfd\xfd\xbb\xb4\x35\x32\x4f\xbd\xa8\xb3\xd9\xd8\xf3\xa6\xb4\x77\x84\x40\x46\x37\xe2\xc7\x37\x9a\x78\x0c\x02\x39\x8a\x94\x78\xad\x56\x1a\xe6\xf0\x1d\x67\x25\xa6\xda\x90\xeb\x17\x17\x90\x7c\x50\x49\xff\xfd\xfb\x0b\xca\x49\x77\xc4\x6e\x95\x26\x58\xcb\xfc\x6b\x10\x00\x3c\xb3\xf8\xff\x5f\xfe\xe7\x7f\x3f\xa8\x24\x03\x7a\x3c\xcb\xe8\xd1\x32\x03\x7a\x28\x9b\x9d\x65\xe3\x9f\x22\x17\x4f\xb0\xf1\x14\x9f\xc1\x28\x44\xe6\x13\x8c\x88\xe2\x93\x9c\x46\xba\x5a\x9c\xe6\x34\xa2\xe8\xb9\x9d\x01\xe1\x58\xf8\x31\x8d\x14\xba\x55\xa4\xd4\x54\x72\x35\xd0\xcc\x3a\xa4\xde\xe1\x27\x34\xc6\x59\xc9\x3e\x74\x4f\x92\xa7\x26\xfb\x6d\xd3\x67\xf6\x59\xf9\xcc\xce\x16\x30\x96\x19\xa5\x1b\x49\xb2\xdf\x0f\x7a\x18\x01\x36\x91\xc1\x17\xee\x18\xb0\x9d\xd9\xf2\x97\x9f\x7f\xfe\xe5\xe7\x7f\xfc\xf2\xf3\x3f\x82\x9a\x68\x6b\x3b\x1b\x6f\x9b\xf8\x7d\xfb\x37\xea\xb0\xeb\x30\x71\xf0\x18\x3c\x95\xaa\xab\x8f\xa3\xbf\x4f\x5f\x5e\xa1\x9a\x7d\x2f\x76\xa0\xe8\x40\xd4\xeb\x39\xdc\x56\xfc\x76\x35\x77\xbb\x9e\xd3\xf2\x54\x8e\x27\xd4\xcc\x8e\xae\x47\xfe\x59\x2d\xb3\x73\x5a\x66\xbf\x41\xcb\xfd\x9d\x7d\xea\xc5\x3a\x48\x28\x93\x27\x07\xaf\xd3\x90\x9b\x86\xae\x14\x21\xcf\xab\x9d\xe3\xc3\xc3\x02\xe1\xed\x37\x01\x6d\x1f\xf5\x8c\x9f\xd3\x9c\x9d\x7c\xf6\x8d\xa3\xc8\xeb\x71\xd1\xdd\xbd\xd3\x8b\x75\xc7\x7e\x01\x83\x24\x67\xd1\xc8\x90\xe5\x17\xfe\x49\xef\x4c\x65\xf0\x45\xbf\x1e\xf7\x57\x5e\x82\xa3\x2b\x06\x0f\x2b\x96\xd9\xb8\x51\x62\xa7\x2e\xcb\x4e\x7b\xc3\xd0\x24\xb1\xc3\x26\x29\xdc\xcf\x5f\x1c\xdc\x74\xc4\x51\xe4\xbf\x9f\x50\xfa\xf8\x4e\x89\x1d\xdc\xae\x7d\xee\xed\x54\x68\x93\xe0\x02\x46\xdb\x1d\x61\xd0\xa7\x33\xca\x70\x3a\x77\xfe\x74\x53\xfc\x85\x7d\x95\x1f\x78\xe2\x7c\xe3\x06\x70\x48\x3b\xd3\x16\xf0\xd7\x9f\x73\xbc\xef\xe4\xa0\x23\xe0\x3e\xbe\xc9\xff\xf3\xf4\x7a\x68\xf4\xcc\x47\xd8\x9d\x0d\xc8\xbd\x8b\xfa\x93\xa7\xb9\x56\x25\x57\x2e\xfd\x5d\x9d\x41\x02\x09\xfe\x07\x92\xcf\x09\x92\xf1\x7b\x9b\x77\xe1\x2e\x88\x67\x27\x6f\xa3\xa6\xef\xa5\xc8\x71\xcc\x21\x4c\x1c\x24\x00\xff\x7e\x3a\xa1\x4d\xfb\x5f\x23\xed\xf7\x80\xf3\x8b\x0f\xca\xe7\xd2\x11\x49\xff\x53\x91\x13\x73\x55\x58\xe3\xee\x2a\xbd\xb5\x1e\x17\xd5\x5c\xb5\x27\x48\xc3\x73\x2f\x51\x63\xe8\x4a\xb6\xeb\x7e\xb8\x04\x42\xad\xf4\x89\x25\x38\x3c\xa1\xc7\x01\x53\xd3\xab\xf4\xe8\x6e\x85\x3d\x30\x21\xd9\x52\xf2\x60\xa6\xf0\x8c\x1d\xfc\x2a\x1b\xff\xf0\x62\x1d\x10\x54\xf8\xe9\x13\x36\xf3\x08\x08\x4f\xec\x1d\xde\x6f\xbf\xea\xdc\x40\x9b\xce\x37\x14\xab\xf9\x7f\x4e\xc4\x62\x93\xf7\xdf\xbe\x2f\x5e\xa1\x17\x55\xdd\x2f\xa4\x7a\x89\x06\x56\x27\xb6\xc5\xa6\x8e\x78\x63\x0f\x7b\x78\x43\xc0\xac\xd5\x85\xa0\x1f\x0d\xf6\x9d\x42\x78\x56\x3c\xc1\x3d\xfc\x7c\x48\xf0\x92\x1e\x19\x99\x3a\x10\xaf\xbb\xfe\x12\xa7\xe4\x30\xad\x9a\x88\x61\x5a\xf5\xff\x24\xc5\xfe\xff\x02\x00\x00\xff\xff\xd7\xcc\xde\x65\x30\x29\x00\x00")

func templatesCmdMainTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesCmdMainTemplate,
		"templates/cmd/main.template",
	)
}

func templatesCmdMainTemplate() (*asset, error) {
	bytes, err := templatesCmdMainTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cmd/main.template", size: 10544, mode: os.FileMode(420), modTime: time.Unix(1490882515, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesConnectionCacheTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x93\x41\x6f\xe3\x36\x10\x85\xcf\xd6\xaf\x78\xf5\xa1\x90\x03\xad\x02\xf4\xb8\x45\x4e\x71\x11\x04\xd9\xc6\x05\x9a\x9e\x16\x7b\xa0\xa9\xb1\x44\x98\x1a\x6a\xc9\xe1\xaa\x6e\x90\xff\x5e\x0c\xe5\x24\xde\x45\x7b\xa3\x38\xe4\x9b\x8f\x6f\x9e\x26\x63\x8f\xa6\x27\xd8\xc0\x4c\x56\x5c\xe0\xaa\xba\xbe\xc6\x6d\xe8\x08\x3d\x31\x45\x23\xd4\x61\x7f\x82\x0c\x84\x87\x30\x1a\xee\x70\x17\xf0\xe7\xf6\x01\x77\x4b\x39\xc4\x16\xdb\x1d\x1e\x77\x4f\xf8\x6d\x7b\xff\x54\x55\x6e\x9c\x42\x14\xd4\x15\x00\xac\x0f\xa3\xac\x97\x55\x3a\xb1\x5d\x57\x65\x3d\xf9\xd0\x63\xdd\x3b\x19\xf2\xbe\xb5\x61\xbc\x3e\x16\xe5\xeb\xc9\xe7\xde\xf1\x87\xd4\x1d\x3f\xf4\xe1\x97\x6b\x1f\xfa\x75\xb5\x59\x80\x8c\x1d\x08\x2e\xc1\x20\xb9\x71\xf2\x84\x39\x9a\x69\xa2\x08\x13\x43\xe6\x0e\x06\xa3\x99\x30\x3b\x19\x74\x99\x85\xfe\x6e\x20\x01\x49\x42\xbc\x7c\x5d\x82\xe3\x4a\x4e\x13\x9d\x15\x93\xc4\x6c\x05\xcf\x05\x4b\x09\xdb\xdf\xf5\x6e\xf9\xec\x8c\x14\xd5\xcf\x49\xa2\xe3\xfe\xcb\xd5\xed\xbb\x49\x2f\x85\xea\x91\xe6\x45\x26\x92\xe4\xc8\x4a\xc7\x34\x5f\xb4\x83\xd5\x72\x75\xc8\x6c\xdf\x0e\xd7\x1b\x5c\x2d\xb7\x9e\xab\xd5\x72\x11\x3f\x97\x8d\xe7\x6a\xb5\xd2\xa6\x1f\x31\x9a\x23\xd5\xff\xdd\x7a\xd3\x54\xab\x97\x73\xff\x3b\x12\xcc\xce\x7b\xf4\x24\x08\x11\x8e\x9d\x94\x49\x29\x41\x8b\x7b\xc1\xde\x07\x7b\x4c\xc8\x2c\xce\xbf\x55\xd4\xc7\x48\xa6\x3b\xa9\xc6\xd3\x6e\xbb\x83\x0c\x2e\x2d\x4a\x7b\xc2\x37\x8a\x27\x38\xa6\xc3\xc1\x59\x47\x2c\xd8\x67\xc1\x4c\x60\x22\xf5\x79\x36\x27\x75\xd6\x87\x70\xcc\xd3\xa5\xb5\xaa\xe6\x18\x06\x32\xa8\x7a\x32\x07\xc2\x68\x98\x29\x36\xd0\xdc\x04\xf6\xa7\x82\xe8\x8c\x77\xff\x90\xe2\x8c\x08\x6c\xa9\x5d\x9c\xdf\xb1\x25\xcc\x21\xfb\x4e\x29\xfa\x10\x3a\x55\x3c\x37\x4f\xa2\x74\x67\x84\xc9\x1b\x4b\x0a\x51\xec\xbd\x64\x68\x54\x95\x0b\xdc\xa2\x9f\x27\x4d\xaf\xc1\x91\xca\x6b\xdf\x1f\x1a\xe9\x6b\x76\x91\x30\x65\x11\xc7\x3d\x0c\x1e\xe8\x54\x6f\x30\x92\x0c\x41\x61\xdf\xec\x3a\x8f\xd2\xb1\x50\x3c\x18\x4b\x0d\xe6\xc1\xd9\x41\xe5\xe6\x37\x28\x09\xe7\x10\x68\x42\xcb\xd0\x20\x83\x11\xb5\xda\x86\x71\x0a\x89\x3a\x84\xc3\xa5\x5e\x89\x57\xca\x76\x58\x0e\xde\x8b\x0a\x5a\xc3\xc8\xec\xbe\x66\x52\xaf\x3a\x62\x71\x87\xd3\x8f\x24\x33\x61\x36\x2c\xaf\x53\x40\x9e\xda\x25\x62\xb5\x3d\x47\x6b\xa3\xd1\xa8\x6d\x87\xab\xad\x11\xd3\xc0\x97\x5f\xae\xfd\x14\xfa\x9e\xe2\x06\xf5\x45\x9e\x1a\x50\x8c\x21\x6e\x34\x8d\xdf\x4c\x44\xc2\x65\xce\xcb\x56\x38\x62\x1f\x82\xaf\x56\xb6\xfd\x14\xec\xb1\xde\x54\x2b\x77\x40\x6a\xb4\x70\x03\xdb\xea\x4b\x3e\xdb\xae\x2d\x06\x7e\xf9\x55\xb7\x35\xca\xb6\xfd\x8b\xfd\xf9\xfc\x6b\xd0\x53\x03\x76\x5e\x13\xbc\xf2\xed\x1f\xd1\xb1\x78\xae\xd7\xb7\x91\xcc\x79\x08\x8f\x34\xe3\xbd\xff\x7a\x53\xad\x52\x21\xc4\xc7\x9b\xd7\xfd\xda\x76\x0d\xfc\x02\xa1\x95\x9f\x6e\x54\xf3\x7f\x5b\xb2\xf3\x45\xa1\x34\xfd\x11\x16\x37\x48\xd5\x77\xd7\xbe\x07\x7d\xf9\x37\x00\x00\xff\xff\x18\x6c\xbe\x80\x21\x05\x00\x00")

func templatesConnectionCacheTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesConnectionCacheTemplate,
		"templates/connection/cache.template",
	)
}

func templatesConnectionCacheTemplate() (*asset, error) {
	bytes, err := templatesConnectionCacheTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/connection/cache.template", size: 1313, mode: os.FileMode(420), modTime: time.Unix(1490288320, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesConnectionConnectionTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\x41\x4f\xdc\x4e\x0c\xc5\xef\xfb\x29\x9e\x10\xc7\xfd\x87\xc3\xff\x86\xd4\x03\x62\x11\x42\x20\x40\xed\x4a\x55\x6f\x78\x33\x26\x19\x98\xd8\xd1\x8c\xb3\xdb\x15\xca\x77\xaf\x66\x92\x6d\xd3\xf6\xda\xe3\x78\xec\xf7\x6c\xff\xdc\x53\xfd\x4e\x0d\xa3\x56\x11\xae\xcd\xab\xac\x56\x17\x17\xb8\x56\xc7\x68\x58\x38\x92\xb1\xc3\xee\x08\x6b\x19\xf7\xda\x91\x38\xdc\x2a\xbe\x6c\xee\x71\x3b\x7d\x6b\xac\xb0\x79\xc2\xe3\xd3\x16\x37\x9b\xbb\xed\x5c\x7e\x52\x83\x4f\xa5\xf4\x97\x3e\x74\xf7\xc6\xb5\xc1\x5a\xb2\xf2\xe5\x78\xcf\x41\x7b\x8e\x38\xf8\x10\x40\xce\xc1\x14\x87\x96\x05\x5e\x8c\x9b\x48\xe6\xa5\x01\xc1\x5a\x1f\x1d\x7a\x8a\x76\xcc\x26\x57\xcf\x77\x15\xae\x9c\x03\xc9\x11\xef\x5e\x1c\xf4\x15\x41\xa5\x41\xf0\x7b\x76\xd0\x88\x7a\x48\xa6\x1d\xfe\x3f\x95\xfd\xdd\x46\xca\x1e\x9a\xa5\x13\x92\xc5\xa1\xb6\x2a\x6b\xdf\x50\xdd\xc2\x4b\x32\x92\x9a\xb3\xee\x22\x01\x5f\xef\x1e\x1e\xb0\x63\xa4\x96\x22\x3b\x34\x41\x77\x14\xc2\x71\x8d\xa4\x25\x3c\x44\xce\x13\xe4\x41\xba\xc1\xf8\x3b\xa7\xdc\x0b\x99\x76\xbe\xce\xe2\x79\x56\xca\x3d\xa4\x3c\x65\x64\x08\xb3\x63\x57\xad\xec\xd8\xf3\x72\x77\xb3\xdf\xc7\x0a\x00\xae\xcb\x2c\xcf\x14\xa9\x4b\x25\xf0\xf1\xf1\x1f\x22\x49\xc3\x38\x97\x35\xce\x7b\x5c\x7e\x42\xb5\xa8\x1e\xc7\x92\x36\xa5\xe2\xbc\xaf\x1e\xa9\x63\x8c\xe3\xfc\xda\x66\xb3\x71\xc4\xcb\x5b\x52\xb9\x3c\x9b\x82\x9f\xe9\x30\x67\x9d\xbd\xfc\x34\x61\x71\x59\x6c\x2c\x68\x37\x64\x74\x82\x3a\xf7\x57\x48\xb6\x1a\xdc\x14\x8d\x74\x58\xee\xb9\x2f\x1d\xe3\x35\x6a\x57\xbe\xbd\xd4\xda\x65\xa0\x1d\xa7\x44\x0d\x67\xd1\x6d\xde\x6e\xa1\xbf\x63\xd8\x10\x85\xdd\xc4\x85\x10\x99\xc2\x52\x6e\x3e\xc5\x7c\x80\x71\x10\xf3\x1d\x57\xf8\xa6\x03\x52\xab\x43\x70\x10\xde\x73\x84\xf3\x91\x6b\x0b\xe5\x4c\xf2\x72\x33\x8e\x21\xf1\x44\x71\x02\xbf\x86\x4a\x98\xb4\x22\x37\x43\xa0\xb8\x70\xa9\x70\x95\x90\x86\xba\x5d\x83\xf6\xea\x5d\x66\x59\x6e\x50\x8e\xe8\x63\xe6\x67\x9e\x53\x56\xf5\x36\x63\x2b\x7b\xf9\x0d\xd8\x82\xcf\x9f\x6c\xfe\x39\x9a\x1f\x01\x00\x00\xff\xff\x86\xbf\x40\xa5\xc7\x03\x00\x00")

func templatesConnectionConnectionTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesConnectionConnectionTemplate,
		"templates/connection/connection.template",
	)
}

func templatesConnectionConnectionTemplate() (*asset, error) {
	bytes, err := templatesConnectionConnectionTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/connection/connection.template", size: 967, mode: os.FileMode(420), modTime: time.Unix(1490288327, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesConnectionConnection_customTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x55\x4d\x8f\xdb\x36\x10\x3d\x57\xbf\x62\x90\x43\x6b\x07\x8e\x8d\xe6\x58\xa0\x97\x6e\x90\x4b\x5b\x6c\x0e\x69\x81\xa2\x28\x90\x31\x39\x92\xa6\xa6\x48\x95\x1c\xae\xa2\x1a\xfb\xdf\x8b\x21\x25\x7f\xec\xa2\x17\x03\x96\x86\x8f\xf3\xde\xbc\x37\x1a\xd1\x9c\xb0\x23\x30\xc1\x7b\x32\xc2\xc1\x37\x0d\x0f\x63\x88\x02\x9b\x06\x00\x60\x74\xa1\x83\x37\x1d\x4b\x9f\x8f\x7b\x13\x86\xc3\x29\x0c\xe8\xed\x61\x74\xb9\x63\xff\x2e\xd9\xd3\xbb\x2e\xbc\x3f\xb8\xd0\xbd\x69\xb6\x4d\x73\x38\xc0\x43\x4e\x12\x86\x4f\x18\x71\x48\xc0\x09\xa6\x9e\x22\xc1\x1c\x32\x48\x4f\x60\xe9\x89\x5c\x18\x29\xc2\xc4\xce\x41\xab\x3f\xec\x01\xfd\x0c\xa6\x1c\x84\x31\xea\x6b\x61\x4a\x3b\x98\x7a\x36\x7d\x39\x3b\x85\xec\x2c\x78\x22\xab\x77\x48\x80\x9c\x08\x42\x84\x29\xc4\x13\x4c\x2c\xbd\xa2\x3c\x54\x16\x7b\x78\xf4\x04\xf4\x15\x87\xd1\x11\x0c\xdc\xf5\x02\x47\xaa\x77\x38\x26\x2f\xe0\xf8\x18\x31\x32\x25\x85\x48\x79\x54\xc2\xec\xbb\x9b\xbb\xa1\x5d\xc0\xd9\x77\x7a\x63\xb9\x42\x09\xbc\x42\xd0\xee\xb4\xaf\x1d\x1c\xb3\x80\x0d\xfe\x3b\x81\x09\xbd\x68\x93\x2e\x24\x02\x6e\x4b\x4d\xa4\x8e\x3c\x45\x14\x2a\x38\x55\xc0\x46\xe6\x91\xee\x25\x4b\x12\xb3\x11\x38\x17\xf9\x0f\x07\xf8\x23\xe4\xf8\x5a\x1b\x38\x92\x0b\x53\xf3\x5c\x25\xaf\xbc\x55\xed\xd2\x62\x2d\x36\xc1\x52\xa1\x71\xaf\xbb\x04\x98\x22\x6b\x17\x01\xda\xec\xdc\x0c\xec\x59\x18\x1d\xff\xab\x1a\x59\x88\x24\x39\x7a\x40\x45\x8e\x84\x76\x5e\xe5\x7e\xb8\x98\x04\xc2\xf1\x6f\x15\xba\x69\xb3\x37\xeb\xf3\x8d\xb1\xf0\xf6\x03\x0a\xee\x40\x4d\xa3\xce\xd9\xff\x12\xba\x8e\xe2\x16\x36\x6f\xaf\x87\x77\x40\x31\x86\xb8\x5d\x28\xaa\xf5\xe0\x87\x1f\xe1\xdb\x6b\xc5\xf9\xf9\x9e\xbc\x12\x51\x17\xad\x4f\x3f\xe3\xa9\x8a\x78\xb5\x2d\x58\x14\x2c\xed\x97\xe6\x59\x80\xbd\x84\x52\xf4\xaa\xed\x0b\x4c\x4f\x7e\x77\xcf\x7e\x86\x24\x28\xb4\x83\x94\x4d\x0f\x58\xf5\x44\x23\x19\x1d\xe0\xc8\xb7\x17\x2e\xe8\xd2\x73\xb4\x30\x62\x94\x79\xc5\xfd\xc8\x1e\x9d\x9b\x77\x30\x62\x4a\x70\x44\x73\x7a\xd1\xec\x0e\x3c\xbb\x32\x9a\x94\x8d\xa1\x94\xd6\x93\x8f\xd2\x53\x9c\x38\x51\xa9\x58\x84\x2a\x85\x2d\xb2\xcb\x91\x9a\xb5\xf2\xb7\x54\x15\xf8\xe2\x42\xf7\x65\xe1\x55\xee\x23\xfb\x8a\x39\x0c\x24\x7d\xb0\x45\x1d\xa5\xe8\x42\xd7\xa9\xdb\xd9\xb7\x21\x0e\x58\x52\xbf\xc0\x96\x50\x1e\x69\xf1\x00\xd9\xab\xef\x07\x4a\x49\x37\x05\xfb\xf2\x57\x27\xdc\x32\x39\xbb\xbf\x6d\x9a\xe5\x82\x60\x39\x19\x8c\x96\xec\xbe\xf6\xbc\xb8\x4a\x45\x28\xe4\x16\xeb\xfe\x8e\x8e\xad\x66\xa2\x9c\x7b\x5a\xff\xbd\x18\x2e\xa7\xc5\xfa\x6e\x86\x44\x92\xc7\xda\xd7\xd4\xa3\xd0\x13\x45\x88\xd9\x2d\x49\x1c\xb3\x4e\xbe\xa9\xd6\x01\x83\x1e\x1c\xe1\x53\x19\x53\x82\xa3\x43\x7f\x5a\xf3\xb8\x64\xb4\xc6\x76\x79\xa6\x39\xd6\xc1\x92\x2a\x63\x54\x86\x24\x91\x4b\x0f\x49\x31\xcb\x2a\xbb\xdb\x69\x7a\xc3\x1a\x18\xf0\x79\x38\x52\x84\xd0\xd6\xc1\xa5\x3b\x6d\x96\xaa\x97\x93\x2f\x09\xda\x18\xb8\x09\xc8\xf6\xa2\xca\x66\x0b\x7f\xfe\x55\x4d\x70\xfe\x9f\x48\x34\xdf\x5c\x81\x17\x4d\x7f\xa6\x19\x4c\x18\xc6\xc8\x89\x52\x99\x78\x99\x54\x2a\xf4\x2a\xc1\x41\x13\x94\x47\x40\xc8\x9e\xff\xc9\xa4\xca\xe7\xba\x2d\x08\x4d\x0f\x9c\xbc\xa0\x37\xa4\x5c\xf0\xf6\xeb\xa0\xf6\xd6\xa2\xba\x5c\x77\xf0\x7e\x35\x46\xba\x5a\x25\xe1\x50\xa7\xa7\xb1\x28\x2b\xad\x2f\xdb\x3b\xf5\x18\x09\xbe\xbf\x0b\x82\x7a\x52\x47\xaf\xc0\x3a\x08\x3d\xef\xe9\xab\x5c\xfc\x56\x50\x2d\xb7\x2d\x45\xdd\xbb\x0b\x62\xfd\x1c\xe8\x52\xc2\x9b\x97\x57\xe0\xfd\x55\x57\xdd\x48\x5b\xd5\x64\xb3\xd5\xdd\xaa\xc6\xbf\x68\xf9\xf9\xf1\xc3\x23\x60\x96\xf0\x6e\xd5\x0b\x42\xdb\xae\x65\x55\xb5\x8b\xc0\xe7\x33\xec\xaf\x43\x52\x58\x15\xfa\xf9\x79\x51\xfd\x93\x43\xb3\xae\xf2\xdb\x9d\xf3\x31\xfb\x6a\xa0\xc2\xf5\xd7\x12\xc5\x04\x3f\xe9\xfa\xfe\x2f\x00\x00\xff\xff\x8f\xd1\xfa\xbf\x7e\x07\x00\x00")

func templatesConnectionConnection_customTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesConnectionConnection_customTemplate,
		"templates/connection/connection_custom.template",
	)
}

func templatesConnectionConnection_customTemplate() (*asset, error) {
	bytes, err := templatesConnectionConnection_customTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/connection/connection_custom.template", size: 1918, mode: os.FileMode(420), modTime: time.Unix(1490839005, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServerHttpHandler_xTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x56\xd1\x6f\xdb\xb8\x0f\x7e\xb6\xff\x0a\xfe\x0c\xfc\x76\xf6\x90\xd9\xd8\x1e\x73\x28\x0e\x5b\x5b\x6c\xc5\xb6\xb6\x68\x73\xdb\xc3\xe1\xb0\x29\x32\x63\xeb\x22\x4b\x3e\x89\xae\x2f\x08\xf2\xbf\x1f\x28\x39\x69\x37\x64\xdb\x6d\x2f\xeb\x53\x2d\x91\xfc\x3e\x8a\x1f\xc9\xf4\x42\xae\x45\x83\xd0\x12\xf5\x69\x5a\x55\x70\x6a\x6b\x84\x06\x0d\x3a\x41\x58\xc3\x72\x03\xd4\x22\xbc\xb6\x9d\x30\x35\xbc\xb4\x70\x7b\xf6\x1a\x5e\xc6\x6b\xeb\x4a\x38\xbb\x82\xcb\xab\x05\x9c\x9f\x5d\x2c\xd2\x54\x75\xbd\x75\x04\x79\x9a\x64\xab\x8e\xb2\x34\xc9\xd0\x48\x5b\x2b\xd3\x54\x7f\x79\x6b\xb2\x14\x00\x20\x53\xb6\x52\x76\x20\xa5\xa7\x6f\x83\x54\x31\x7c\x96\xc6\xef\xed\x16\xca\xeb\x48\xeb\xc6\x5a\x82\xdd\xae\x12\x92\x94\x35\x3e\xfb\xa2\x81\xb4\xc6\x60\x30\x8a\x36\xbd\xb6\x0d\x64\x8d\xa2\x76\x58\x96\xd2\x76\xd5\x3a\x24\x50\xf5\x7a\x68\x94\x79\xe2\xeb\xf5\x93\xc6\x3e\xab\xb4\x6d\xa6\x98\xdf\x34\xed\xd0\x7b\xd1\x60\x96\x16\xe1\x99\x98\xc3\xa5\xe8\x10\x76\xbb\x57\xc2\xd4\x1a\x1d\x28\x0f\x02\xda\xf8\x91\xd2\xa6\xc7\x63\x46\x9e\xdc\x20\x09\xb6\x69\x22\xe1\xf1\x3d\xeb\xf2\x54\xc8\x16\xd3\x5d\x88\x7d\x89\xe3\x11\x4f\x87\x34\x38\xc3\x18\x06\xc7\x23\xa1\xd3\xd5\x60\xe4\x71\xdf\xfc\x08\x56\x01\x8f\x8f\x80\x6c\xd3\x24\xe2\xc0\xa3\xfd\xed\xe1\x72\x9b\x26\x89\x9c\x83\x9c\xa5\xc9\x6e\x62\x7a\x8b\xee\x0e\x5f\x2d\x16\xd7\x53\xde\x3e\x88\xc5\xe1\xdf\x03\x7a\xf2\x91\x51\xde\x1e\x43\x2a\xee\x7d\xf3\x31\xa8\xaf\xbc\x41\xdf\x5b\xe3\xf1\xbd\x53\x84\x6e\x06\x0e\x1e\x4f\xe7\x21\x5c\x11\xc9\x45\x1b\x98\x9f\xc0\xa3\xa9\x24\x07\x47\x26\xf8\x16\x49\xcc\xe1\x8f\x3f\x97\x1b\xc2\xfc\xe3\x76\xf7\xb1\x98\xa5\x49\x72\x4b\x82\x06\x3f\x87\xcc\xae\xb3\x40\x3f\x59\xce\x00\x9d\xe3\x30\x51\x8b\xe5\x0d\x8a\xfa\xb9\xd6\xb9\x2b\x5f\xd8\x7a\x53\xa4\x49\x55\xc1\xe2\xea\xec\x0a\x06\x8f\x20\x40\xab\x4e\x11\x38\x14\x35\x3a\x20\x0b\xbd\xc3\x3b\x34\x7c\xe2\xed\xe0\x24\x82\x20\x12\x72\xed\x7f\x4b\x13\xb5\x0a\xa1\xff\x77\x02\x46\x69\x26\x9d\x8c\x65\xc8\xe9\x55\xf0\xce\x43\x52\x91\xd1\x85\x21\x74\x46\xe8\xf0\x16\xee\xdc\x39\xeb\x8a\x34\x49\x1c\xf6\x7a\xf3\x5e\x51\x1b\x4e\xf2\x7d\xd2\x33\x18\x03\xeb\x68\xc2\x55\x0a\xa9\x44\xc6\xe5\xa9\xb6\x1e\xf3\x22\xe0\xbb\xf2\x2d\x52\x6b\x6b\x26\x91\x5d\x5f\xdd\x2e\xb2\xaf\xf3\x88\xd6\x97\x96\x9e\x6b\x6d\x47\xac\xbf\x45\x62\xd5\x51\x19\x8e\x57\x79\xd6\x45\xa4\xff\x7b\x6e\x80\xc1\xf8\xa1\xe7\x21\x80\x35\xac\xac\x83\xd8\x44\xb0\xef\xdf\xd9\x81\x59\xf1\x59\x12\x4b\x5b\x6f\x3e\x29\x2a\xe7\xf4\xee\xe9\x76\x97\x26\xdd\x27\xe7\xef\x9e\x72\x26\x7c\x3b\x87\x47\xec\x15\xeb\x39\x3d\xfa\xfc\x04\x78\xd2\x94\xbf\x9b\x4e\x38\xdf\x0a\x9d\x2f\x67\xd0\x15\xbf\xfe\xe7\x8a\xbc\x10\xf5\x5e\x6f\xdf\x5d\x88\xaa\x82\x03\x6e\x68\x84\x90\x94\x32\x64\x63\x5b\xa8\xa6\xa5\x69\x00\x04\xe3\xf7\x08\xd2\x0e\xba\x06\x71\x67\x55\x1d\x6c\x9e\x01\xfe\x23\xd1\xfb\x90\x05\xec\x63\x49\xa1\xb5\x07\x65\xa0\x45\x87\x30\x2a\x6a\x59\x91\x96\xc0\xae\xc0\x8f\x8a\x64\xfb\x44\x0a\xaf\x4c\x03\xd6\x00\x4f\x1e\x1f\xe2\x2f\x07\x62\x27\x6a\x95\x07\x29\x98\x36\x43\xf4\xe8\x56\xd6\x75\xc2\x48\x84\x46\x28\xc3\x65\x33\x96\x80\x5a\x41\xd0\x38\x14\x34\x03\x9e\xf5\x8a\x7e\xf1\xa0\x99\x4b\xb3\x1f\xf7\x20\x79\x39\x90\x85\x4e\x28\x43\x42\x99\x00\x43\x16\x6a\x0b\x8a\x22\xd0\x28\x36\xe5\x7d\xf3\xa8\x15\x8c\x08\x7e\xf0\x3d\xca\xc9\x20\x8c\xc9\xa5\x25\xd2\x68\x50\xae\x67\xd0\x3b\xbb\x52\x1a\x39\x02\xe3\xfa\x51\xf4\xb0\x14\x72\x0d\xd3\xbb\xdd\x67\x88\x20\xfa\xde\x59\x21\xdb\x34\x51\xa6\x1f\x28\x28\x63\x12\x57\xf9\x60\xc8\x5c\xf0\xe5\xf6\xab\xb2\xe0\x96\x09\x66\x33\x08\xa1\xbe\x43\x23\x3f\xda\xb5\x30\xfd\x3d\x90\x8c\xac\x43\x0a\x0f\x86\xf3\x99\x20\xf1\x6d\xe6\xa7\x07\x87\x19\xc8\xfa\xe7\x70\xd7\x4c\x8e\x17\x6d\x79\x89\xe3\x8b\x61\xb5\x42\x87\xf5\x1b\xdb\x34\xe8\xf2\xe8\xc0\x69\x1d\xe6\x6c\x5b\xca\xf2\x25\x52\x2e\xeb\x19\xe8\x78\xff\xf9\xa4\xdc\x83\x7c\x3f\xfb\x48\xb7\x7c\x63\x1b\x38\x01\x5d\xde\x92\x53\xa6\xc9\x7f\x24\x33\xfe\x37\xf6\xf2\xb9\x90\xed\x7e\x97\x81\x41\xac\xf7\xbb\x57\x87\x1c\x59\x9e\x52\xf4\x34\x38\x8c\xbd\x62\x07\xea\x07\xba\xd7\x7e\x67\xef\x30\x4a\x9e\x2c\x08\xf0\x1b\x23\xcb\x6b\x6b\x75\x50\x79\xe3\xc4\x12\xac\x41\x58\x39\xdb\xb1\xcc\x1d\x02\x32\x20\xa9\x2e\xb4\x98\x17\x77\xc8\xed\x2c\xb4\xb6\x92\xd7\x4a\x55\x71\x9b\x86\x3b\x61\x36\xec\xca\xdb\x88\x9b\x9e\x31\xe6\x70\x66\x43\x1b\x37\x16\x44\x1d\x8e\x95\x79\x80\xc9\x43\xc3\x0e\x04\x83\xa9\xd1\x79\x12\x26\x98\xb4\x76\x64\xec\x4d\x88\x3e\x5a\xb7\x0e\xdc\xc2\xa9\x3d\xf4\x25\x93\x41\xe4\x62\x4d\x81\x19\x7b\x54\x5a\xf3\x58\x1f\x84\xd6\x1b\xe8\xc4\x9a\x97\x64\xad\x82\x08\x78\xb2\xcc\x0b\xb8\xe0\x47\x21\xa7\xe4\x7a\x03\x4a\x39\x39\x8d\x85\x56\x90\x87\xb1\xdd\x3c\x98\x06\xe1\xb9\x18\x99\x13\x88\x9f\x97\xe7\x69\x12\x1b\x9b\xb5\x73\xa4\xc5\x9f\x87\x23\xee\x94\xf8\xee\x07\x9d\x45\xdb\xf2\x66\x30\x79\xd4\x9f\x8a\x5d\xae\x8b\x9f\xb0\x9a\xbf\x2c\xcc\xc3\xd5\x55\xa0\x0f\x27\x07\xfd\x04\x08\xce\xe4\xd3\x95\xb7\xd8\xf4\x38\x87\x2c\xa6\xf7\x21\xfc\xfa\xe0\xdf\x32\xc9\x3b\x74\x5e\x59\x33\x87\xec\xee\x69\x38\x88\xbb\xf1\xc0\x6c\xff\x73\xe7\x03\x4c\xa3\xe4\xed\x34\x48\x02\x4e\x01\xa1\x26\x2c\xbf\xb8\x07\x5a\xae\xf0\x88\x20\x85\x09\x63\x7d\x15\xeb\x84\xce\xb1\x08\xbf\xf8\x5c\x57\xaf\x8b\xc3\x6d\xbe\x2c\xd2\xdd\xbf\x01\x00\x00\xff\xff\xe2\x4a\x53\x6c\x59\x0c\x00\x00")

func templatesServerHttpHandler_xTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerHttpHandler_xTemplate,
		"templates/server/http/handler_x.template",
	)
}

func templatesServerHttpHandler_xTemplate() (*asset, error) {
	bytes, err := templatesServerHttpHandler_xTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/http/handler_x.template", size: 3161, mode: os.FileMode(420), modTime: time.Unix(1490810515, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServerHttpServerTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\x5d\x6f\xdb\x46\x10\x7c\xe6\xfd\x8a\x01\x61\x14\xa4\xc1\x92\x75\x1f\x85\x18\x45\x12\x05\x71\x91\xfa\x03\x96\x90\x3c\x06\x27\x72\x25\x5e\x4c\xde\xb1\xf7\x61\x4a\x10\xf8\xdf\x8b\x3d\xda\x92\x5e\xeb\x27\x6b\xe7\x66\x96\x3b\xbb\x33\xc8\xfa\x45\xee\x08\xad\xf7\x83\x10\x55\x85\xcf\xa6\x21\xec\x48\x93\x95\x9e\x1a\x6c\x0e\xf0\x2d\xe1\x9b\xe9\xa5\x6e\xf0\xd5\x60\xb5\xfc\x86\xaf\x33\x6c\x6c\x89\xe5\x23\x1e\x1e\xd7\xf8\xb2\xfc\x7b\x2d\x84\xea\x07\x63\x3d\x32\x91\xa4\x9a\x7c\xc5\x9a\xa9\x48\x52\xaf\x7a\x4a\x85\x48\xd2\xe3\x11\xe5\xd3\xdc\xf0\xd9\x18\x8f\x69\xaa\x6a\xa3\x35\xd5\x5e\x19\x9d\x8a\x3c\x7e\xc0\x03\x8d\x2b\xb2\xaf\x64\x61\xc9\x07\xab\x1d\x24\x34\x8d\xf1\x0b\xe1\x22\x22\xb6\x41\xd7\xe7\x87\x59\x8d\xeb\xb3\x4e\xf9\x59\xd6\x2d\xe5\xc8\xae\x99\x51\xce\x4f\x0a\x90\xb5\xc6\xe6\x38\x8a\xa4\xaa\xb0\x7e\x5c\x3e\x82\x64\xdd\x62\xe8\xc2\x4e\x69\x68\xa2\x86\x1b\x05\xad\xfe\x0d\x84\x38\x86\x37\xa0\xfd\x60\x1c\x45\xca\x26\x78\x28\xed\xc9\x6a\xd9\x75\x87\x02\xb5\xd4\x90\x5d\x87\xe0\x08\x12\xb5\xe9\x7b\xa3\x23\x4f\x24\xb2\x69\x2c\x16\xb7\x48\x17\x3c\xf0\xdd\x7a\xfd\x54\x3e\xb1\xe0\x34\xa5\xe7\xee\xbd\x7c\x21\xb6\xd6\x11\x6a\xa3\xb7\x6a\x17\xac\xdc\x74\x04\x67\x7a\x6a\xcd\x28\x12\x4b\xb2\x59\xab\x9e\x4c\xf0\x2c\xc6\x26\x96\x2b\xaa\x8d\x6e\x70\x3d\xff\x5a\x06\x2b\x79\xe2\xec\xd4\xe6\xf9\xcc\x99\xa6\x5c\x24\xa3\x55\x9e\xfe\xaf\xc8\x8f\x0b\x12\xab\x88\xa4\x0f\x7b\x66\x47\x3f\xdf\x5d\xbf\x0f\xfb\x2c\x17\x00\x50\x55\x30\x9a\xb0\x35\x76\xb6\x54\xc6\x35\x44\xe8\x78\xfc\x1d\x56\xea\x1d\xe1\x4a\x17\xb8\x1a\x58\xa5\xfc\x18\x71\x87\x69\x8a\x6f\xfa\xb0\x2f\xef\xa4\x6e\x3a\xca\xd2\x6a\xe6\xba\xea\x78\xc4\xd5\x50\x3e\xcb\xf1\x41\xf6\xc4\xc6\x15\xbc\xee\xb9\xca\xa5\x69\x9a\x29\x36\xab\xf3\xfc\xd4\x8a\x74\xc3\xaa\x22\x71\xdc\xe8\xb7\x8b\xfd\x1f\x45\x92\x7c\x6c\x1a\xbb\xc0\xf9\x8f\xd7\x54\x88\x24\x79\x53\x3a\x41\x7d\xd8\x73\xf9\xc2\xcb\x08\x5d\xec\x83\xe1\x4b\x97\x18\xbf\xb4\x9a\xf1\x7b\xb9\xbf\x23\xd9\x90\xfd\x74\xf0\xe4\x16\xb8\xc1\x87\x0f\xf8\xf3\x8f\x42\x24\x13\xef\x96\x2f\x1b\xae\x80\x56\x9d\x98\xe2\xdd\xff\xa3\x76\xad\xc7\x68\xe5\x30\x90\x85\xb4\x26\xe8\xe6\x2d\x02\x4a\xef\x20\xf5\x7c\xc2\x18\x95\x6f\x63\x26\x2d\xb9\xc1\x68\x47\x30\x9b\x5f\x54\x7b\x18\xce\x4c\xcc\x71\x8c\x87\xa5\xa1\x3b\xfc\x50\xbe\xfd\xc2\xb4\xec\xf4\xfa\xba\x27\xe7\xe4\x8e\xca\xe7\xb7\x4a\x81\x39\x5c\xa7\x42\x1c\x6d\x8e\xcc\x45\x6c\xde\x05\xca\xa8\x87\x5b\x86\xe6\xff\xb3\xfc\x02\x5d\x79\xe9\x83\xc3\x2d\xd2\x48\x4d\x45\xd2\xc7\x65\xbc\x77\xfd\x7e\xc3\xbb\xf8\x64\x9a\xc3\xe2\x34\x01\xfb\xb5\x3e\x0c\xb4\x40\x3a\x1f\xc0\x4f\x7a\x25\xed\x53\xae\x7f\x27\xeb\x94\xd1\x0b\xa4\xaf\x37\xe9\xec\xde\xa6\xc0\x4f\xd6\xfc\xe5\x8c\x2e\xef\xa5\x75\xad\xec\xb2\x3e\xe7\x43\x5c\xb7\x64\x09\xca\x41\x1b\xdf\xb2\x6d\x23\xc5\xa4\x36\x06\x6a\x0b\xdf\x2a\x87\xad\x54\x9d\xfb\x4b\x24\xe3\x7c\xe8\xd9\x26\x17\xd3\x7f\x01\x00\x00\xff\xff\x5e\xcc\x55\x90\x06\x05\x00\x00")

func templatesServerHttpServerTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerHttpServerTemplate,
		"templates/server/http/server.template",
	)
}

func templatesServerHttpServerTemplate() (*asset, error) {
	bytes, err := templatesServerHttpServerTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/http/server.template", size: 1286, mode: os.FileMode(420), modTime: time.Unix(1490810497, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTriggersTrigger_xTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x58\x5f\x6f\x1b\xb9\x11\x7f\x8e\x3e\xc5\x54\x70\x2f\x52\xb0\xde\xed\x15\xe8\x8b\x72\x7e\xe8\xc5\x6e\x6a\x9c\x2f\x39\x38\x46\x8a\x02\x05\x72\xd4\x72\x76\xc5\x33\x97\xdc\x90\x5c\xc9\xaa\xa0\xef\x5e\xcc\x90\xab\x3f\xd6\x1f\x07\x01\xea\x87\x64\x97\x1c\xce\xfc\x66\x38\x33\xbf\x59\xb5\xa2\x7c\x14\x35\x42\x70\xaa\xae\xd1\xf9\xc1\xa0\x28\xe0\x9d\x95\x08\x35\x1a\x74\x22\xa0\x84\xe9\x12\xc2\x0c\xe1\x17\xdb\x08\x23\xe1\xbd\x85\x4f\xd7\xbf\xc0\xfb\xb8\x6d\x5d\x0e\xd7\x1f\xe1\xc3\xc7\x07\xb8\xb9\xbe\x7d\x18\x0c\x54\xd3\x5a\x17\x60\x34\x00\x00\x68\xb5\xad\x61\x58\xab\x30\xeb\xa6\x79\x69\x9b\xe2\x91\x75\x14\xad\xee\x6a\x65\x2e\xbd\x7c\xbc\xac\xed\x5f\x0b\x6d\xeb\x21\xcb\xbf\x2c\x2a\x95\x6f\x45\x28\x67\xe8\xbe\xf5\x44\x83\xde\x8b\x1a\x87\x83\x28\xbf\x5a\x41\xfe\x5b\x74\xfa\xde\xda\x00\xeb\x75\x51\x5a\x63\xb0\x0c\xca\x9a\xe1\x60\x3c\x18\xac\x56\x70\x61\x44\x83\x30\xb9\x82\xfc\x03\x3d\xac\xd7\x83\xd5\xea\x12\x9c\x30\x35\xc2\x85\xc9\xe0\xa2\xe5\xcd\x5b\xd3\x76\xa1\xdf\x55\x15\x5c\xb4\xf9\x8d\xe9\x9a\x3b\x15\xd0\x09\x4d\x1b\x45\x01\x51\x88\xd6\xfd\xae\x16\x95\xc1\x05\x9b\x38\x7a\x68\x83\x61\xbd\x7e\x88\x37\xc3\x6a\x68\x19\x7b\x4c\xa0\x3c\x08\x03\x68\xba\x26\x5d\xd4\x5c\xe8\x0e\x07\xa5\x35\x3e\x6c\x34\x9c\x53\x70\x05\xf1\x3d\xd9\xfe\x4c\xc7\x7b\x77\xd0\xc8\xf3\x8f\x07\xd1\xf8\xd8\x85\x6f\x08\x47\x92\xfa\xce\x78\x6c\xbc\x89\x6a\xbe\x23\x1e\x70\x56\xc5\x77\x47\x24\x81\x64\x45\xfb\x21\x07\x89\x95\x32\xe8\xb9\x86\x14\xaf\x54\xd6\xf1\x5b\x7f\x60\x8b\x69\x10\x96\xed\xb1\xf5\xa8\xc9\x07\xd7\x95\x01\x56\x9c\xc9\xbb\x77\x00\xfb\x29\xb9\x5e\x27\x09\x0a\x66\xef\x5a\x7c\x7b\x20\xfd\xeb\x35\xfc\xfe\x87\xb7\x66\x32\x8c\x8b\xf7\x62\x91\xa4\x86\xbf\x6f\x74\x27\xc7\x4e\xb8\x96\xae\x71\xd7\x37\x1b\x97\x9e\x3b\xf7\xa2\x6f\x49\xd5\x37\x38\xb7\xcd\xb0\xff\x93\x7b\x5b\x50\x20\xfa\x96\x78\x0a\xf6\x3e\xe0\xaf\x1d\x76\x08\xe5\x4c\x18\x78\x73\xca\x45\x16\xdc\x36\xb0\x9d\xc7\xfc\x7a\xf3\xc8\x42\x0d\x06\x01\xa9\x71\xe5\x49\xc7\xcd\x1c\x4d\xf8\x15\x83\x48\x98\x3f\xe0\xe2\x08\x28\x87\xa1\x73\xc6\x83\x00\x83\x0b\x58\xad\x9e\xef\xb7\xce\xb6\xe8\xf4\x12\x94\x51\x41\x09\xad\xfe\x8b\x12\xa8\xad\x3b\x14\x72\x09\xc1\x82\xeb\x4c\x3e\xa8\x3a\x53\x1e\xb7\x30\x92\xc7\x71\x67\xe7\x41\x8f\x8f\x85\x25\xc5\x2e\x62\x86\x1f\x0e\x05\xe2\xfe\x26\xbe\x13\x68\xc4\x23\x8e\xce\x47\x39\x83\x1f\xc7\xd9\xe6\xdc\x16\xeb\x04\xe4\x76\x99\xb0\x4e\xf8\xdf\xb8\xd6\x27\xc2\x27\x4a\x8b\x85\xd2\x1a\x7c\x37\x6d\x54\x00\x71\x3a\x61\xad\x09\x36\x15\x75\x40\x67\x84\x8e\x20\x33\x58\xcc\x54\x39\xa3\x1d\x03\xd3\xae\xaa\xd0\x79\x48\x92\xf8\xb4\x2b\x19\xa3\x3c\x0a\xc7\x7c\x19\x33\x94\x91\x8d\xca\x2b\x51\xe2\x6a\x3d\x4e\xf1\x0a\x79\xcc\xb6\x9f\x2e\xc1\xe6\xa3\x37\x27\x6a\x73\xdc\xbb\x14\x6c\x1b\x5d\x2a\xb5\xf5\x78\x06\x31\x0b\xb5\x0e\xe9\xce\x38\x7d\xfe\xb0\x53\x0f\x95\xb3\x0d\x20\x1d\x50\xa6\xce\x5f\xc0\x1c\x6c\x3b\xea\x61\xb2\xb9\x51\x02\xdb\xa3\xb9\xef\xcc\x9d\xb5\x2d\x65\x59\xec\x1a\xa1\xaf\x37\x23\x61\xaa\x6d\xf9\xe8\xa1\x33\x41\xe9\xbd\xcd\xd6\x6a\xad\x4c\x4d\x1d\xbe\xb4\x4d\xab\x31\x20\x58\x07\xe8\x9c\x75\x3e\x87\xdb\x10\xb1\xf3\xf9\x17\x20\x26\x00\xa3\x32\x3c\x41\x69\x4d\xc0\xa7\x90\xbf\x8b\xff\x67\xb4\x60\xe0\xcd\x76\x1e\xa0\x9d\xf4\x98\xa5\xde\x7d\x18\x6e\x6e\xb9\x19\xd0\xa8\x43\xf3\x4e\x7e\x67\xa3\x25\x46\x97\x62\x51\x14\xf0\x30\x53\x1e\x82\x6a\xd0\x81\x92\xca\x36\x4c\x57\x30\x55\x01\xac\x94\x70\x09\x2a\xd0\x0a\x79\x3d\x54\xc6\x07\x61\x02\x04\x55\x3e\x0e\xa3\xf4\xe0\x55\x51\xc0\xcf\xc2\xab\x52\x68\xbd\xcc\x40\x81\xb4\xe6\x35\x5d\x13\x4a\xca\xae\x85\x50\xdb\xd6\x5b\x29\xe7\x03\x30\x85\x11\x74\xb0\x55\x8c\x26\x1b\x27\x21\x15\xe8\x4c\xa5\x1c\xb2\x5e\x3a\xaa\x1c\x7a\x50\x4d\x83\x52\x89\x80\x64\x82\x13\x18\xe7\xe8\x96\x20\xbb\xa4\x29\xcc\xd0\xa1\xa8\x02\xba\x9c\x4f\x7e\x42\x9c\xc0\x2c\x84\xd6\x4f\x8a\x62\xb1\x58\xe4\x0e\xa5\x54\x81\xc7\x31\x57\xd4\x56\x0b\x53\x17\xa5\x6d\x1a\x34\xc1\x17\x7f\xab\xff\x32\xb3\xae\x20\xb7\xd0\x7d\x59\xa8\x30\xfb\x92\x5c\xfd\xe2\x83\x70\xa1\x90\xc2\x3e\x7d\xc5\x65\xd1\xc7\xec\xdf\xb6\x8b\x37\x6b\x8d\x5e\x82\x47\xa4\xb6\xcc\xa7\x81\x80\xd0\x90\x41\x8e\xf5\xed\x24\xb2\x91\x8c\x41\xbc\xa5\x94\x9d\x0b\x3d\x84\x4a\xa1\x96\x19\x58\x02\xbf\x50\x5c\x02\xca\xc7\xf0\xcf\x85\x51\x5a\x0b\x0a\xca\xca\xa3\xc6\x32\xac\x12\xbb\x50\x98\xd2\x1c\x93\xff\x53\xf8\x5e\x1b\x91\x0b\x21\x20\x3e\xa2\x78\xe6\x1f\x70\xf1\xc0\x88\x46\xfc\xfa\x09\x4b\x6b\x24\xbc\x89\x9b\xd7\x29\x6e\x23\xce\x9d\xbc\x57\x32\x1e\xbf\x85\xb7\x5b\x12\xda\x76\x39\x9b\x3a\x18\x3a\xc7\x06\xf2\xfb\xce\x8c\x28\x1d\x53\xf6\x71\x96\x8d\x37\xe2\xaa\x62\xc9\x3f\x5d\x81\x51\x1a\xb6\x6a\xe8\x8f\x32\xf1\x37\xa7\x4c\xa8\x46\xc3\x1b\xce\xc4\xc5\x4c\x69\xa4\xc2\x33\x54\x4a\x9b\xba\xe3\xec\x4e\xee\x3e\x2f\x97\x09\xfc\xd9\xff\xc7\x0c\x19\x50\xce\x5a\x46\xe3\xf1\x9e\x19\x2a\x21\x65\x3a\xdc\x2c\xae\x37\x4f\x21\x8f\x2d\x2c\x76\x23\xba\xce\x3b\x14\xf3\x14\xfd\xce\x04\xdb\x95\x33\x94\xa0\x95\xc1\x8c\x52\x70\xb7\xed\xee\x16\x7f\x9a\x2b\x52\x0b\x4d\x5f\x21\x7e\xe9\x03\x36\xf9\x60\x63\x2d\xde\xde\x4e\x10\x4a\xe1\xa9\x45\x96\xe1\x29\xbf\xb6\x06\x47\xe3\xc9\x1e\xf0\x44\x3a\xb4\x7d\xe3\xdc\x68\xeb\xd5\x91\x4b\x5f\xaf\x9f\x6b\xe5\x1c\xc8\xdf\xed\xab\x2c\x0a\xf8\x17\xd5\x8c\x8a\x95\xeb\xe9\xb6\x6c\x0b\x53\x51\x3e\xf6\xe8\x83\x6d\x8f\x86\x8f\xce\xde\xbe\x96\xd0\x79\x84\x4a\x68\x1d\x66\xce\x76\xf5\x8c\xb3\x3c\x83\x69\x47\xd5\x0c\x35\x06\x0f\x95\x16\x75\xbd\xfd\x28\xd3\xdc\xca\xf7\xc0\xa3\x91\x3b\x80\x93\x3b\xc6\x86\x53\x2e\x49\xac\x44\xa7\xc3\x81\x2f\x77\x47\xc0\x67\x9b\x56\xcc\x97\xc0\x97\x15\xe2\x2b\x97\x57\xcf\xff\xe7\x73\xe4\x10\xe5\x7a\x8f\x85\xef\x51\x48\xb6\xbe\xed\xea\x19\x0f\x28\x64\x29\xb2\x83\xe0\x94\x4f\xd6\xa8\x96\x1d\x96\xa8\xe6\x28\x69\x0e\x11\x31\xc3\x0f\x88\x0e\x16\xc2\x47\x5a\x92\x2f\x90\x44\x02\x70\x9c\x25\xf4\xe9\x3e\x5f\x6d\x9e\x4e\xe7\x64\xca\xe7\xc9\x15\xfc\x74\x99\xd8\x71\x3f\xf6\xaa\xea\x65\xae\x8e\x55\x36\xf4\x7c\x12\xe7\x4d\x83\x7a\xc7\xaf\x0c\x16\x08\xb5\x0d\xfc\x25\xd4\xb4\x61\x79\x19\xd7\x2f\x29\x7c\x19\x78\x4b\xfb\x53\xa1\x34\x99\x00\x6a\xc1\x60\x2c\x28\xef\x3b\xf4\x07\x56\x52\x8d\x18\xa5\xf7\xb6\xd6\xcf\x0a\xc9\xb7\xd6\x78\xfe\x76\x3b\x36\xfd\x1d\x82\xa7\x21\x7d\x02\xc3\x61\xc6\x15\x83\x20\x95\xe4\xfc\xf4\x98\x0a\x9f\x06\x6e\xc5\x64\xc3\x3f\x35\x4c\xb1\xb2\x54\x06\x1e\xb1\xe1\x51\x8a\xd9\x60\x8a\x91\xef\xd0\x73\x02\x5a\x07\x1a\x6b\x51\x2e\x99\x12\x0f\x7d\xb9\xbd\x3e\x67\xf2\xf6\xfa\xd0\xe0\x81\x8a\xf7\xce\x76\xed\x79\x3d\x49\xe4\x1b\x94\xc5\x21\x6d\xd2\xb7\xfc\x83\xfd\x5f\x79\x42\x0d\x39\xcf\xa8\xc0\x3f\xca\xb4\xcb\x94\xd3\xa5\x6d\xc8\x65\x1e\xb8\x83\x85\x56\x78\x4f\xfd\x41\x68\x4b\x69\x6f\xfb\xaf\xb1\xda\x46\xa9\xc3\x8a\xdc\xbf\xc1\x66\xf7\xea\x3e\xff\x78\x78\x61\x9f\xd1\x79\x65\xcd\x04\x86\xf3\x1f\x87\x87\x50\xd3\x7d\xa6\x7e\xfd\x85\xe7\xc7\x23\x62\x3f\x5b\xb9\x9c\xc0\x0f\x7d\xbe\x64\x67\x10\xf5\x93\x38\x39\xd2\xd7\x78\xf2\xeb\x71\xb7\xff\x0f\x5e\xbd\x82\x2d\x0f\x32\x63\xee\x7c\x9c\x30\xfd\x34\xe3\xb7\xfb\x24\xf9\x2a\x9e\xd9\xe5\xc7\x7b\xea\x1d\x38\x47\x99\x6a\xd9\xa3\x91\xbb\x1c\x99\x20\x10\x1b\x46\x2e\x1c\xf7\x5a\x52\x85\xa0\x73\x09\xca\x01\x53\x9c\xe2\x9f\x98\x3f\xe5\x0c\xa9\xbf\x12\x23\xfe\xfd\x1f\x0f\x37\xf7\xec\x62\x1a\xca\xa7\x58\x8a\x2e\x0d\xec\x6d\x37\xd5\xca\xcf\x78\x60\xe0\x69\x4e\xf9\x48\x2e\x9c\xec\x14\x1b\x4f\x63\xfe\xb6\x21\x3f\xb7\x15\x66\xca\xd4\x9b\xef\x90\xe4\x58\x9a\xf1\x16\xc8\xdf\x55\xe0\x3b\x87\xb0\xc0\xd7\x73\x04\xe9\x44\x9a\xa4\x44\xe8\xbb\xcc\x56\xba\x14\x86\xed\xe5\x47\x3c\x8a\x63\xe9\x82\xc7\x57\x0b\x5f\x3b\x95\xba\xcc\xe6\xd3\x10\x7c\xa0\xae\x9e\x2a\xa4\x55\x2d\x66\xa0\x91\xe7\x55\xaa\x69\x6d\x7d\xc8\xe1\x50\xf1\x6b\xc7\xba\x29\x2e\x42\x69\x9b\xbe\xa6\xfb\xbf\x93\x6c\xbe\x1e\xbc\x5a\x0f\xd6\xff\x0b\x00\x00\xff\xff\xa9\x5c\xeb\x11\xe6\x14\x00\x00")

func templatesTriggersTrigger_xTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesTriggersTrigger_xTemplate,
		"templates/triggers/trigger_x.template",
	)
}

func templatesTriggersTrigger_xTemplate() (*asset, error) {
	bytes, err := templatesTriggersTrigger_xTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/triggers/trigger_x.template", size: 5350, mode: os.FileMode(420), modTime: time.Unix(1490889433, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTriggersTrigger_x_customTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x55\x4d\x8b\xdc\x46\x10\xbd\xeb\x57\x3c\xf6\x10\x66\x8c\xac\x31\x39\x1a\x1c\x08\x3e\x2d\x84\x38\x38\x4e\x20\x84\x80\x5b\xdd\x35\x52\x67\x5a\x55\xa2\x3f\x56\x1e\x96\xf9\xef\xa1\x5a\x9a\x8d\x17\xdb\xf9\xb8\x85\xcd\x1c\x66\xa4\xae\xea\x57\x1f\xef\x55\xcd\x6c\xec\xc9\x0c\x84\x1c\xfd\x30\x50\x4c\x4d\xe3\xa7\x59\x62\xc6\xae\x01\x80\x39\xc8\x80\x9b\xc1\xe7\xb1\xf4\x9d\x95\xe9\x70\x92\xc9\xb0\x3b\xcc\xa1\x0c\x9e\x9f\x27\x77\x7a\x3e\xc8\xd7\x87\x20\xc3\x4d\xf5\xbf\xb9\xbf\x47\xf7\xc3\x8a\xf9\x56\x24\xe3\x72\x39\x58\x61\x26\x9b\xbd\xf0\x4d\xb3\x6f\x9a\xc3\x01\x3f\x9b\xe0\x9d\xc9\x84\xc5\x87\x80\xbb\xeb\x5b\x1e\x09\x9e\xe7\x92\xe1\x13\xe6\x28\x33\xc5\x70\x46\xa2\x5c\x66\x2c\x3e\x8f\x58\x46\x93\xe9\x8e\x22\x62\x09\x94\x70\x96\x82\xea\xcd\x0a\xfa\x8b\x14\x58\xc3\x08\x64\xee\x14\xcb\x27\xf4\xc1\xf0\x09\xfe\x58\x3d\x17\xc3\x19\x59\x5a\xf4\x7a\x65\x3d\x63\x22\x87\x2c\x20\x3e\x4a\xb4\x84\x48\x29\x47\x5f\x73\x4d\x8a\x39\x52\x24\x4d\x66\xa9\x0f\xe7\x2d\x42\xa4\x5c\x22\xc3\x80\xcb\xd4\x53\x84\x1c\x41\x31\x4a\x4c\x1d\xde\xe4\x91\xe2\xe2\x13\xb5\x57\x2f\xf6\x01\x47\x89\x48\xc5\x5a\x4a\xa9\x39\x16\xb6\xd8\x79\x3c\xd3\x4e\x7d\x6f\x26\xc2\xe5\xf2\x6e\x6d\xfe\xad\xd6\xbe\x7f\xe8\xce\x6e\x8f\x5f\x7f\xab\xc0\xb8\xaf\xcd\x5d\x83\xe0\xe5\x2b\x4c\xe6\x44\xbb\xcd\xd8\xe2\xc5\xbe\x9a\xeb\xd7\xe1\x80\xd7\x25\x65\x99\xae\x6d\xf5\xc2\xb0\xe2\xa8\xd6\x72\x75\xf9\x76\x9e\x89\xdd\x15\xd0\xa4\xda\x08\x72\xcd\xd5\xbe\xe6\x5e\xdf\xfc\x11\x81\x78\xb7\xba\xee\xf1\x0d\x5e\x6c\xd9\xe8\x67\xab\x71\x35\xd6\xd3\x4b\xf3\xd1\x39\xfb\xd0\x5c\xfe\x8e\x71\x29\xf9\x7f\x41\xb9\x7c\x8e\xf2\x37\xb5\xf8\xa7\xc9\xf9\xdb\xc2\x88\x85\x53\x65\x79\xdb\x2f\x2b\x15\x4e\x28\x81\x25\xa3\x0f\x62\x4f\x09\x86\x1d\x84\xc3\xf9\x13\x77\xcc\x12\x82\xe7\x01\xc2\x84\xec\x27\x52\xdc\xdb\x2a\x16\xcf\x99\xd8\xad\x5c\xf6\x04\x6b\x42\x20\x87\x63\x94\x09\x9e\x93\x77\xa4\x1c\x19\x04\x91\xb9\xc5\x32\x7a\x3b\x62\x34\xec\x54\x44\xa9\xf4\x93\xcf\x59\x71\x35\x56\xa4\x54\x42\xae\xe4\x6b\x22\x27\xa2\xb9\x9a\xa2\xb1\x27\x05\x59\x46\x62\x8d\xa2\x21\x56\x91\x4d\x94\x47\x71\xdd\x46\x6c\xfe\x1c\xb1\x7b\x2d\x7f\x67\xf3\x07\x58\xe1\x4c\x1f\x72\xf7\x7a\xfd\x6d\xf5\x80\xf1\xec\xcf\xad\xa8\x96\xed\xb1\xdd\xf6\xdf\x03\xe0\xe3\xdd\xd0\x42\xd7\xb1\xee\xe4\xee\x3b\x59\xa3\xec\xbe\x28\xaa\x76\xa5\x68\xbf\x51\xb7\x8e\x4b\xfc\x54\x17\x3f\xa5\x75\x0e\xdf\x07\x19\xde\x43\xfa\xdf\xc9\x66\xcc\x26\x25\x72\xda\x64\xa9\xc6\x2d\xc5\xad\xf2\xda\x27\xc3\x67\x4d\x67\xd0\x5e\x79\x1d\xa6\xa9\x0a\xef\x0a\x5b\x07\xbd\xa7\x4d\x16\xe4\xd6\x71\x56\xac\x89\x52\xd2\xbf\x1c\xcf\xf5\x55\x4b\x3a\x7a\x0a\xee\xd1\x28\xf9\xfc\x80\xe0\x7c\xb2\x26\x3a\x72\xdd\x23\xc9\xab\x1c\xba\x1f\x03\xd1\xbc\xab\x4d\xeb\x6e\x39\x53\xbc\x33\x61\xaf\xd6\xdb\x3a\xed\xf1\x41\x48\x3a\x3d\x09\x25\x6d\xb2\x48\x7a\xaf\x6a\x48\x6f\xb4\x28\x6c\x65\x9a\x48\xd7\x85\x12\x1c\x3c\xd3\xa6\xe2\x77\x94\xf2\x3f\x92\xf1\xbf\x51\xf1\x5f\x0a\x47\x23\xfe\x97\x94\xb3\x2d\xe8\x97\xaf\xf0\xd5\x97\x6e\xdc\x5f\x9e\x8e\xc6\x3e\x5e\x66\xb2\xf5\xa3\x2e\xb5\x3f\x02\x00\x00\xff\xff\xd0\x38\x5f\x15\x2b\x09\x00\x00")

func templatesTriggersTrigger_x_customTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesTriggersTrigger_x_customTemplate,
		"templates/triggers/trigger_x_custom.template",
	)
}

func templatesTriggersTrigger_x_customTemplate() (*asset, error) {
	bytes, err := templatesTriggersTrigger_x_customTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/triggers/trigger_x_custom.template", size: 2347, mode: os.FileMode(420), modTime: time.Unix(1490888066, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTypesSdk_fileTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8e\x4d\x4e\xc3\x30\x10\x85\xf7\x39\xc5\x53\x0e\xd0\xee\xd9\xd6\x50\x45\x91\xda\x45\x8a\x58\x12\xc7\x9e\xa4\xa6\x89\x27\xb2\xa7\x94\x08\x71\x77\x64\x43\xa1\xea\x72\x7e\xde\xf7\xbe\x59\x9b\x93\x1e\x08\xb2\xcc\x14\x8b\x62\xbd\xc6\x86\x2d\x61\x20\x4f\x41\x0b\x59\x74\x0b\xe4\x48\xa8\x79\xd2\xde\x62\xcb\x68\x54\x8d\xed\xcf\x99\xc3\x0a\x6a\x8f\xdd\xfe\x80\x47\x55\x1d\x72\xbc\x51\xf5\x93\x1b\x09\x2e\x42\xa3\xd3\xd1\x19\xf4\x69\x4e\x05\x98\x03\xbf\x3b\xfb\x4f\x6d\x54\xbd\x42\x25\xb0\xd4\xeb\xf3\x28\x11\xc2\xd0\xe8\x1d\x8d\x16\x3d\x87\x9c\xf4\x7a\xa2\x04\x4e\xf5\xb7\xb7\x94\x37\xec\x85\xbc\xc4\x0c\xb9\x70\x38\x45\x58\x17\xc8\xc8\xb8\xe0\xe2\xe4\x78\xab\xfe\x42\x1d\x9e\xab\xbf\x68\x47\x51\x12\x96\x3e\x66\x0a\x8e\xbc\xa1\x22\x2b\x5e\xfd\xa3\x84\xb3\x11\x7c\x16\x00\x90\x36\x3b\x3d\xe5\xad\xf3\x03\xda\xb7\xc8\xfe\xa1\x4c\x7a\xaf\xc9\xaf\x6c\xf3\xdb\xe6\x57\xe7\xee\xed\x6a\x59\xb6\xc5\xd7\x77\x00\x00\x00\xff\xff\xab\x35\x10\x3d\x70\x01\x00\x00")

func templatesTypesSdk_fileTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesTypesSdk_fileTemplate,
		"templates/types/sdk_file.template",
	)
}

func templatesTypesSdk_fileTemplate() (*asset, error) {
	bytes, err := templatesTypesSdk_fileTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/types/sdk_file.template", size: 368, mode: os.FileMode(420), modTime: time.Unix(1490835058, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTypesType_xTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x51\xbb\x6e\xf2\x30\x18\xdd\xfd\x14\x47\x28\xd3\x2f\xfe\x64\x47\x62\x2a\x14\x21\x2a\x90\x0a\xea\x8c\x89\xbf\xd0\xb4\x8e\x1d\xd9\x4e\x2b\x64\xe5\xdd\x2b\x1b\x03\x29\x6a\x97\x6e\xdf\xed\x5c\x7c\xdc\xf2\xf2\x9d\x1f\x09\xee\xd4\x92\x65\xac\x28\xf0\xa0\x05\xe1\x48\x8a\x0c\x77\x24\x70\x38\xc1\xbd\x12\x56\xba\xe1\x4a\x60\xa1\xb1\x9d\xad\xb0\x38\xaf\xb5\xc9\x31\xdb\x60\xbd\xd9\x61\x3e\x5b\xee\x18\xf3\x1e\xd9\x9a\x37\x84\xc9\x14\x79\x2c\xfa\x9e\x79\xff\x1f\x86\xab\x23\x21\x53\x63\x64\x6d\x5c\x3e\xd6\x24\x85\xbd\x5b\xd7\x63\x64\x11\x9b\xb5\xf9\x5c\x75\xcd\x53\xed\xc8\x70\x19\xae\x8a\x02\x57\xf2\xbe\x0f\x25\x5d\x04\x50\x5b\x70\x05\x52\x5d\x93\x3c\x7f\x70\xd9\x11\x2b\xb5\xb2\xee\x77\xd4\x14\xe7\x3e\x89\xbc\x04\xcc\xc5\x0f\x29\x71\xab\xc2\x30\xe9\x7f\x93\x44\xd9\x59\xa7\x9b\x18\xdd\x20\x30\x5d\x55\xd0\x55\x0c\xcd\xb6\x54\xb2\xb8\x1e\x62\xad\x33\x5d\xe9\xe0\x19\x00\xfc\x18\xce\x56\x1b\x47\xe2\x16\xd1\xe5\xb0\xae\x62\x32\xcd\x81\xc4\x6d\x9c\xa6\xeb\x4e\x4a\x7e\x90\x41\xe1\x9f\xf7\xc9\x77\x78\x61\x9b\xef\xc2\xdf\x2e\x95\x23\xa3\xb8\x0c\xcd\x00\x4c\xd2\x0e\xdb\x40\x94\x6c\xfe\x95\x19\xfb\x37\xab\xd5\x64\x74\xbe\x78\xe6\x9f\x89\x70\xb4\xbf\xbe\x23\x85\x7a\xd7\xf6\x5f\x01\x00\x00\xff\xff\x97\x7d\xb6\x0a\x8c\x02\x00\x00")

func templatesTypesType_xTemplateBytes() ([]byte, error) {
	return bindataRead(
		_templatesTypesType_xTemplate,
		"templates/types/type_x.template",
	)
}

func templatesTypesType_xTemplate() (*asset, error) {
	bytes, err := templatesTypesType_xTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/types/type_x.template", size: 652, mode: os.FileMode(420), modTime: time.Unix(1490288348, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesVendorGitkeep = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func templatesVendorGitkeepBytes() ([]byte, error) {
	return bindataRead(
		_templatesVendorGitkeep,
		"templates/vendor/.gitkeep",
	)
}

func templatesVendorGitkeep() (*asset, error) {
	bytes, err := templatesVendorGitkeepBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/vendor/.gitkeep", size: 0, mode: os.FileMode(420), modTime: time.Unix(1490194044, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/Dockerfile.template": templatesDockerfileTemplate,
	"templates/Makefile.template": templatesMakefileTemplate,
	"templates/actions/action_x.template": templatesActionsAction_xTemplate,
	"templates/actions/action_x_custom.template": templatesActionsAction_x_customTemplate,
	"templates/cmd/main.template": templatesCmdMainTemplate,
	"templates/connection/cache.template": templatesConnectionCacheTemplate,
	"templates/connection/connection.template": templatesConnectionConnectionTemplate,
	"templates/connection/connection_custom.template": templatesConnectionConnection_customTemplate,
	"templates/server/http/handler_x.template": templatesServerHttpHandler_xTemplate,
	"templates/server/http/server.template": templatesServerHttpServerTemplate,
	"templates/triggers/trigger_x.template": templatesTriggersTrigger_xTemplate,
	"templates/triggers/trigger_x_custom.template": templatesTriggersTrigger_x_customTemplate,
	"templates/types/sdk_file.template": templatesTypesSdk_fileTemplate,
	"templates/types/type_x.template": templatesTypesType_xTemplate,
	"templates/vendor/.gitkeep": templatesVendorGitkeep,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"Dockerfile.template": &bintree{templatesDockerfileTemplate, map[string]*bintree{}},
		"Makefile.template": &bintree{templatesMakefileTemplate, map[string]*bintree{}},
		"actions": &bintree{nil, map[string]*bintree{
			"action_x.template": &bintree{templatesActionsAction_xTemplate, map[string]*bintree{}},
			"action_x_custom.template": &bintree{templatesActionsAction_x_customTemplate, map[string]*bintree{}},
		}},
		"cmd": &bintree{nil, map[string]*bintree{
			"main.template": &bintree{templatesCmdMainTemplate, map[string]*bintree{}},
		}},
		"connection": &bintree{nil, map[string]*bintree{
			"cache.template": &bintree{templatesConnectionCacheTemplate, map[string]*bintree{}},
			"connection.template": &bintree{templatesConnectionConnectionTemplate, map[string]*bintree{}},
			"connection_custom.template": &bintree{templatesConnectionConnection_customTemplate, map[string]*bintree{}},
		}},
		"server": &bintree{nil, map[string]*bintree{
			"http": &bintree{nil, map[string]*bintree{
				"handler_x.template": &bintree{templatesServerHttpHandler_xTemplate, map[string]*bintree{}},
				"server.template": &bintree{templatesServerHttpServerTemplate, map[string]*bintree{}},
			}},
		}},
		"triggers": &bintree{nil, map[string]*bintree{
			"trigger_x.template": &bintree{templatesTriggersTrigger_xTemplate, map[string]*bintree{}},
			"trigger_x_custom.template": &bintree{templatesTriggersTrigger_x_customTemplate, map[string]*bintree{}},
		}},
		"types": &bintree{nil, map[string]*bintree{
			"sdk_file.template": &bintree{templatesTypesSdk_fileTemplate, map[string]*bintree{}},
			"type_x.template": &bintree{templatesTypesType_xTemplate, map[string]*bintree{}},
		}},
		"vendor": &bintree{nil, map[string]*bintree{
			".gitkeep": &bintree{templatesVendorGitkeep, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

